# ------------------------------------------------------------------------------
#  File:         logging.yaml
#  File Type:    ESPHome YAML Include
#  Purpose:      Common ESPHome logging subsystem configuration
#  Version:      0.7.0
#  Date:         2025-07-24
#  Author:       Roland Tembo Hendel <rhendel@nexuslogic.com>
#
#  Description:  Provides global and module-specific logging configuration for ESPHome nodes.
#                Enables serial and OTA log output, controls verbosity, and allows
#                custom actions on log message reception for diagnostics and automation.
#
#  License:      GNU General Public License v3.0
#                SPDX-License-Identifier: GPL-3.0-or-later
#  Copyright:    (c) 2025 Roland Tembo Hendel
#                This program is free software: you can redistribute it and/or
#                modify it under the terms of the GNU General Public License.
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
#  YAML linter configuration
#   - Disables quoted-strings rule for improved readability
#   - Ensures that string values do not require unnecessary quotes, improving
#     readability and maintainability of the YAML configuration.
# ------------------------------------------------------------------------------
# yamllint disable rule:quoted-strings


# ------------------------------------------------------------------------------
#  ESPHome logging subsystem configuration
#   - Enables serial and OTA log output for diagnostics and monitoring.
#   - Controls global and module-specific verbosity for fine-grained logging.
#   - Can trigger custom actions on log message reception (e.g., publish firmware version).
#   - Parameters:
#       level: Global log level (NONE, ERROR, WARN, INFO, DEBUG, VERBOSE)
#       logs.main: Module-specific log level for 'main'
#       on_message: List of actions to perform on log message reception
# ------------------------------------------------------------------------------
logger:
  level: DEBUG           # level: Global log level (NONE, ERROR, WARN, INFO, DEBUG, VERBOSE)
  logs:
    main: DEBUG          # logs.main: Module-specific log level for 'main'

  #  brief Action on log message reception
  #   - Publishes firmware version to log on message
  on_message:
    - lambda: |-
        ESP_LOGI("main", "Firmware version: ${version}");
