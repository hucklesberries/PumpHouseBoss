#!/bin/bash
# ------------------------------------------------------------------------------
#  @file        configure.sh
#  @brief       Interactively generate a .makefile for the project
#  @details     This script interactively generates a .makefile and substitutes
#               template variables in main.yaml to produce a customized ESPHome
#               device configuration.
#
#  @author      Roland Tembo Hendel
#  @email       rhendel@nexuslogic.com
#
#  @license     GNU General Public License v3.0
#               SPDX-License-Identifier: GPL-3.0-or-later
#  @copyright   Copyright (c) 2025 Roland Tembo Hendel
#               This program is free software: you can redistribute it and/or
#               modify it under the terms of the GNU General Public License
#               as published by the Free Software Foundation, either version 3
#               of the License, or (at your option) any later version.
#
#               This program is distributed in the hope that it will be useful,
#               but WITHOUT ANY WARRANTY; without even the implied warranty of
#               MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#               GNU General Public License for more details.
#
#               You should have received a copy of the GNU General Public License
#               along with this program. If not, see <https://www.gnu.org/licenses/>.
#
#  @note        Co-developed with ChatGPT by OpenAI.
# ------------------------------------------------------------------------------


# Display friendly intro for the user
echo "This script will generate a new .makefile for your ESPHome device."
echo "Press Enter to skip optional values."

# Create the .makefile with header notice
# Why? Because we're about to overwrite it â€” and we want users to know it's generated.
echo "# ------------------------------------------------------------------------------"   > .makefile
echo "#  This file was auto-generated by configure.sh. Manual edits may be overwritten." >> .makefile
echo "# ------------------------------------------------------------------------------"  >> .makefile
echo "" >> .makefile
echo "" >> .makefile

# Define sensible defaults for unattended users
default_device_name="sysmon-ph"
default_friendly_name="Pumphouse System Monitor"

# Prompt for device name
read -p "Device Name (no spaces) [default: ${default_device_name}]: " DEVICE_NAME
DEVICE_NAME=${DEVICE_NAME:-${default_device_name}}
echo "DEVICE_NAME    = ${DEVICE_NAME}" >> .makefile

# Prompt for internal node name
read -p "Node Name (no spaces) [default: ${DEVICE_NAME}]: " NODE_NAME
NODE_NAME=${NODE_NAME:-${DEVICE_NAME}}
echo "NODE_NAME      = ${NODE_NAME}" >> .makefile

# Prompt for user-friendly display name
read -p "Friendly Name [default: ${default_friendly_name}]: " FRIENDLY_NAME
FRIENDLY_NAME="${FRIENDLY_NAME:-${default_friendly_name}}"
echo "FRIENDLY_NAME  = ${FRIENDLY_NAME}" >> .makefile

# Prompt for upload path
read -p "Upload path [node_address (FQDN or IP) or serial port, default: COM1]: " UPLOAD_PATH
UPLOAD_PATH="${UPLOAD_PATH:-${DEVICE_NAME}.local}"
echo "UPLOAD_PATH    = $UPLOAD_PATH" >> .makefile

# Optional static IP config
read -p "Do you want to configure static network settings? [y/N]: " USE_STATIC
USE_STATIC=$(echo "$USE_STATIC" | tr '[:upper:]' '[:lower:]')

# If user answers yes/y, gather static IP details
if [ "$USE_STATIC" = "y" ] || [ "$USE_STATIC" = "yes" ]; then
    echo ""
    read -p "Static IP Address: " WIFI_STATIC_IP
    [ ! -z "$WIFI_STATIC_IP" ] && echo "WIFI_STATIC_IP = $WIFI_STATIC_IP" >> .makefile

    read -p "Gateway: " WIFI_GATEWAY
    [ ! -z "$WIFI_GATEWAY" ] && echo "WIFI_GATEWAY   = $WIFI_GATEWAY" >> .makefile

    read -p "Subnet: " WIFI_SUBNET
    [ ! -z "$WIFI_SUBNET" ] && echo "WIFI_SUBNET    = $WIFI_SUBNET" >> .makefile

    read -p "Primary DNS: " WIFI_DNS1
    [ ! -z "$WIFI_DNS1" ] && echo "WIFI_DNS1      = $WIFI_DNS1" >> .makefile

    read -p "Secondary DNS: " WIFI_DNS2
    [ ! -z "$WIFI_DNS2" ] && echo "WIFI_DNS2      = $WIFI_DNS2" >> .makefile
fi

echo ".makefile created successfully."
