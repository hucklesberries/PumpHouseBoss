{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"PumpHouseBoss: ESPHome Pumphouse Monitor \u00b6 An ESPHome-based system for monitoring and managing commercial or residential pumphouse or water distribution/filtration systems. \u26a0\ufe0f This project is currently under active development and is _not ready for practical deployment. Use at your own risk!_ \u26a0\ufe0f Product Features \u00b6 Ingress and egress flow monitoring and metering Over/under flow-rate detection, alerts and alarms Automated solenoid control for emergency water-shutoff or water-flow management/control Manual emergency override (button) to shut-off water-flow Historical flow-rate/usage graphing Home Assistant integration via ESPHome LED System Status indications 4 Line LCD Display Support for up to 8 MMUs (Monitor/Management Units) to monitor and manage up to 8 water-lines Extensible to other flow-monitoring and and management operations and fluid-types Authorship \u00b6 Project developed and maintained by: - Roland Tembo Hendel (author, architect) - GitHub Copilot (AI automation and documentation support) License \u00b6 GNU General Public License v3.0 SPDX-License-Identifier: GPL-3.0-or-later Available Variants \u00b6 The PumpHouseBoss project supports two hardware variants: PumpHouseBoss Standard \u00b6 Platform: Espressif ESP32 (30 pin) MMUs: 1 Indications: 4 LED status outputs Controls: 3 button; System Reset, Manual MMU Control (shut-off) Display: 4 line by 20 character display (lcd_pcf8574 I2C interface) Other: USB programming/debugging port Reference: PHB Standard Functional Overview PHB Standard Hardware Guide PumpHouseBoss Professional \u00b6 Platform: Espressif ESP32-S3 (44 pin) MMUs: 8 Indications: 4 LED status outputs Controls: 4 button; Display Control, Systemm Reset, Manual MMU Control (shut-off) Display: 4 line by 20 character display (lcd_pcf8574 I2C interface) Other: USB programming/debugging port Reference: PHB Professional Functional Overview PHB Professional Hardware Guide See the variants/ directory for detailed configuration and hardware mapping for each variant. Firmware Features \u00b6 Modular YAML configuration for all hardware components and variants Pinout maps and modular includes for ESP32/ESP32S3, PCF8574 display, and all I/O Comprehensive Makefile build, upload, logging, cleaning, documentation, and more Secure secrets management using secrets.template.yaml (never check in real secrets) Automated documentation generation (ESPHome, MkDocs) Automated version management and consistency checks Safety mechanisms to protect critical files and prevent destructive actions VS Code integration with pre-defined tasks for build and test Quality assurance via automated regression tests, checklists, and session continuity Getting Started \u00b6 1. Clone the Repository \u00b6 git clone https://github.com/hucklesberries/PumpHouseBoss.git cd PumpHouseBoss \u2502 \u251c\u2500\u2500 CHANGELOG.md \u251c\u2500\u2500 common \u2502 \u251c\u2500\u2500 display_st7789.yaml \u2502 \u251c\u2500\u2500 esp32.yaml \u2502 \u251c\u2500\u2500 esp32s3.yaml \u2502 \u251c\u2500\u2500 logging.yaml \u2502 \u251c\u2500\u2500 ota.yaml \u2502 \u251c\u2500\u2500 secrets.template.yaml \u2502 \u251c\u2500\u2500 secrets.yaml \u2502 \u251c\u2500\u2500 watchdog.yaml \u2502 \u251c\u2500\u2500 web_server.yaml \u2502 \u2514\u2500\u2500 wifi.yaml \u251c\u2500\u2500 config \u2502 \u251c\u2500\u2500 config.mk \u2502 \u251c\u2500\u2500 default.mk \u2502 \u251c\u2500\u2500 phb-pro-test.mk \u2502 \u251c\u2500\u2500 phb-std-test.mk \u2502 \u2514\u2500\u2500 template.mk \u251c\u2500\u2500 RELEASE-CHECKLIST.md \u251c\u2500\u2500 docs \u2502 \u2514\u2500\u2500 mkdocs.yml \u251c\u2500\u2500 GIT-COPILOT.md \u251c\u2500\u2500 icons \u2502 \u251c\u2500\u2500 status_error.png \u2502 \u251c\u2500\u2500 status_ok.png \u2502 \u251c\u2500\u2500 status_warn.png \u2502 \u251c\u2500\u2500 wifi_0.png \u2502 \u251c\u2500\u2500 wifi_1.png \u2502 \u251c\u2500\u2500 wifi_2.png \u2502 \u251c\u2500\u2500 wifi_3.png \u2502 \u251c\u2500\u2500 wifi_4.png \u2502 \u251c\u2500\u2500 wifi-0.png \u2502 \u2514\u2500\u2500 wifi-100.png \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 Makefile \u251c\u2500\u2500 makefile.mk \u251c\u2500\u2500 pre-check-in.sh \u251c\u2500\u2500 README.md \u251c\u2500\u2500 regression-test.log \u251c\u2500\u2500 regression-test.sh \u251c\u2500\u2500 RELEASE.md \u251c\u2500\u2500 STANDARDS.md \u251c\u2500\u2500 TODO.md \u251c\u2500\u2500 variants \u2502 \u251c\u2500\u2500 phb-pro \u2502 \u2502 \u251c\u2500\u2500 phb-pro.mk \u2502 \u2502 \u251c\u2500\u2500 phb-pro.yaml \u2502 \u2502 \u251c\u2500\u2500 phb-pro-hardware.md \u2502 \u2502 \u2514\u2500\u2500 phb-pro-overview.md \u2502 \u2514\u2500\u2500 phb-std \u2502 \u251c\u2500\u2500 phb-std.mk \u2502 \u251c\u2500\u2500 phb-std.yaml \u2502 \u251c\u2500\u2500 phb-std-hardware.md \u2502 \u2514\u2500\u2500 phb-std-overview.md \u2514\u2500\u2500 VERSION 2. Review Documentation \u00b6 Read all Markdown files in the project root for standards, changelogs, and workflow: Document Title Description README.md Main project overview, setup, and documentation (this file) STANDARDS.md Coding standards, conventions, and check-in procedures RELEASE.md Release notes and instructions for new versions CHANGELOG.md Project changelog; documents all major changes and releases RELEASE-CHECKLIST.md (If present) Record of previous check-in status GIT-COPILOT.md Session context, developer notes, and Copilot usage TODO.md Project TODOs and possible future enhancements 3. Configure Your Build \u00b6 Copy the secrets template and edit your secrets: sh cp common/secrets.template.yaml common/secrets.yaml # Edit common/secrets.yaml with your actual secrets Create and edit your build configuration: sh cp configuration/template.mk configuration/config.mk # Edit configuration/config.mk to match your hardware and preferences 4. Build, Flash, and Test \u00b6 Use the following Makefile targets for common tasks: Build & Flash: - make build \u2013 Compile firmware for the selected device - make upload \u2013 Upload firmware to the device - make run \u2013 Build, upload, and start logging (all-in-one) Logging: - make logs \u2013 Start background logging to logs/DEVICE.log - make logs-follow \u2013 Follow logs in real-time - make logs-stop \u2013 Stop background logging processes - make logs-interactive \u2013 Stream logs interactively (blocks terminal) - make logs-fresh \u2013 Start fresh logging session and follow immediately Device Info & Flash: - make chip-info \u2013 Display platform chip information - make flash-info \u2013 Display flash memory information - make flash-verify \u2013 Verify flash contents against firmware build - make flash-erase \u2013 Erase entire platform flash memory (destructive!) Documentation: - make docs \u2013 Generate all documentation (ESPHome and MkDocs) - make docs-esphome \u2013 Generate ESPHome documentation - make docs-mkdoc \u2013 Generate MkDocs documentation Cleanup: - make clean \u2013 Remove build artifacts and logs - make clean-cache \u2013 Remove ESPHome build cache - make clean-docs \u2013 Remove all generated documentation - make clobber \u2013 Remove device directory and documentation - make distclean \u2013 Complete cleanup for archive/export Testing: - make regression-test \u2013 Run regression tests on all device YAMLs Utility: - make version \u2013 Show project and ESPHome version - make buildvars \u2013 Show current build configuration values - make help \u2013 Show help/target summary Collaboration \u00b6 Contributions, collaboration, suggestions, and critique are welcome. For a comprehensive guide to the implementation standards applied to this project, please refer to PHB Implementation Standards FAQ / Common Issues \u00b6 Q: Build fails due to missing secrets or configuration files. Ensure you have copied the secrets template ( common/secrets.template.yaml ) to common/secrets.yaml and the configuration template ( configuration/template.mk ) to configuration/config.mk , then edited them for your environment. Q: Upload or flash fails. Double-check your device is connected, the correct serial port is selected, and your user has permission to access the device. Q: Logging does not work or logs are empty. Make sure the device is running, and you are using the correct log target. Try make logs-fresh for a clean session. Q: Wrong variant or hardware configuration. Edit your configuration ( config/config.mk ) to select the correct variant and hardware options for your device. For more troubleshooting, see the project wiki or open an issue. Contact & Support \u00b6 For bug reports, questions, or contributions: - Open an issue or pull request on GitHub - Contact the maintainer via the email listed in the repository profile - See the project wiki for more documentation and help (coming soon)","title":"READ ME"},{"location":"#pumphouseboss-esphome-pumphouse-monitor","text":"An ESPHome-based system for monitoring and managing commercial or residential pumphouse or water distribution/filtration systems. \u26a0\ufe0f This project is currently under active development and is _not ready for practical deployment. Use at your own risk!_ \u26a0\ufe0f","title":"PumpHouseBoss: ESPHome Pumphouse Monitor"},{"location":"#product-features","text":"Ingress and egress flow monitoring and metering Over/under flow-rate detection, alerts and alarms Automated solenoid control for emergency water-shutoff or water-flow management/control Manual emergency override (button) to shut-off water-flow Historical flow-rate/usage graphing Home Assistant integration via ESPHome LED System Status indications 4 Line LCD Display Support for up to 8 MMUs (Monitor/Management Units) to monitor and manage up to 8 water-lines Extensible to other flow-monitoring and and management operations and fluid-types","title":"Product Features"},{"location":"#authorship","text":"Project developed and maintained by: - Roland Tembo Hendel (author, architect) - GitHub Copilot (AI automation and documentation support)","title":"Authorship"},{"location":"#license","text":"GNU General Public License v3.0 SPDX-License-Identifier: GPL-3.0-or-later","title":"License"},{"location":"#available-variants","text":"The PumpHouseBoss project supports two hardware variants:","title":"Available Variants"},{"location":"#pumphouseboss-standard","text":"Platform: Espressif ESP32 (30 pin) MMUs: 1 Indications: 4 LED status outputs Controls: 3 button; System Reset, Manual MMU Control (shut-off) Display: 4 line by 20 character display (lcd_pcf8574 I2C interface) Other: USB programming/debugging port Reference: PHB Standard Functional Overview PHB Standard Hardware Guide","title":"PumpHouseBoss Standard"},{"location":"#pumphouseboss-professional","text":"Platform: Espressif ESP32-S3 (44 pin) MMUs: 8 Indications: 4 LED status outputs Controls: 4 button; Display Control, Systemm Reset, Manual MMU Control (shut-off) Display: 4 line by 20 character display (lcd_pcf8574 I2C interface) Other: USB programming/debugging port Reference: PHB Professional Functional Overview PHB Professional Hardware Guide See the variants/ directory for detailed configuration and hardware mapping for each variant.","title":"PumpHouseBoss Professional"},{"location":"#firmware-features","text":"Modular YAML configuration for all hardware components and variants Pinout maps and modular includes for ESP32/ESP32S3, PCF8574 display, and all I/O Comprehensive Makefile build, upload, logging, cleaning, documentation, and more Secure secrets management using secrets.template.yaml (never check in real secrets) Automated documentation generation (ESPHome, MkDocs) Automated version management and consistency checks Safety mechanisms to protect critical files and prevent destructive actions VS Code integration with pre-defined tasks for build and test Quality assurance via automated regression tests, checklists, and session continuity","title":"Firmware Features"},{"location":"#getting-started","text":"","title":"Getting Started"},{"location":"#1-clone-the-repository","text":"git clone https://github.com/hucklesberries/PumpHouseBoss.git cd PumpHouseBoss \u2502 \u251c\u2500\u2500 CHANGELOG.md \u251c\u2500\u2500 common \u2502 \u251c\u2500\u2500 display_st7789.yaml \u2502 \u251c\u2500\u2500 esp32.yaml \u2502 \u251c\u2500\u2500 esp32s3.yaml \u2502 \u251c\u2500\u2500 logging.yaml \u2502 \u251c\u2500\u2500 ota.yaml \u2502 \u251c\u2500\u2500 secrets.template.yaml \u2502 \u251c\u2500\u2500 secrets.yaml \u2502 \u251c\u2500\u2500 watchdog.yaml \u2502 \u251c\u2500\u2500 web_server.yaml \u2502 \u2514\u2500\u2500 wifi.yaml \u251c\u2500\u2500 config \u2502 \u251c\u2500\u2500 config.mk \u2502 \u251c\u2500\u2500 default.mk \u2502 \u251c\u2500\u2500 phb-pro-test.mk \u2502 \u251c\u2500\u2500 phb-std-test.mk \u2502 \u2514\u2500\u2500 template.mk \u251c\u2500\u2500 RELEASE-CHECKLIST.md \u251c\u2500\u2500 docs \u2502 \u2514\u2500\u2500 mkdocs.yml \u251c\u2500\u2500 GIT-COPILOT.md \u251c\u2500\u2500 icons \u2502 \u251c\u2500\u2500 status_error.png \u2502 \u251c\u2500\u2500 status_ok.png \u2502 \u251c\u2500\u2500 status_warn.png \u2502 \u251c\u2500\u2500 wifi_0.png \u2502 \u251c\u2500\u2500 wifi_1.png \u2502 \u251c\u2500\u2500 wifi_2.png \u2502 \u251c\u2500\u2500 wifi_3.png \u2502 \u251c\u2500\u2500 wifi_4.png \u2502 \u251c\u2500\u2500 wifi-0.png \u2502 \u2514\u2500\u2500 wifi-100.png \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 Makefile \u251c\u2500\u2500 makefile.mk \u251c\u2500\u2500 pre-check-in.sh \u251c\u2500\u2500 README.md \u251c\u2500\u2500 regression-test.log \u251c\u2500\u2500 regression-test.sh \u251c\u2500\u2500 RELEASE.md \u251c\u2500\u2500 STANDARDS.md \u251c\u2500\u2500 TODO.md \u251c\u2500\u2500 variants \u2502 \u251c\u2500\u2500 phb-pro \u2502 \u2502 \u251c\u2500\u2500 phb-pro.mk \u2502 \u2502 \u251c\u2500\u2500 phb-pro.yaml \u2502 \u2502 \u251c\u2500\u2500 phb-pro-hardware.md \u2502 \u2502 \u2514\u2500\u2500 phb-pro-overview.md \u2502 \u2514\u2500\u2500 phb-std \u2502 \u251c\u2500\u2500 phb-std.mk \u2502 \u251c\u2500\u2500 phb-std.yaml \u2502 \u251c\u2500\u2500 phb-std-hardware.md \u2502 \u2514\u2500\u2500 phb-std-overview.md \u2514\u2500\u2500 VERSION","title":"1. Clone the Repository"},{"location":"#2-review-documentation","text":"Read all Markdown files in the project root for standards, changelogs, and workflow: Document Title Description README.md Main project overview, setup, and documentation (this file) STANDARDS.md Coding standards, conventions, and check-in procedures RELEASE.md Release notes and instructions for new versions CHANGELOG.md Project changelog; documents all major changes and releases RELEASE-CHECKLIST.md (If present) Record of previous check-in status GIT-COPILOT.md Session context, developer notes, and Copilot usage TODO.md Project TODOs and possible future enhancements","title":"2. Review Documentation"},{"location":"#3-configure-your-build","text":"Copy the secrets template and edit your secrets: sh cp common/secrets.template.yaml common/secrets.yaml # Edit common/secrets.yaml with your actual secrets Create and edit your build configuration: sh cp configuration/template.mk configuration/config.mk # Edit configuration/config.mk to match your hardware and preferences","title":"3. Configure Your Build"},{"location":"#4-build-flash-and-test","text":"Use the following Makefile targets for common tasks: Build & Flash: - make build \u2013 Compile firmware for the selected device - make upload \u2013 Upload firmware to the device - make run \u2013 Build, upload, and start logging (all-in-one) Logging: - make logs \u2013 Start background logging to logs/DEVICE.log - make logs-follow \u2013 Follow logs in real-time - make logs-stop \u2013 Stop background logging processes - make logs-interactive \u2013 Stream logs interactively (blocks terminal) - make logs-fresh \u2013 Start fresh logging session and follow immediately Device Info & Flash: - make chip-info \u2013 Display platform chip information - make flash-info \u2013 Display flash memory information - make flash-verify \u2013 Verify flash contents against firmware build - make flash-erase \u2013 Erase entire platform flash memory (destructive!) Documentation: - make docs \u2013 Generate all documentation (ESPHome and MkDocs) - make docs-esphome \u2013 Generate ESPHome documentation - make docs-mkdoc \u2013 Generate MkDocs documentation Cleanup: - make clean \u2013 Remove build artifacts and logs - make clean-cache \u2013 Remove ESPHome build cache - make clean-docs \u2013 Remove all generated documentation - make clobber \u2013 Remove device directory and documentation - make distclean \u2013 Complete cleanup for archive/export Testing: - make regression-test \u2013 Run regression tests on all device YAMLs Utility: - make version \u2013 Show project and ESPHome version - make buildvars \u2013 Show current build configuration values - make help \u2013 Show help/target summary","title":"4. Build, Flash, and Test"},{"location":"#collaboration","text":"Contributions, collaboration, suggestions, and critique are welcome. For a comprehensive guide to the implementation standards applied to this project, please refer to PHB Implementation Standards","title":"Collaboration"},{"location":"#faq-common-issues","text":"Q: Build fails due to missing secrets or configuration files. Ensure you have copied the secrets template ( common/secrets.template.yaml ) to common/secrets.yaml and the configuration template ( configuration/template.mk ) to configuration/config.mk , then edited them for your environment. Q: Upload or flash fails. Double-check your device is connected, the correct serial port is selected, and your user has permission to access the device. Q: Logging does not work or logs are empty. Make sure the device is running, and you are using the correct log target. Try make logs-fresh for a clean session. Q: Wrong variant or hardware configuration. Edit your configuration ( config/config.mk ) to select the correct variant and hardware options for your device. For more troubleshooting, see the project wiki or open an issue.","title":"FAQ / Common Issues"},{"location":"#contact-support","text":"For bug reports, questions, or contributions: - Open an issue or pull request on GitHub - Contact the maintainer via the email listed in the repository profile - See the project wiki for more documentation and help (coming soon)","title":"Contact &amp; Support"},{"location":"CHANGELOG/","text":"Changelog \u00b6 Note: For detailed release notes, see RELEASE.md. This changelog is a concise, developer-focused summary. [0.7.0] - 2025-07-26 \u00b6 Added \u00b6 Support for multiple hardware variants with modular configuration Table of Contents, FAQ, and Contact/Support sections in documentation Security best practices: secrets template, gitignore updates, onboarding guidance Changed \u00b6 Consistent terminology and improved documentation Enhanced Makefile automation and clarified targets Improved onboarding workflow and Getting Started instructions Cleaned up and organized project TODOs and release notes [0.6.8] - 2025-07-24 \u00b6 Changed \u00b6 Repository name changed from sysmon-ph to PumpHouseBoss [0.6.7] - 2025-07-23 \u00b6 Added \u00b6 Major UI improvements for ST7789 display Pinout maps for ESP32S3, ST7789, Pico-LCD secrets.template.yaml for onboarding Changed \u00b6 Improved Makefile automation, .gitignore, and documentation Refined check-in checklist and commit message standards [0.6.6] - 2025-07-22 \u00b6 Added \u00b6 UI improvements for ST7789 display Pinout maps for ESP32S3, ST7789, Pico-LCD secrets.template.yaml for onboarding Changed \u00b6 Makefile automation, .gitignore, and documentation [0.6.1] - 2025-07-19 \u00b6 Added \u00b6 ESP32 board and framework configuration Automated device configuration via configure.sh Modular includes: wifi.yaml , ota.yaml , logging.yaml , web_server.yaml Fully automated Makefile for build, upload, and logging Changed \u00b6 Migrated to independent sysmon-ph repository Improved check-in checklist, .gitignore, and documentation [baseline-makefile-auto] - 2025-07-18 \u00b6 Snapshot before major Makefile automation overhaul [0.5.0] - 2025-07-10 \u00b6 Migrated to independent sysmon-ph repository Quality assurance system added Improved documentation, workflow, and check-in checklist [0.3.0] - 2025-06-20 \u00b6 Major refactor and cleanup Improved modularity, build scripts, and Makefile automation [0.1.0] - 2025-06-01 \u00b6 First working version of ESPHome configuration Initial Makefile and YAML includes","title":"CHANGELOG"},{"location":"CHANGELOG/#changelog","text":"Note: For detailed release notes, see RELEASE.md. This changelog is a concise, developer-focused summary.","title":"Changelog"},{"location":"CHANGELOG/#070-2025-07-26","text":"","title":"[0.7.0] - 2025-07-26"},{"location":"CHANGELOG/#added","text":"Support for multiple hardware variants with modular configuration Table of Contents, FAQ, and Contact/Support sections in documentation Security best practices: secrets template, gitignore updates, onboarding guidance","title":"Added"},{"location":"CHANGELOG/#changed","text":"Consistent terminology and improved documentation Enhanced Makefile automation and clarified targets Improved onboarding workflow and Getting Started instructions Cleaned up and organized project TODOs and release notes","title":"Changed"},{"location":"CHANGELOG/#068-2025-07-24","text":"","title":"[0.6.8] - 2025-07-24"},{"location":"CHANGELOG/#changed_1","text":"Repository name changed from sysmon-ph to PumpHouseBoss","title":"Changed"},{"location":"CHANGELOG/#067-2025-07-23","text":"","title":"[0.6.7] - 2025-07-23"},{"location":"CHANGELOG/#added_1","text":"Major UI improvements for ST7789 display Pinout maps for ESP32S3, ST7789, Pico-LCD secrets.template.yaml for onboarding","title":"Added"},{"location":"CHANGELOG/#changed_2","text":"Improved Makefile automation, .gitignore, and documentation Refined check-in checklist and commit message standards","title":"Changed"},{"location":"CHANGELOG/#066-2025-07-22","text":"","title":"[0.6.6] - 2025-07-22"},{"location":"CHANGELOG/#added_2","text":"UI improvements for ST7789 display Pinout maps for ESP32S3, ST7789, Pico-LCD secrets.template.yaml for onboarding","title":"Added"},{"location":"CHANGELOG/#changed_3","text":"Makefile automation, .gitignore, and documentation","title":"Changed"},{"location":"CHANGELOG/#061-2025-07-19","text":"","title":"[0.6.1] - 2025-07-19"},{"location":"CHANGELOG/#added_3","text":"ESP32 board and framework configuration Automated device configuration via configure.sh Modular includes: wifi.yaml , ota.yaml , logging.yaml , web_server.yaml Fully automated Makefile for build, upload, and logging","title":"Added"},{"location":"CHANGELOG/#changed_4","text":"Migrated to independent sysmon-ph repository Improved check-in checklist, .gitignore, and documentation","title":"Changed"},{"location":"CHANGELOG/#baseline-makefile-auto-2025-07-18","text":"Snapshot before major Makefile automation overhaul","title":"[baseline-makefile-auto] - 2025-07-18"},{"location":"CHANGELOG/#050-2025-07-10","text":"Migrated to independent sysmon-ph repository Quality assurance system added Improved documentation, workflow, and check-in checklist","title":"[0.5.0] - 2025-07-10"},{"location":"CHANGELOG/#030-2025-06-20","text":"Major refactor and cleanup Improved modularity, build scripts, and Makefile automation","title":"[0.3.0] - 2025-06-20"},{"location":"CHANGELOG/#010-2025-06-01","text":"First working version of ESPHome configuration Initial Makefile and YAML includes","title":"[0.1.0] - 2025-06-01"},{"location":"Contact-and-Support/","text":"Contact & Support \u00b6 See also: README.md | Wiki Home | Overview | Getting Started | Hardware Overview | Firmware & Configuration | Usage & Troubleshooting | Developer Guide | FAQ For bug reports, questions, or contributions: - Open an issue or pull request on GitHub - Contact the maintainer via the email listed in the repository profile - See the project wiki for more documentation and help","title":"Contact & Support"},{"location":"Contact-and-Support/#contact-support","text":"See also: README.md | Wiki Home | Overview | Getting Started | Hardware Overview | Firmware & Configuration | Usage & Troubleshooting | Developer Guide | FAQ For bug reports, questions, or contributions: - Open an issue or pull request on GitHub - Contact the maintainer via the email listed in the repository profile - See the project wiki for more documentation and help","title":"Contact &amp; Support"},{"location":"Developer-Guide/","text":"Developer Guide \u00b6 See also: README.md | Wiki Home | Overview | Getting Started | Hardware Overview | Firmware & Configuration | Usage & Troubleshooting | FAQ | Contact & Support This section covers contribution standards, automation, and coding conventions for PumpHouseBoss. Contribution Standards \u00b6 Follow CONTRIBUTING.md Use clear commit messages and document changes Automation & Makefile Targets \u00b6 Use make help to see all available targets Document new targets in the Makefile and docs Coding Conventions \u00b6 See STANDARDS.md for style and best practices For more, see the full documentation site .","title":"Developer Guide"},{"location":"Developer-Guide/#developer-guide","text":"See also: README.md | Wiki Home | Overview | Getting Started | Hardware Overview | Firmware & Configuration | Usage & Troubleshooting | FAQ | Contact & Support This section covers contribution standards, automation, and coding conventions for PumpHouseBoss.","title":"Developer Guide"},{"location":"Developer-Guide/#contribution-standards","text":"Follow CONTRIBUTING.md Use clear commit messages and document changes","title":"Contribution Standards"},{"location":"Developer-Guide/#automation-makefile-targets","text":"Use make help to see all available targets Document new targets in the Makefile and docs","title":"Automation &amp; Makefile Targets"},{"location":"Developer-Guide/#coding-conventions","text":"See STANDARDS.md for style and best practices For more, see the full documentation site .","title":"Coding Conventions"},{"location":"FAQ/","text":"FAQ \u00b6 See also: README.md | Wiki Home | Overview | Getting Started | Hardware Overview | Firmware & Configuration | Usage & Troubleshooting | Developer Guide | Contact & Support Q: Build fails due to missing secrets or configuration files. \u00b6 A: Ensure you have copied and edited the secrets and configuration templates as described in the README. Q: Upload or flash fails. \u00b6 A: Check device connection, correct serial port, and user permissions. Q: Logging does not work or logs are empty. \u00b6 A: Make sure the device is running and you are using the correct log target. Try make logs-fresh for a clean session. Q: Wrong variant or hardware configuration. \u00b6 A: Edit your configuration files to select the correct variant and hardware options. For more troubleshooting, see the Usage & Troubleshooting section or open an issue on GitHub.","title":"FAQ"},{"location":"FAQ/#faq","text":"See also: README.md | Wiki Home | Overview | Getting Started | Hardware Overview | Firmware & Configuration | Usage & Troubleshooting | Developer Guide | Contact & Support","title":"FAQ"},{"location":"FAQ/#q-build-fails-due-to-missing-secrets-or-configuration-files","text":"A: Ensure you have copied and edited the secrets and configuration templates as described in the README.","title":"Q: Build fails due to missing secrets or configuration files."},{"location":"FAQ/#q-upload-or-flash-fails","text":"A: Check device connection, correct serial port, and user permissions.","title":"Q: Upload or flash fails."},{"location":"FAQ/#q-logging-does-not-work-or-logs-are-empty","text":"A: Make sure the device is running and you are using the correct log target. Try make logs-fresh for a clean session.","title":"Q: Logging does not work or logs are empty."},{"location":"FAQ/#q-wrong-variant-or-hardware-configuration","text":"A: Edit your configuration files to select the correct variant and hardware options. For more troubleshooting, see the Usage & Troubleshooting section or open an issue on GitHub.","title":"Q: Wrong variant or hardware configuration."},{"location":"Firmware-and-Configuration/","text":"Firmware & Configuration \u00b6 See also: README.md | Wiki Home | Overview | Getting Started | Hardware Overview | Usage & Troubleshooting | Developer Guide | FAQ | Contact & Support This section covers YAML configuration, secrets management, and the build/upload process. Modular YAML Configuration \u00b6 Device and variant-specific YAML files Includes for common hardware and features Secrets Management \u00b6 Use common/secrets.template.yaml as a base Never commit real secrets to the repo Build & Upload \u00b6 Use Makefile targets: make build , make upload , make run See Getting Started for setup For advanced configuration, see CONTRIBUTING.md .","title":"Firmware & Configuration"},{"location":"Firmware-and-Configuration/#firmware-configuration","text":"See also: README.md | Wiki Home | Overview | Getting Started | Hardware Overview | Usage & Troubleshooting | Developer Guide | FAQ | Contact & Support This section covers YAML configuration, secrets management, and the build/upload process.","title":"Firmware &amp; Configuration"},{"location":"Firmware-and-Configuration/#modular-yaml-configuration","text":"Device and variant-specific YAML files Includes for common hardware and features","title":"Modular YAML Configuration"},{"location":"Firmware-and-Configuration/#secrets-management","text":"Use common/secrets.template.yaml as a base Never commit real secrets to the repo","title":"Secrets Management"},{"location":"Firmware-and-Configuration/#build-upload","text":"Use Makefile targets: make build , make upload , make run See Getting Started for setup For advanced configuration, see CONTRIBUTING.md .","title":"Build &amp; Upload"},{"location":"GIT-COPILOT/","text":"GIT-COPILOT.md \u2014 Session Context & Developer Continuity \u00b6 Maintained by GitHub Copilot to preserve technical context, session continuity, troubleshooting notes, and onboarding information for all contributors. For project overview and setup, see README.md . Session Status & Current Work \u00b6 Last Updated: July 21, 2025 Recent updates: - Pinout maps for ESP32S3, ST7789 display, and Pico-LCD hardware - UI improvements: ST7789 display now shows Hostname, SSID, IP, and MAC address - Font/layout adjustments for readability - Improved secrets management, Makefile automation, and documentation Current Work & Action Items: - Makefile optimization and code quality improvements - Session continuity and header standardization - Version consistency (Makefile and VERSION file) - Always include the standard project header in new files - [ ] Test flash-verify functionality with current firmware - [ ] Explore additional esptool functions if needed - [ ] Continue ESPHome development with professional build system Development Environment Highlights \u00b6 Cygwin zsh terminal with Meslo Nerd Font VS Code integration (tasks.json, 9 ESPHome targets) Professional Makefile (24+ targets, auto-detected Python) Organized documentation (docs/esphome/, docs/html/, docs/latex/) Full esptool integration (erase, info, verify) Safety systems: PROTECTED_DIRS, dependency composition, error handling Consistent GPL v3.0 headers and versioning Quick Start & Troubleshooting \u00b6 Quick Start Commands \u00b6 Open VS Code in workspace: <your-workspace-path> Verify environment: make version or make help Check current config: make buildvars Review last build: cat build.log Development Workflow \u00b6 Configure: make configure (interactive setup) Build: make build (compile firmware) Upload: make upload (flash device) Debug: make logs (stream live logs) Full pipeline: make run (build + upload + logs) Check-in Process \u00b6 Pre-Commit: Follow CHECKIN-CHECKLIST.md validation steps Clean Build: make clean && make build Version Bump: Update VERSION file and Makefile header Archive Test: make distclean Commit: Use structured commit message format Post-Commit: Update continuity files (KIBO.md, GIT-COPILOT.md) Documentation Generation \u00b6 YAML module/file descriptions are extracted to Markdown using docs/extract_yaml_headers.py . Doxygen config: docs/Doxyfile . All generated documentation is output to docs/esphome/ , docs/html/ , and docs/latex/ . Commands: - All Docs: make docs (ESPHome + Doxygen) - ESPHome Only: make docs-esphome - Doxygen Only: make docs-doxygen Flash Operations \u00b6 Chip Info: make chip-info Flash Info: make flash-info Flash Verify: make flash-verify Flash Erase: make flash-erase Cleanup Operations \u00b6 Basic Clean: make clean Cache Clean: make clean-cache Docs Clean: make clean-docs Full Clean: make clobber Archive Clean: make distclean WiFi Troubleshooting \u00b6 Device experiencing WiFi AP registration problems Capture live logs during connection attempts May need to modify logs target to include tee logging for shared visibility Notes & Tips \u00b6 Indent all shell code within Makefile recipes (for/while/if blocks) for readability, even if not required by shell. Always use Unix (LF) file format when creating or editing files in this repository. This file is maintained by GitHub Copilot to preserve session context and development state. Appendix: Display and UI Plan \u00b6 Overview \u00b6 Shows system status icons (e.g., checkmark), and can display status text. Blue background, framed by white and blue borders. Used for cycling through sensor and solenoid data, and for menu interactions. Sensor/solenoid name Solenoid state (ON/OFF) Smart shutoff status (enabled/disabled) Controls \u00b6 Four buttons: A: Scroll up Any joystick activity brings up a menu in the data pane for manual control. Operator can: Turn any solenoid ON or OFF manually Menu times out and returns to idle cycling after inactivity. UI/UX Notes \u00b6 Use icons and color highlights for clarity (e.g., ON/OFF, smart shutoff status). Data pane can highlight the currently selected item in the menu. This plan will be implemented incrementally, starting with display layout and cycling logic, then adding controls and menu features. GitHub Copilot Session Context \u00b6 Session Status \u00b6 Recent updates: - Provided pinout maps for ESP32S3, ST7789 display, and Pico-LCD hardware components - Major UI improvements: ST7789 display now shows Hostname, SSID, IP, and MAC address, with robust centering and fallback for missing values - Improved secrets management, Makefile automation, and documentation Development Environment Highlights \u00b6 VS Code integration (tasks.json, 9 ESPHome targets) Professional Makefile (24 targets, auto-detected Python) Consistent GPL v3.0 headers and versioning Current Work & Action Items \u00b6 Makefile optimization and code quality improvements Session continuity and header standardization Version consistency (Makefile and VERSION file) Always include the standard project header in new files for consistency and traceability [ ] Test flash-verify functionality with current firmware [ ] Explore additional esptool functions if needed [ ] Continue ESPHome development with professional build system Troubleshooting & Quick Start \u00b6 WiFi Troubleshooting \u00b6 Device experiencing WiFi AP registration problems Capture live logs during connection attempts May need to modify logs target to include tee logging for shared visibility Quick Start Commands \u00b6 Open VS Code in workspace: <your-workspace-path> Verify environment: make version or make help Check current config: make buildvars Review last build: cat build.log Development Workflow \u00b6 Configure: make configure (interactive setup) Build: make build (compile firmware) Upload: make upload (flash device) Debug: make logs (stream live logs) Full pipeline: make run (build + upload + logs) Check-in Process \u00b6 Pre-Commit: Follow CHECKIN-CHECKLIST.md validation steps Clean Build: make clean && make build Version Bump: Update VERSION file and Makefile header Archive Test: make distclean Commit: Use structured commit message format Post-Commit: Update continuity files (KIBO.md, GIT-COPILOT.md) Documentation Generation \u00b6 New Documentation Workflow (as of July 2025) \u00b6 YAML module/file descriptions are now extracted to Markdown using docs/extract_yaml_headers.py . The Doxygen configuration file is located at docs/Doxyfile (not the project root). To generate all documentation: 1. Run: python docs/extract_yaml_headers.py (extracts YAML headers to Markdown in docs/ ) 2. Run: make docs (generates ESPHome and Doxygen docs) To generate only ESPHome docs: make docs-esphome To generate only Doxygen docs: make docs-doxygen All generated documentation is output to docs/esphome/ , docs/html/ , and docs/latex/ . All Docs: make docs (ESPHome + Doxygen) ESPHome Only: make docs-esphome Doxygen Only: make docs-doxygen Flash Operations \u00b6 Chip Info: make chip-info Flash Info: make flash-info Flash Verify: make flash-verify Flash Erase: make flash-erase Cleanup Operations \u00b6 Basic Clean: make clean Cache Clean: make clean-cache Docs Clean: make clean-docs Full Clean: make clobber Archive Clean: make distclean Session Continuity & Shared Context \u00b6 Always use the .kibo file in your home directory ( ~/.kibo ) for session continuity and shared context across workspaces. When updating session context, run ~/sync-kibo.sh push to sync changes back to ~/.kibo . At the start of every session, read .kibo from the workspace (or from the symlink pointing to ~/.kibo ) to restore context. Do not use .git-copilot or .git-copilot.md for continuity\u2014use .kibo exclusively. Ensure .kibo is listed in .gitignore to prevent accidental commits. If .kibo is not accessible, copy it into the workspace or provide its contents. All file creation and editing should use Unix (LF) line endings. These notes ensure robust, cross-workspace session continuity and prevent loss of shared context. Notes & Tips \u00b6 All shell code within Makefile recipes (such as inside for/while/if blocks) should be indented for human readability, even though the shell does not require it. This improves maintainability and clarity for all contributors. This file is maintained by GitHub Copilot to preserve session context and development state. Always use Unix (LF) file format when creating or editing files in this repository.","title":"GIT-COPILOT.md \u2014 Session Context &amp; Developer Continuity"},{"location":"GIT-COPILOT/#git-copilotmd-session-context-developer-continuity","text":"Maintained by GitHub Copilot to preserve technical context, session continuity, troubleshooting notes, and onboarding information for all contributors. For project overview and setup, see README.md .","title":"GIT-COPILOT.md \u2014 Session Context &amp; Developer Continuity"},{"location":"GIT-COPILOT/#session-status-current-work","text":"Last Updated: July 21, 2025 Recent updates: - Pinout maps for ESP32S3, ST7789 display, and Pico-LCD hardware - UI improvements: ST7789 display now shows Hostname, SSID, IP, and MAC address - Font/layout adjustments for readability - Improved secrets management, Makefile automation, and documentation Current Work & Action Items: - Makefile optimization and code quality improvements - Session continuity and header standardization - Version consistency (Makefile and VERSION file) - Always include the standard project header in new files - [ ] Test flash-verify functionality with current firmware - [ ] Explore additional esptool functions if needed - [ ] Continue ESPHome development with professional build system","title":"Session Status &amp; Current Work"},{"location":"GIT-COPILOT/#development-environment-highlights","text":"Cygwin zsh terminal with Meslo Nerd Font VS Code integration (tasks.json, 9 ESPHome targets) Professional Makefile (24+ targets, auto-detected Python) Organized documentation (docs/esphome/, docs/html/, docs/latex/) Full esptool integration (erase, info, verify) Safety systems: PROTECTED_DIRS, dependency composition, error handling Consistent GPL v3.0 headers and versioning","title":"Development Environment Highlights"},{"location":"GIT-COPILOT/#quick-start-troubleshooting","text":"","title":"Quick Start &amp; Troubleshooting"},{"location":"GIT-COPILOT/#quick-start-commands","text":"Open VS Code in workspace: <your-workspace-path> Verify environment: make version or make help Check current config: make buildvars Review last build: cat build.log","title":"Quick Start Commands"},{"location":"GIT-COPILOT/#development-workflow","text":"Configure: make configure (interactive setup) Build: make build (compile firmware) Upload: make upload (flash device) Debug: make logs (stream live logs) Full pipeline: make run (build + upload + logs)","title":"Development Workflow"},{"location":"GIT-COPILOT/#check-in-process","text":"Pre-Commit: Follow CHECKIN-CHECKLIST.md validation steps Clean Build: make clean && make build Version Bump: Update VERSION file and Makefile header Archive Test: make distclean Commit: Use structured commit message format Post-Commit: Update continuity files (KIBO.md, GIT-COPILOT.md)","title":"Check-in Process"},{"location":"GIT-COPILOT/#documentation-generation","text":"YAML module/file descriptions are extracted to Markdown using docs/extract_yaml_headers.py . Doxygen config: docs/Doxyfile . All generated documentation is output to docs/esphome/ , docs/html/ , and docs/latex/ . Commands: - All Docs: make docs (ESPHome + Doxygen) - ESPHome Only: make docs-esphome - Doxygen Only: make docs-doxygen","title":"Documentation Generation"},{"location":"GIT-COPILOT/#flash-operations","text":"Chip Info: make chip-info Flash Info: make flash-info Flash Verify: make flash-verify Flash Erase: make flash-erase","title":"Flash Operations"},{"location":"GIT-COPILOT/#cleanup-operations","text":"Basic Clean: make clean Cache Clean: make clean-cache Docs Clean: make clean-docs Full Clean: make clobber Archive Clean: make distclean","title":"Cleanup Operations"},{"location":"GIT-COPILOT/#wifi-troubleshooting","text":"Device experiencing WiFi AP registration problems Capture live logs during connection attempts May need to modify logs target to include tee logging for shared visibility","title":"WiFi Troubleshooting"},{"location":"GIT-COPILOT/#notes-tips","text":"Indent all shell code within Makefile recipes (for/while/if blocks) for readability, even if not required by shell. Always use Unix (LF) file format when creating or editing files in this repository. This file is maintained by GitHub Copilot to preserve session context and development state.","title":"Notes &amp; Tips"},{"location":"GIT-COPILOT/#appendix-display-and-ui-plan","text":"","title":"Appendix: Display and UI Plan"},{"location":"GIT-COPILOT/#overview","text":"Shows system status icons (e.g., checkmark), and can display status text. Blue background, framed by white and blue borders. Used for cycling through sensor and solenoid data, and for menu interactions. Sensor/solenoid name Solenoid state (ON/OFF) Smart shutoff status (enabled/disabled)","title":"Overview"},{"location":"GIT-COPILOT/#controls","text":"Four buttons: A: Scroll up Any joystick activity brings up a menu in the data pane for manual control. Operator can: Turn any solenoid ON or OFF manually Menu times out and returns to idle cycling after inactivity.","title":"Controls"},{"location":"GIT-COPILOT/#uiux-notes","text":"Use icons and color highlights for clarity (e.g., ON/OFF, smart shutoff status). Data pane can highlight the currently selected item in the menu. This plan will be implemented incrementally, starting with display layout and cycling logic, then adding controls and menu features.","title":"UI/UX Notes"},{"location":"GIT-COPILOT/#github-copilot-session-context","text":"","title":"GitHub Copilot Session Context"},{"location":"GIT-COPILOT/#session-status","text":"Recent updates: - Provided pinout maps for ESP32S3, ST7789 display, and Pico-LCD hardware components - Major UI improvements: ST7789 display now shows Hostname, SSID, IP, and MAC address, with robust centering and fallback for missing values - Improved secrets management, Makefile automation, and documentation","title":"Session Status"},{"location":"GIT-COPILOT/#development-environment-highlights_1","text":"VS Code integration (tasks.json, 9 ESPHome targets) Professional Makefile (24 targets, auto-detected Python) Consistent GPL v3.0 headers and versioning","title":"Development Environment Highlights"},{"location":"GIT-COPILOT/#current-work-action-items","text":"Makefile optimization and code quality improvements Session continuity and header standardization Version consistency (Makefile and VERSION file) Always include the standard project header in new files for consistency and traceability [ ] Test flash-verify functionality with current firmware [ ] Explore additional esptool functions if needed [ ] Continue ESPHome development with professional build system","title":"Current Work &amp; Action Items"},{"location":"GIT-COPILOT/#troubleshooting-quick-start","text":"","title":"Troubleshooting &amp; Quick Start"},{"location":"GIT-COPILOT/#wifi-troubleshooting_1","text":"Device experiencing WiFi AP registration problems Capture live logs during connection attempts May need to modify logs target to include tee logging for shared visibility","title":"WiFi Troubleshooting"},{"location":"GIT-COPILOT/#quick-start-commands_1","text":"Open VS Code in workspace: <your-workspace-path> Verify environment: make version or make help Check current config: make buildvars Review last build: cat build.log","title":"Quick Start Commands"},{"location":"GIT-COPILOT/#development-workflow_1","text":"Configure: make configure (interactive setup) Build: make build (compile firmware) Upload: make upload (flash device) Debug: make logs (stream live logs) Full pipeline: make run (build + upload + logs)","title":"Development Workflow"},{"location":"GIT-COPILOT/#check-in-process_1","text":"Pre-Commit: Follow CHECKIN-CHECKLIST.md validation steps Clean Build: make clean && make build Version Bump: Update VERSION file and Makefile header Archive Test: make distclean Commit: Use structured commit message format Post-Commit: Update continuity files (KIBO.md, GIT-COPILOT.md)","title":"Check-in Process"},{"location":"GIT-COPILOT/#documentation-generation_1","text":"","title":"Documentation Generation"},{"location":"GIT-COPILOT/#new-documentation-workflow-as-of-july-2025","text":"YAML module/file descriptions are now extracted to Markdown using docs/extract_yaml_headers.py . The Doxygen configuration file is located at docs/Doxyfile (not the project root). To generate all documentation: 1. Run: python docs/extract_yaml_headers.py (extracts YAML headers to Markdown in docs/ ) 2. Run: make docs (generates ESPHome and Doxygen docs) To generate only ESPHome docs: make docs-esphome To generate only Doxygen docs: make docs-doxygen All generated documentation is output to docs/esphome/ , docs/html/ , and docs/latex/ . All Docs: make docs (ESPHome + Doxygen) ESPHome Only: make docs-esphome Doxygen Only: make docs-doxygen","title":"New Documentation Workflow (as of July 2025)"},{"location":"GIT-COPILOT/#flash-operations_1","text":"Chip Info: make chip-info Flash Info: make flash-info Flash Verify: make flash-verify Flash Erase: make flash-erase","title":"Flash Operations"},{"location":"GIT-COPILOT/#cleanup-operations_1","text":"Basic Clean: make clean Cache Clean: make clean-cache Docs Clean: make clean-docs Full Clean: make clobber Archive Clean: make distclean","title":"Cleanup Operations"},{"location":"GIT-COPILOT/#session-continuity-shared-context","text":"Always use the .kibo file in your home directory ( ~/.kibo ) for session continuity and shared context across workspaces. When updating session context, run ~/sync-kibo.sh push to sync changes back to ~/.kibo . At the start of every session, read .kibo from the workspace (or from the symlink pointing to ~/.kibo ) to restore context. Do not use .git-copilot or .git-copilot.md for continuity\u2014use .kibo exclusively. Ensure .kibo is listed in .gitignore to prevent accidental commits. If .kibo is not accessible, copy it into the workspace or provide its contents. All file creation and editing should use Unix (LF) line endings. These notes ensure robust, cross-workspace session continuity and prevent loss of shared context.","title":"Session Continuity &amp; Shared Context"},{"location":"GIT-COPILOT/#notes-tips_1","text":"All shell code within Makefile recipes (such as inside for/while/if blocks) should be indented for human readability, even though the shell does not require it. This improves maintainability and clarity for all contributors. This file is maintained by GitHub Copilot to preserve session context and development state. Always use Unix (LF) file format when creating or editing files in this repository.","title":"Notes &amp; Tips"},{"location":"Getting-Started/","text":"Getting Started \u00b6 See also: README.md | Wiki Home | Overview | Hardware Overview | Firmware & Configuration | Usage & Troubleshooting | Developer Guide | FAQ | Contact & Support Welcome to PumpHouseBoss! This guide will help you set up your development environment, configure your first device, and build and upload firmware. 1. Clone the Repository \u00b6 git clone https://github.com/hucklesberries/PumpHouseBoss.git cd PumpHouseBoss 2. Review Documentation \u00b6 Read the README.md for project overview and setup. Review CONTRIBUTING.md for standards and workflow. 3. Configure Your Build \u00b6 Copy and edit the secrets and configuration templates as described in the README. 4. Build, Flash, and Test \u00b6 Use the Makefile targets: make build , make upload , make run , etc. 5. Troubleshooting \u00b6 See the Usage & Troubleshooting section for common issues. For more details, see the full documentation site .","title":"Getting Started"},{"location":"Getting-Started/#getting-started","text":"See also: README.md | Wiki Home | Overview | Hardware Overview | Firmware & Configuration | Usage & Troubleshooting | Developer Guide | FAQ | Contact & Support Welcome to PumpHouseBoss! This guide will help you set up your development environment, configure your first device, and build and upload firmware.","title":"Getting Started"},{"location":"Getting-Started/#1-clone-the-repository","text":"git clone https://github.com/hucklesberries/PumpHouseBoss.git cd PumpHouseBoss","title":"1. Clone the Repository"},{"location":"Getting-Started/#2-review-documentation","text":"Read the README.md for project overview and setup. Review CONTRIBUTING.md for standards and workflow.","title":"2. Review Documentation"},{"location":"Getting-Started/#3-configure-your-build","text":"Copy and edit the secrets and configuration templates as described in the README.","title":"3. Configure Your Build"},{"location":"Getting-Started/#4-build-flash-and-test","text":"Use the Makefile targets: make build , make upload , make run , etc.","title":"4. Build, Flash, and Test"},{"location":"Getting-Started/#5-troubleshooting","text":"See the Usage & Troubleshooting section for common issues. For more details, see the full documentation site .","title":"5. Troubleshooting"},{"location":"Hardware-Overview/","text":"Hardware Overview \u00b6 See also: README.md | Wiki Home | Overview | Getting Started | Firmware & Configuration | Usage & Troubleshooting | Developer Guide | FAQ | Contact & Support PumpHouseBoss supports multiple hardware variants and configurations. This section documents supported boards, sensors, displays, and wiring. Supported Variants \u00b6 Standard (ESP32) Professional (ESP32-S3) Pinout Maps \u00b6 See the common/ and variants/ directories for YAML pinout files. Sensors & Peripherals \u00b6 Flow sensors, solenoids, LCD displays, status LEDs, buttons, and more. Display Options \u00b6 4-line LCD (I2C) Optional TFT display (future) For detailed hardware guides, see the Hardware Guides variants/ in the repo.","title":"Hardware Overview"},{"location":"Hardware-Overview/#hardware-overview","text":"See also: README.md | Wiki Home | Overview | Getting Started | Firmware & Configuration | Usage & Troubleshooting | Developer Guide | FAQ | Contact & Support PumpHouseBoss supports multiple hardware variants and configurations. This section documents supported boards, sensors, displays, and wiring.","title":"Hardware Overview"},{"location":"Hardware-Overview/#supported-variants","text":"Standard (ESP32) Professional (ESP32-S3)","title":"Supported Variants"},{"location":"Hardware-Overview/#pinout-maps","text":"See the common/ and variants/ directories for YAML pinout files.","title":"Pinout Maps"},{"location":"Hardware-Overview/#sensors-peripherals","text":"Flow sensors, solenoids, LCD displays, status LEDs, buttons, and more.","title":"Sensors &amp; Peripherals"},{"location":"Hardware-Overview/#display-options","text":"4-line LCD (I2C) Optional TFT display (future) For detailed hardware guides, see the Hardware Guides variants/ in the repo.","title":"Display Options"},{"location":"Home/","text":"PumpHouseBoss Wiki Home \u00b6 See also: README.md | Overview | Getting Started | Hardware Overview | Firmware & Configuration | Usage & Troubleshooting | Developer Guide | FAQ | Contact & Support Welcome to the PumpHouseBoss project wiki! PumpHouseBoss is an ESPHome-based system for monitoring and managing commercial or residential pumphouse and water distribution/filtration systems. This wiki provides in-depth guides, hardware and firmware documentation, troubleshooting, and collaboration resources for users and contributors. Quick Links \u00b6 Getting Started Hardware Overview Firmware & Configuration Usage & Troubleshooting Developer Guide FAQ Contact & Support Table of Contents \u00b6 Welcome & Project Summary Getting Started Hardware Overview Firmware & Configuration Usage & Troubleshooting Developer Guide FAQ Contact & Support Getting Started \u00b6 How to clone, configure, and build your first PumpHouseBoss device See the main README for quick setup instructions Hardware Overview \u00b6 Supported variants (Standard, Professional) Pinout maps, sensors, and display options Firmware and Configuration \u00b6 Modular YAML configuration Secrets management Build and upload process Usage and Troubleshooting \u00b6 Logging and monitoring Common issues and solutions Regression testing Developer Guide \u00b6 Contribution standards Automation and Makefile targets Coding conventions FAQ \u00b6 Answers to common questions about setup, usage, and development Contact and Support \u00b6 Open an issue or pull request on GitHub See the project wiki for more documentation and help (coming soon) For more details, see the full documentation site .","title":"Home"},{"location":"Home/#pumphouseboss-wiki-home","text":"See also: README.md | Overview | Getting Started | Hardware Overview | Firmware & Configuration | Usage & Troubleshooting | Developer Guide | FAQ | Contact & Support Welcome to the PumpHouseBoss project wiki! PumpHouseBoss is an ESPHome-based system for monitoring and managing commercial or residential pumphouse and water distribution/filtration systems. This wiki provides in-depth guides, hardware and firmware documentation, troubleshooting, and collaboration resources for users and contributors.","title":"PumpHouseBoss Wiki Home"},{"location":"Home/#quick-links","text":"Getting Started Hardware Overview Firmware & Configuration Usage & Troubleshooting Developer Guide FAQ Contact & Support","title":"Quick Links"},{"location":"Home/#table-of-contents","text":"Welcome & Project Summary Getting Started Hardware Overview Firmware & Configuration Usage & Troubleshooting Developer Guide FAQ Contact & Support","title":"Table of Contents"},{"location":"Home/#getting-started","text":"How to clone, configure, and build your first PumpHouseBoss device See the main README for quick setup instructions","title":"Getting Started"},{"location":"Home/#hardware-overview","text":"Supported variants (Standard, Professional) Pinout maps, sensors, and display options","title":"Hardware Overview"},{"location":"Home/#firmware-and-configuration","text":"Modular YAML configuration Secrets management Build and upload process","title":"Firmware and Configuration"},{"location":"Home/#usage-and-troubleshooting","text":"Logging and monitoring Common issues and solutions Regression testing","title":"Usage and Troubleshooting"},{"location":"Home/#developer-guide","text":"Contribution standards Automation and Makefile targets Coding conventions","title":"Developer Guide"},{"location":"Home/#faq","text":"Answers to common questions about setup, usage, and development","title":"FAQ"},{"location":"Home/#contact-and-support","text":"Open an issue or pull request on GitHub See the project wiki for more documentation and help (coming soon) For more details, see the full documentation site .","title":"Contact and Support"},{"location":"Overview/","text":"Overview \u00b6 See also: README.md | Wiki Home | Getting Started | Hardware Overview | Firmware & Configuration | Usage & Troubleshooting | Developer Guide | FAQ | Contact & Support PumpHouseBoss is an ESPHome-based system for monitoring and managing pumphouse and water distribution/filtration systems. It is designed for both commercial and residential use, with modular hardware and firmware, robust automation, and comprehensive documentation. Features \u00b6 Over/under flow-rate detection, alerts, and alarms Automated solenoid control Manual emergency override Historical flow-rate/usage graphing Home Assistant integration LED status indications LCD display support Support for multiple MMUs (Monitor/Management Units) For a full feature list and technical details, see the README.md .","title":"Overview"},{"location":"Overview/#overview","text":"See also: README.md | Wiki Home | Getting Started | Hardware Overview | Firmware & Configuration | Usage & Troubleshooting | Developer Guide | FAQ | Contact & Support PumpHouseBoss is an ESPHome-based system for monitoring and managing pumphouse and water distribution/filtration systems. It is designed for both commercial and residential use, with modular hardware and firmware, robust automation, and comprehensive documentation.","title":"Overview"},{"location":"Overview/#features","text":"Over/under flow-rate detection, alerts, and alarms Automated solenoid control Manual emergency override Historical flow-rate/usage graphing Home Assistant integration LED status indications LCD display support Support for multiple MMUs (Monitor/Management Units) For a full feature list and technical details, see the README.md .","title":"Features"},{"location":"RELEASE-CHECKLIST/","text":"ESPHome Project Repository Disposition (Checklist) \u00b6 1. Version & Branch \u00b6 [ ] Version in VERSION file and Makefile is correct and in sync [ ] Version strings updated in headers and documentation [ ] Working on the correct branch for this release 2. Pre-Commit \u00b6 [ ] Conduct a peer review: Request at least one other contributor to review all code and documentation changes before merging. Reviewers should check for code quality, adherence to project standards, clarity, maintainability, and correctness. Approve only when all checklist items and standards are satisfied. [ ] Review all project files for standards compliance as described in STANDARDS.md. This includes: [ ] Tabs and indentation [ ] Line endings [ ] Line spacing [ ] File-type specific standards: [ ] Build Files [ ] Makefiles [ ] Shell Scripts [ ] Markdown Files [ ] Upadte and validate all header files for standards conformance. [ ] Ensure all files contain the correct version string. [ ] Ensure all files have correct permissions. [ ] Run a spellcheck on all source and documentation files. Correct any spelling errors in code comments, documentation, and user-facing strings. [ ] Review .gitignore and use git status to ensure that no unwanted files are staged for commit or left untracked. [ ] Update and review the README.md , TODO.md , and GIT-COPILOT.md files with all relevant changes since the previous version was checked in. [ ] For every significant change, add a new entry to CHANGELOG.md describing the update. [ ] Update the repository file tree in README.md . [ ] Update the TOC in all documentation files. [ ] Validate links in documentation files. [ ] Run the regression-test.sh script and ensure all tests pass. Resolve any failures. [ ] If this is a release, tag the commit appropriately and follow the project release process. [ ] All code changes must be reviewed and approved by at least one other contributor before merging. 3. Commit & Push \u00b6 [ ] Commit message follows standards (concise, descriptive, references issues if needed) [ ] All staged files are intentional and relevant to the commit [ ] Checklist items above are complete before commit [ ] Push to remote and verify branch is up to date 4. Post-Commit/Pre-Release \u00b6 [ ] make distclean produces a clean workspace [ ] Fresh clone builds successfully; all dependencies are documented [ ] Confirm make help and make version reflect new version [ ] Tag release if appropriate 5. Reset for Next Cycle \u00b6 [ ] Clear all checkboxes above [ ] Update checklist version entry in history table (if present) [ ] Stage/commit checklist reset [ ] Bump VERSION/Makefile for next cycle [ ] Regression Test: make regression-test Remember: Better to catch issues in the checklist than in production! \ud83c\udfaf","title":"RELEASE-CHECKLIST"},{"location":"RELEASE-CHECKLIST/#esphome-project-repository-disposition-checklist","text":"","title":"ESPHome Project Repository Disposition (Checklist)"},{"location":"RELEASE-CHECKLIST/#1-version-branch","text":"[ ] Version in VERSION file and Makefile is correct and in sync [ ] Version strings updated in headers and documentation [ ] Working on the correct branch for this release","title":"1. Version &amp; Branch"},{"location":"RELEASE-CHECKLIST/#2-pre-commit","text":"[ ] Conduct a peer review: Request at least one other contributor to review all code and documentation changes before merging. Reviewers should check for code quality, adherence to project standards, clarity, maintainability, and correctness. Approve only when all checklist items and standards are satisfied. [ ] Review all project files for standards compliance as described in STANDARDS.md. This includes: [ ] Tabs and indentation [ ] Line endings [ ] Line spacing [ ] File-type specific standards: [ ] Build Files [ ] Makefiles [ ] Shell Scripts [ ] Markdown Files [ ] Upadte and validate all header files for standards conformance. [ ] Ensure all files contain the correct version string. [ ] Ensure all files have correct permissions. [ ] Run a spellcheck on all source and documentation files. Correct any spelling errors in code comments, documentation, and user-facing strings. [ ] Review .gitignore and use git status to ensure that no unwanted files are staged for commit or left untracked. [ ] Update and review the README.md , TODO.md , and GIT-COPILOT.md files with all relevant changes since the previous version was checked in. [ ] For every significant change, add a new entry to CHANGELOG.md describing the update. [ ] Update the repository file tree in README.md . [ ] Update the TOC in all documentation files. [ ] Validate links in documentation files. [ ] Run the regression-test.sh script and ensure all tests pass. Resolve any failures. [ ] If this is a release, tag the commit appropriately and follow the project release process. [ ] All code changes must be reviewed and approved by at least one other contributor before merging.","title":"2. Pre-Commit"},{"location":"RELEASE-CHECKLIST/#3-commit-push","text":"[ ] Commit message follows standards (concise, descriptive, references issues if needed) [ ] All staged files are intentional and relevant to the commit [ ] Checklist items above are complete before commit [ ] Push to remote and verify branch is up to date","title":"3. Commit &amp; Push"},{"location":"RELEASE-CHECKLIST/#4-post-commitpre-release","text":"[ ] make distclean produces a clean workspace [ ] Fresh clone builds successfully; all dependencies are documented [ ] Confirm make help and make version reflect new version [ ] Tag release if appropriate","title":"4. Post-Commit/Pre-Release"},{"location":"RELEASE-CHECKLIST/#5-reset-for-next-cycle","text":"[ ] Clear all checkboxes above [ ] Update checklist version entry in history table (if present) [ ] Stage/commit checklist reset [ ] Bump VERSION/Makefile for next cycle [ ] Regression Test: make regression-test Remember: Better to catch issues in the checklist than in production! \ud83c\udfaf","title":"5. Reset for Next Cycle"},{"location":"RELEASE/","text":"Release Notes \u00b6 Version 0.7.0 \u2013 July 26, 2025 \u00b6 Pre-release milestone: Support for multiple Variants, and improved/automated processes and documentation Highlights \u00b6 Support for multiple hardware variants with modular configuration Consistent terminology and improved documentation throughout the project Added a Table of Contents, FAQ, and Contact/Support sections to the README Enhanced Makefile automation and clarified target documentation Improved onboarding workflow and stepwise Getting Started instructions Security best practices: secrets template, gitignore updates, and onboarding guidance Cleaned up and organized project TODOs and release notes General code and documentation cleanup for clarity and maintainability Project Status \u00b6 Modular YAML includes for all major subsystems Secure secrets management and onboarding template Automated build, upload, and logging via Makefile Comprehensive documentation and workflow standards Comprehensive documentation and workflow standards \u26a0\ufe0f This project is currently under active development and is _not ready for practical deployment. Use at your own risk!_ \u26a0\ufe0f Version 0.6.7 \u2013 July 23, 2025 \u00b6 Pre-release milestone: Modular, maintainable, and secure ESPHome system for ESP32S3 Highlights \u00b6 Major UI improvements: ST7789 display now shows Hostname, SSID, IP, and MAC address, with robust centering and fallback for missing values Font size and layout adjustments for better data fit and readability Fixed MAC address display and improved sensor value handling Provided pinout maps for ESP32S3, ST7789 display, and Pico-LCD hardware components Improved Makefile automation and .gitignore for secrets and generated files Updated secrets.template.yaml and documentation for secure workflow Refined check-in checklist and commit message standards General code cleanup, header consistency, and version reference updates Project Status \u00b6 Modular YAML includes for all major subsystems Secure secrets management and onboarding template Automated build, upload, and logging via Makefile Comprehensive documentation and workflow standards Note: This is a pre-release for internal and development use. v1.0.0 will mark the first stable public release.","title":"RELEASE NOTES"},{"location":"RELEASE/#release-notes","text":"","title":"Release Notes"},{"location":"RELEASE/#version-070-july-26-2025","text":"Pre-release milestone: Support for multiple Variants, and improved/automated processes and documentation","title":"Version 0.7.0 \u2013 July 26, 2025"},{"location":"RELEASE/#highlights","text":"Support for multiple hardware variants with modular configuration Consistent terminology and improved documentation throughout the project Added a Table of Contents, FAQ, and Contact/Support sections to the README Enhanced Makefile automation and clarified target documentation Improved onboarding workflow and stepwise Getting Started instructions Security best practices: secrets template, gitignore updates, and onboarding guidance Cleaned up and organized project TODOs and release notes General code and documentation cleanup for clarity and maintainability","title":"Highlights"},{"location":"RELEASE/#project-status","text":"Modular YAML includes for all major subsystems Secure secrets management and onboarding template Automated build, upload, and logging via Makefile Comprehensive documentation and workflow standards Comprehensive documentation and workflow standards \u26a0\ufe0f This project is currently under active development and is _not ready for practical deployment. Use at your own risk!_ \u26a0\ufe0f","title":"Project Status"},{"location":"RELEASE/#version-067-july-23-2025","text":"Pre-release milestone: Modular, maintainable, and secure ESPHome system for ESP32S3","title":"Version 0.6.7 \u2013 July 23, 2025"},{"location":"RELEASE/#highlights_1","text":"Major UI improvements: ST7789 display now shows Hostname, SSID, IP, and MAC address, with robust centering and fallback for missing values Font size and layout adjustments for better data fit and readability Fixed MAC address display and improved sensor value handling Provided pinout maps for ESP32S3, ST7789 display, and Pico-LCD hardware components Improved Makefile automation and .gitignore for secrets and generated files Updated secrets.template.yaml and documentation for secure workflow Refined check-in checklist and commit message standards General code cleanup, header consistency, and version reference updates","title":"Highlights"},{"location":"RELEASE/#project-status_1","text":"Modular YAML includes for all major subsystems Secure secrets management and onboarding template Automated build, upload, and logging via Makefile Comprehensive documentation and workflow standards Note: This is a pre-release for internal and development use. v1.0.0 will mark the first stable public release.","title":"Project Status"},{"location":"STANDARDS/","text":"STANDARDS.md \u2014 Project Conventions & Coding Standards \u00b6 This document defines the conventions, standards, and best practices for all contributors to the PumpHouseBoss project. Adhering to these standards ensures code quality, maintainability, and a consistent developer experience. For the purpose of this project, the following terms are defined: - project files: Includes source files, build files, project configuration files, and documentation. - build files: Includes source files, makefiles, and configuration files required for executing makefile targets. - source files: Includes all files consisting of source code (i.e., C/C++, YAML, Python, and shell scripts). - documentation: Includes files consisting of Markdown or HTML. Table of Contents \u00b6 General Principles Project Files Build Files Makefiles Shell Scripts Markdown Files Versioning File Permissions Check-in Procedure Commit Messages Session Continuity General Principles \u00b6 Write clear, maintainable, and well-documented code. Prioritize explicitness and readability over cleverness. All project files must be licensed under GPL v3.0 or later. Project Files \u00b6 Tabs and Indentation \u00b6 Indentation must use spaces, not tabs, Except for Makefiles, tabs should be expanded to 4 spaces. Configure your editor to display tabs as 4 spaces and to insert spaces when the Tab key is pressed. For VS Code, add the following to your workspace settings: json { \"editor.tabSize\": 4, \"editor.insertSpaces\": true, \"files.eol\": \"\\n\" } For Vim, add to your .vimrc : vim set tabstop=4 set shiftwidth=4 set expandtab set fileformat=unix For Emacs, add to your .emacs or .dir-locals.el : elisp (setq-default indent-tabs-mode nil) (setq-default tab-width 4) (setq-default buffer-file-coding-system 'utf-8-unix) Note: Makefiles are required to use tabs for indentation, and as such are an exception to this rule. Line Endings \u00b6 Files must use Unix (LF) line endings. Do not use Windows (CRLF). Lines should not include trailing whitespce. Lines should not end with trailing whitespace. Line Spacing \u00b6 Files should not start with empty lines, and should end with a single empty line. Major sections should be separated by two blank lines. Minor sections should be separated by a single blank line. Build Files \u00b6 Build files must begin with the standard project header, including in order: Required: Name, Type, Purpose, Version, Date, Author Where Applicable: Description, Features, Usage, Note, Caution Required: License, Copyright See Makefile for a canonical example. Build files must include comprehensive inline documentation, including: Inline documentation consists of comments and explanations within the code, scripts, or configuration files that clarify the purpose, logic, and usage of code sections (such as code blocks, function definitions, and logic groupings), functions, variables, and complex logic. Use clear, concise comments to aid future maintainers and reviewers. Inline documentation should follow the conventions of the language or file type (e.g., # for shell scripts, // or /* ... */ for C/C++, # for YAML, etc.). PascalCase is preferred for variable names (i.e., ThisIsAVariable). UPPER_SNAKE_CASE (also known as CONSTANT_CASE) is preferred for macros and definitions (i.e., THIS_IS_A_MACRO). Note: Build files include Makefiles and related configuration files required for building the project. Makefiles are a special type of build file and must follow both the general build file standards and the additional Makefile-specific standards below. Makefiles \u00b6 Makefiles are a type of build file and must follow all build file standards in addition to the following Makefile-specific conventions: - Use phony targets for all non-file targets. - Prepend targets not meant for external use with an underscore (\"_\"). For example, use _internal_target for internal-only targets. This helps distinguish private/internal targets from those intended for public use. - Group related targets (build, docs, clean, etc.) and document them. - Use variables for directories and file lists. - Indent shell code in recipes for human readability. - Quoting Variables: Quote all variable expansions, e.g., \"$(VAR)\", to prevent word splitting and globbing issues. Shell Scripts \u00b6 Use #!/usr/bin/env bash as the shebang for all Bash scripts. Strict Mode: Use set -u (treat unset variables as errors), set -e (exit on error), and set -o pipefail (fail pipelines if any command fails) at the top of all scripts unless there is a documented reason not to. If you must omit -e (e.g., for scripts with background jobs), document this in the script header. Quoting Variables: Quote all variable expansions, e.g., \"${VAR}\" , to prevent word splitting and globbing issues. Use colorized output only if the terminal supports it. Always clean up background processes on exit or interruption. Markdown Files \u00b6 Use two blank lines before the start of major (##) sections/headers. Use one blank line before the start of minor (###...) sections/headers. Use one blank line between paragraphs or list blocks. Do not add extra blank lines within lists or between list items. Do not add blank lines before or after code blocks inside lists. Use one blank line before and after code blocks that are not inside a list. Keep Markdown formatting consistent for readability and proper rendering. Versioning \u00b6 Keep the VERSION file and Makefile version in sync. Update version strings in headers and documentation as part of the release process. File Permissions \u00b6 All executable scripts (e.g., Bash, Python) must be committed with executable permissions ( chmod 755 or chmod +x ). Data files, documentation, and configuration files should not be executable (use chmod 644 ). Do not commit files as world-writable (no chmod 777 ). Use git update-index --chmod=+x <file> to set executable bit in git if needed. Always check file permissions before committing new or modified files. Check-in Procedure \u00b6 Before committing code or documentation, contributors must: Conduct a peer review: Request at least one other contributor to review all code and documentation changes before merging. Reviewers should check for code quality, adherence to project standards, clarity, maintainability, and correctness. Provide constructive feedback and suggest improvements where needed. Ensure all comments and requested changes are addressed before approval. Approve the changes only when all checklist items and standards are satisfied. Perform all steps and clear all checkmarks in the checklist file ( RELEASE-CHECKLIST.md ). Commit Messages \u00b6 Use structured commit messages: Short summary (max 72 chars) Blank line Detailed description (if needed) Reference related issues or action items when appropriate. Session Continuity \u00b6 Use GIT-COPILOT.md for session context and developer continuity. This document is maintained by GitHub Copilot and the project maintainers. Please propose updates as standards evolve.","title":"STANDARDS"},{"location":"STANDARDS/#standardsmd-project-conventions-coding-standards","text":"This document defines the conventions, standards, and best practices for all contributors to the PumpHouseBoss project. Adhering to these standards ensures code quality, maintainability, and a consistent developer experience. For the purpose of this project, the following terms are defined: - project files: Includes source files, build files, project configuration files, and documentation. - build files: Includes source files, makefiles, and configuration files required for executing makefile targets. - source files: Includes all files consisting of source code (i.e., C/C++, YAML, Python, and shell scripts). - documentation: Includes files consisting of Markdown or HTML.","title":"STANDARDS.md \u2014 Project Conventions &amp; Coding Standards"},{"location":"STANDARDS/#table-of-contents","text":"General Principles Project Files Build Files Makefiles Shell Scripts Markdown Files Versioning File Permissions Check-in Procedure Commit Messages Session Continuity","title":"Table of Contents"},{"location":"STANDARDS/#general-principles","text":"Write clear, maintainable, and well-documented code. Prioritize explicitness and readability over cleverness. All project files must be licensed under GPL v3.0 or later.","title":"General Principles"},{"location":"STANDARDS/#project-files","text":"","title":"Project Files"},{"location":"STANDARDS/#tabs-and-indentation","text":"Indentation must use spaces, not tabs, Except for Makefiles, tabs should be expanded to 4 spaces. Configure your editor to display tabs as 4 spaces and to insert spaces when the Tab key is pressed. For VS Code, add the following to your workspace settings: json { \"editor.tabSize\": 4, \"editor.insertSpaces\": true, \"files.eol\": \"\\n\" } For Vim, add to your .vimrc : vim set tabstop=4 set shiftwidth=4 set expandtab set fileformat=unix For Emacs, add to your .emacs or .dir-locals.el : elisp (setq-default indent-tabs-mode nil) (setq-default tab-width 4) (setq-default buffer-file-coding-system 'utf-8-unix) Note: Makefiles are required to use tabs for indentation, and as such are an exception to this rule.","title":"Tabs and Indentation"},{"location":"STANDARDS/#line-endings","text":"Files must use Unix (LF) line endings. Do not use Windows (CRLF). Lines should not include trailing whitespce. Lines should not end with trailing whitespace.","title":"Line Endings"},{"location":"STANDARDS/#line-spacing","text":"Files should not start with empty lines, and should end with a single empty line. Major sections should be separated by two blank lines. Minor sections should be separated by a single blank line.","title":"Line Spacing"},{"location":"STANDARDS/#build-files","text":"Build files must begin with the standard project header, including in order: Required: Name, Type, Purpose, Version, Date, Author Where Applicable: Description, Features, Usage, Note, Caution Required: License, Copyright See Makefile for a canonical example. Build files must include comprehensive inline documentation, including: Inline documentation consists of comments and explanations within the code, scripts, or configuration files that clarify the purpose, logic, and usage of code sections (such as code blocks, function definitions, and logic groupings), functions, variables, and complex logic. Use clear, concise comments to aid future maintainers and reviewers. Inline documentation should follow the conventions of the language or file type (e.g., # for shell scripts, // or /* ... */ for C/C++, # for YAML, etc.). PascalCase is preferred for variable names (i.e., ThisIsAVariable). UPPER_SNAKE_CASE (also known as CONSTANT_CASE) is preferred for macros and definitions (i.e., THIS_IS_A_MACRO). Note: Build files include Makefiles and related configuration files required for building the project. Makefiles are a special type of build file and must follow both the general build file standards and the additional Makefile-specific standards below.","title":"Build Files"},{"location":"STANDARDS/#makefiles","text":"Makefiles are a type of build file and must follow all build file standards in addition to the following Makefile-specific conventions: - Use phony targets for all non-file targets. - Prepend targets not meant for external use with an underscore (\"_\"). For example, use _internal_target for internal-only targets. This helps distinguish private/internal targets from those intended for public use. - Group related targets (build, docs, clean, etc.) and document them. - Use variables for directories and file lists. - Indent shell code in recipes for human readability. - Quoting Variables: Quote all variable expansions, e.g., \"$(VAR)\", to prevent word splitting and globbing issues.","title":"Makefiles"},{"location":"STANDARDS/#shell-scripts","text":"Use #!/usr/bin/env bash as the shebang for all Bash scripts. Strict Mode: Use set -u (treat unset variables as errors), set -e (exit on error), and set -o pipefail (fail pipelines if any command fails) at the top of all scripts unless there is a documented reason not to. If you must omit -e (e.g., for scripts with background jobs), document this in the script header. Quoting Variables: Quote all variable expansions, e.g., \"${VAR}\" , to prevent word splitting and globbing issues. Use colorized output only if the terminal supports it. Always clean up background processes on exit or interruption.","title":"Shell Scripts"},{"location":"STANDARDS/#markdown-files","text":"Use two blank lines before the start of major (##) sections/headers. Use one blank line before the start of minor (###...) sections/headers. Use one blank line between paragraphs or list blocks. Do not add extra blank lines within lists or between list items. Do not add blank lines before or after code blocks inside lists. Use one blank line before and after code blocks that are not inside a list. Keep Markdown formatting consistent for readability and proper rendering.","title":"Markdown Files"},{"location":"STANDARDS/#versioning","text":"Keep the VERSION file and Makefile version in sync. Update version strings in headers and documentation as part of the release process.","title":"Versioning"},{"location":"STANDARDS/#file-permissions","text":"All executable scripts (e.g., Bash, Python) must be committed with executable permissions ( chmod 755 or chmod +x ). Data files, documentation, and configuration files should not be executable (use chmod 644 ). Do not commit files as world-writable (no chmod 777 ). Use git update-index --chmod=+x <file> to set executable bit in git if needed. Always check file permissions before committing new or modified files.","title":"File Permissions"},{"location":"STANDARDS/#check-in-procedure","text":"Before committing code or documentation, contributors must: Conduct a peer review: Request at least one other contributor to review all code and documentation changes before merging. Reviewers should check for code quality, adherence to project standards, clarity, maintainability, and correctness. Provide constructive feedback and suggest improvements where needed. Ensure all comments and requested changes are addressed before approval. Approve the changes only when all checklist items and standards are satisfied. Perform all steps and clear all checkmarks in the checklist file ( RELEASE-CHECKLIST.md ).","title":"Check-in Procedure"},{"location":"STANDARDS/#commit-messages","text":"Use structured commit messages: Short summary (max 72 chars) Blank line Detailed description (if needed) Reference related issues or action items when appropriate.","title":"Commit Messages"},{"location":"STANDARDS/#session-continuity","text":"Use GIT-COPILOT.md for session context and developer continuity. This document is maintained by GitHub Copilot and the project maintainers. Please propose updates as standards evolve.","title":"Session Continuity"},{"location":"TODO/","text":"TODO \u00b6 automate check-in procedures create publish (or similar target) to populate the wiki should i emphasize regression-test and check-in procedures to collaboration section of README.md Codebase \u00b6 regression-test.sh should perform validation on scripts Documentation \u00b6 figure out how to make yaml files look reasonable after conversion to md review mkdocs output review and update esphome-docs Makefile \u00b6 Build table showing what targets depend on what variables, and check for them Add a make-all target to build all variants \"OR\" support a TESTS make variable that spawns make target for all nodes in config/phb-*-test.mk distclean should wipe out regression-test.log (should it really?) Wiki \u00b6 stand up Next Cycle \u00b6 add/test HomeAssistant Support add/test Tuya support Notes/Reminders \u00b6 must be possbile to disable MMUs CTRL for lines that must NEVER be shut-off Possible Future Enhancements \u00b6 Add automated linting/formatting steps (e.g., shellcheck, yamllint, markdownlint) to the check-in process Add a step to check for outdated dependencies and update lock files as needed Integrate security checks (e.g., bandit for Python, npm audit for Node) before release Track and enforce test coverage, ensuring new code is coveredeby tests Consider CI/CD for linting, spellcheck, and test coverage","title":"TODO"},{"location":"TODO/#todo","text":"automate check-in procedures create publish (or similar target) to populate the wiki should i emphasize regression-test and check-in procedures to collaboration section of README.md","title":"TODO"},{"location":"TODO/#codebase","text":"regression-test.sh should perform validation on scripts","title":"Codebase"},{"location":"TODO/#documentation","text":"figure out how to make yaml files look reasonable after conversion to md review mkdocs output review and update esphome-docs","title":"Documentation"},{"location":"TODO/#makefile","text":"Build table showing what targets depend on what variables, and check for them Add a make-all target to build all variants \"OR\" support a TESTS make variable that spawns make target for all nodes in config/phb-*-test.mk distclean should wipe out regression-test.log (should it really?)","title":"Makefile"},{"location":"TODO/#wiki","text":"stand up","title":"Wiki"},{"location":"TODO/#next-cycle","text":"add/test HomeAssistant Support add/test Tuya support","title":"Next Cycle"},{"location":"TODO/#notesreminders","text":"must be possbile to disable MMUs CTRL for lines that must NEVER be shut-off","title":"Notes/Reminders"},{"location":"TODO/#possible-future-enhancements","text":"Add automated linting/formatting steps (e.g., shellcheck, yamllint, markdownlint) to the check-in process Add a step to check for outdated dependencies and update lock files as needed Integrate security checks (e.g., bandit for Python, npm audit for Node) before release Track and enforce test coverage, ensuring new code is coveredeby tests Consider CI/CD for linting, spellcheck, and test coverage","title":"Possible Future Enhancements"},{"location":"Usage-and-Troubleshooting/","text":"Usage & Troubleshooting \u00b6 See also: README.md | Wiki Home | Overview | Getting Started | Hardware Overview | Firmware & Configuration | Developer Guide | FAQ | Contact & Support This section provides guidance on using PumpHouseBoss and resolving common issues. Logging & Monitoring \u00b6 Use make logs , make logs-follow , and related targets Log files are stored in the logs/ directory Common Issues \u00b6 Build failures: Check for missing secrets/config files Upload failures: Check device connection and COMM_PATH Logging issues: Ensure device is running and correct log target is used Regression Testing \u00b6 Run make regression-test to validate builds For more help, see the FAQ or open an issue on GitHub.","title":"Usage & Troubleshooting"},{"location":"Usage-and-Troubleshooting/#usage-troubleshooting","text":"See also: README.md | Wiki Home | Overview | Getting Started | Hardware Overview | Firmware & Configuration | Developer Guide | FAQ | Contact & Support This section provides guidance on using PumpHouseBoss and resolving common issues.","title":"Usage &amp; Troubleshooting"},{"location":"Usage-and-Troubleshooting/#logging-monitoring","text":"Use make logs , make logs-follow , and related targets Log files are stored in the logs/ directory","title":"Logging &amp; Monitoring"},{"location":"Usage-and-Troubleshooting/#common-issues","text":"Build failures: Check for missing secrets/config files Upload failures: Check device connection and COMM_PATH Logging issues: Ensure device is running and correct log target is used","title":"Common Issues"},{"location":"Usage-and-Troubleshooting/#regression-testing","text":"Run make regression-test to validate builds For more help, see the FAQ or open an issue on GitHub.","title":"Regression Testing"},{"location":"display_st7789/","text":"Component: display_st7789 \u00b6 Source: /cygdrive/c/cygwin64/home/rhendel/git/PumpHouseBoss/common/display_st7789.yaml \u00b6 Generated: Sun, Jul 27, 2025 11:33:46 PM \u00b6 ------------------------------------------------------------------------------ \u00b6 File: display_st7789.yaml \u00b6 File Type: ESPHome YAML Include \u00b6 Purpose: Waveshare Pico LCD 1.3\" Display Module subsystem configuration \u00b6 Version: 0.7.0 \u00b6 Date: 2025-07-24 \u00b6 Author: Roland Tembo Hendel rhendel@nexuslogic.com \u00b6 \u00b6 Description: Configuration for 240x240 pixel IPS display, 4 buttons, joystick, \u00b6 ST7789V driver, SPI interface, and rPi Pico compatibility. \u00b6 \u00b6 Features: - 240x240 pixel display, IPS, 65k RGB color \u00b6 - 4 momentary buttons (A, B, X, Y) \u00b6 - 4-way joystick with select button \u00b6 - ST7789V display driver support \u00b6 - SPI interface for communication \u00b6 - rPi Pico Pin compatibility \u00b6 \u00b6 License: GNU General Public License v3.0 \u00b6 SPDX-License-Identifier: GPL-3.0-or-later \u00b6 Copyright: (c) 2025 Roland Tembo Hendel \u00b6 This program is free software: you can redistribute it and/or \u00b6 modify it under the terms of the GNU General Public License. \u00b6 ------------------------------------------------------------------------------ \u00b6 ------------------------------------------------------------------------------ \u00b6 YAML linter configuration \u00b6 - Disables quoted-strings rule for improved readability \u00b6 ------------------------------------------------------------------------------ \u00b6 yamllint disable rule:quoted-strings \u00b6 ------------------------------------------------------------------------------ \u00b6 Waveshare Pico-LCD-1.3 Display Standard Pinout Map (Vertical, Top View) \u00b6 ------------------------------------------------------------------------------ \u00b6 \u00b6 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u00b6 VBUS \u2500\u2524 40 01 \u251c\u2500 NC \u00b6 VSYS \u2500\u2524 39 \u2554\u2550\u2550\u2557 02 \u251c\u2500 NC \u00b6 GND \u2500\u2524 38 \u2554\u2550\u2550\u255d \u255a\u2550\u2550\u2557 03 \u251c\u2500 GND \u00b6 NC \u2500\u2524 37 \u255a\u2550\u2550\u2557 \u2554\u2550\u2550\u255d 04 \u251c\u2500 JOY_UP \u00b6 NC \u2500\u2524 36 \u255a\u2550\u2550\u255d 05 \u251c\u2500 JOY_IN \u00b6 NC \u2500\u2524 35 06 \u251c\u2500 NC \u00b6 NC \u2500\u2524 34 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 07 \u251c\u2500 NC \u00b6 GND \u2500\u2524 33 \u2502 \u2502 08 \u251c\u2500 GND \u00b6 NC \u2500\u2524 32 \u2502 \u2502 09 \u251c\u2500 NC \u00b6 NC \u2500\u2524 31 \u2502 Waveshare\u2122 \u2502 10 \u251c\u2500 NC \u00b6 NC \u2500\u2524 30 \u2502 Pico-LCD \u2502 11 \u251c\u2500 DC \u00b6 NC \u2500\u2524 29 \u2502 1.3\" \u2502 12 \u251c\u2500 CS \u00b6 NC \u2500\u2524 28 \u2502 \u2502 13 \u251c\u2500 GND \u00b6 BTN_Y \u2500\u2524 27 \u2502 \u2502 14 \u251c\u2500 CLK \u00b6 JOY_RIGHT \u2500\u2524 26 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 15 \u251c\u2500 MOSI \u00b6 BTN_X \u2500\u2524 25 16 \u251c\u2500 RST \u00b6 JOY_DOWN \u2500\u2524 24 17 \u251c\u2500 BL \u00b6 GND \u2500\u2524 23 \u250c\u2500\u2510\u250c\u2500\u2510\u250c\u2500\u2510\u250c\u2500\u2510 18 \u251c\u2500 GND \u00b6 BTN_B \u2500\u2524 22 \u2514\u2500\u2518\u2514\u2500\u2518\u2514\u2500\u2518\u2514\u2500\u2518 19 \u251c\u2500 NC \u00b6 JOY_LEFT \u2500\u2524 21 Y X B A 20 \u251c\u2500 BTN_A \u00b6 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u00b6 \u00b6 Notes: \u00b6 - pin 40, VBUS; 5 VDC \u00b6 - pin 39, VSYS; NC \u00b6 - pin 11, DC; Data/Command - high for data, low for command) \u00b6 - pin 12, CS; Chip Select - active low \u00b6 - pin 16, RST; Reset - active low \u00b6 - pin 17, BL; Backlight - active high \u00b6 \u00b6 ------------------------------------------------------------------------------ \u00b6 ------------------------------------------------------------------------------ \u00b6 Font used for on-screen display \u00b6 - Loads Google Noto Sans Mono font for display text \u00b6 - Sets font size for UI elements \u00b6 - Parameters: \u00b6 file: Font file or URL \u00b6 id: Font ID for reference \u00b6 size: Font size in points \u00b6 ------------------------------------------------------------------------------ \u00b6 font: - file: gfonts://Noto Sans Mono id: st7789_font size: 22 ------------------------------------------------------------------------------ \u00b6 Status icon images \u00b6 - Loads PNG images for status and WiFi signal icons \u00b6 - Used for UI status bar and indicators \u00b6 - Parameters: \u00b6 file: Path to image file \u00b6 id: Image ID for reference \u00b6 type: Image color type (e.g., RGB) \u00b6 resize: Resize dimensions (pixels) \u00b6 ------------------------------------------------------------------------------ \u00b6 image: # Status icons - file: \"icons/status_ok.png\" id: status_ok_icon type: RGB resize: 32x32 - file: \"icons/status_warn.png\" id: status_warn_icon type: RGB resize: 32x32 - file: \"icons/status_error.png\" id: status_error_icon type: RGB resize: 32x32 # WiFi signal icons - file: \"icons/wifi_0.png\" id: wifi_0_icon type: RGB resize: 32x32 - file: \"icons/wifi_1.png\" id: wifi_1_icon type: RGB resize: 32x32 - file: \"icons/wifi_2.png\" id: wifi_2_icon type: RGB resize: 32x32 - file: \"icons/wifi_3.png\" id: wifi_3_icon type: RGB resize: 32x32 - file: \"icons/wifi_4.png\" id: wifi_4_icon type: RGB resize: 32x32 ------------------------------------------------------------------------------ \u00b6 Text and sensor definitions \u00b6 - Exposes WiFi info, hostname, date, and time as text sensors \u00b6 - Provides template sensors for custom data \u00b6 - Parameters (per sensor): \u00b6 name: Sensor name \u00b6 id: Sensor ID \u00b6 lambda: Lambda function for value \u00b6 update_interval: Update frequency \u00b6 ------------------------------------------------------------------------------ \u00b6 text_sensor: - platform: wifi_info ip_address: name: \"WiFi IP Address\" id: ip_address ssid: name: \"WiFi SSID\" id: ssid mac_address: name: \"WiFi MAC Address\" id: mac_address - platform: template name: \"Hostname\" id: hostname lambda: |- return App.get_name(); update_interval: 60s platform: template name: \"Current Date\" id: current_date # Returns the current date as YYYY-MM-DD lambda: |- char str[16]; time_t now = ::time(nullptr); strftime(str, sizeof(str), \"%Y-%m-%d\", localtime(&now)); return std::string(str); update_interval: 60s platform: template name: \"Current Time\" id: current_time # Returns the current time as HH:MM:SS lambda: |- char str[16]; time_t now = ::time(nullptr); strftime(str, sizeof(str), \"%H:%M:%S\", localtime(&now)); return std::string(str); update_interval: 1s sensor: - platform: wifi_signal name: WiFi Signal Strength id: wifi_signal_strength update_interval: 60s ------------------------------------------------------------------------------ \u00b6 Display driver configuration block for ST7789V LCD \u00b6 - Configures resolution, pinout, refresh rate, and UI rendering logic \u00b6 - Includes dynamic rendering of flow rate sensor value \u00b6 - Screen is cleared to teal and overlays two lines of text \u00b6 - Parameters: \u00b6 platform: Display platform (st7789v) \u00b6 model: Display model (CUSTOM) \u00b6 cs_pin: Chip select pin \u00b6 dc_pin: Data/command pin \u00b6 reset_pin: Reset line \u00b6 width: Display width (pixels) \u00b6 height: Display height (pixels) \u00b6 update_interval: Refresh interval \u00b6 data_rate: SPI clock frequency \u00b6 ------------------------------------------------------------------------------ \u00b6 display: - platform: st7789v model: CUSTOM cs_pin: ${display_cs_pin} # cs_pin Chip select pin dc_pin: ${display_dc_pin} # dc_pin Data/command pin reset_pin: ${display_reset_pin} # reset_pin Reset line width: 240 height: 240 offset_width: 0 offset_height: 0 rotation: 0 update_interval: 1s # update_interval Refresh every second data_rate: 2MHz # data_rate SPI clock frequency auto_clear_enabled: false lambda: |- // Colors auto white = Color(255, 255, 255); auto blue = Color(0, 0, 255); auto teal = Color(0, 128, 128); auto black = Color(0, 0, 0); // establish status pane it . rectangle ( 0 , 0 , 239 , 39 , white ); // establish data pane it . filled_rectangle ( 0 , 40 , 239 , 239 , blue ); it . rectangle ( 0 , 40 , 239 , 239 , white ); // Draw status_ok icon at ( 4 , 4 ) in the status bar it . image ( 4 , 4 , id ( status_ok_icon )); // TODO : add logic to determine which status icon to use // Draw WiFi icons ( Testing ) it . image ( 204 , 4 , id ( wifi_4_icon )); // TODO : add logic to determine which WiFi icon to use // Display device info in the data pane int y = 56 ; int line_height = 32 ; // Estimate average character width for Noto Sans Mono 22 pt const int char_width = 12 ; std :: string hostname_str = id ( hostname ) . state ; int x = ( 240 - ( hostname_str . length () * char_width )) / 2 ; it . printf ( x , y , id ( st7789_font ), white , \" %s \" , hostname_str . c_str ()); y += line_height ; std :: string ssid_str = id ( ssid ) . state . empty () ? std :: string ( \"SSID: N/A\" ) : id ( ssid ) . state ; x = ( 240 - ( ssid_str . length () * char_width )) / 2 ; it . printf ( x , y , id ( st7789_font ), white , \" %s \" , ssid_str . c_str ()); y += line_height ; std :: string ip_str = id ( ip_address ) . state . empty () ? std :: string ( \"IP: N/A\" ) : id ( ip_address ) . state ; x = ( 240 - ( ip_str . length () * char_width )) / 2 ; it . printf ( x , y , id ( st7789_font ), white , \" %s \" , ip_str . c_str ()); y += line_height ; std :: string mac_str = id ( mac_address ) . state . empty () ? std :: string ( \"MAC: N/A\" ) : id ( mac_address ) . state ; x = ( 240 - ( mac_str . length () * char_width )) / 2 ; it . printf ( x , y , id ( st7789_font ), white , \" %s \" , mac_str . c_str ());","title":"Display"},{"location":"display_st7789/#component-display_st7789","text":"","title":"Component: display_st7789"},{"location":"display_st7789/#source-cygdriveccygwin64homerhendelgitpumphousebosscommondisplay_st7789yaml","text":"","title":"Source: /cygdrive/c/cygwin64/home/rhendel/git/PumpHouseBoss/common/display_st7789.yaml"},{"location":"display_st7789/#generated-sun-jul-27-2025-113346-pm","text":"","title":"Generated: Sun, Jul 27, 2025 11:33:46 PM"},{"location":"display_st7789/#-","text":"","title":"------------------------------------------------------------------------------"},{"location":"display_st7789/#file-display_st7789yaml","text":"","title":"File: display_st7789.yaml"},{"location":"display_st7789/#file-type-esphome-yaml-include","text":"","title":"File Type: ESPHome YAML Include"},{"location":"display_st7789/#purpose-waveshare-pico-lcd-13-display-module-subsystem-configuration","text":"","title":"Purpose: Waveshare Pico LCD 1.3\" Display Module subsystem configuration"},{"location":"display_st7789/#version-070","text":"","title":"Version: 0.7.0"},{"location":"display_st7789/#date-2025-07-24","text":"","title":"Date: 2025-07-24"},{"location":"display_st7789/#author-roland-tembo-hendel-rhendelnexuslogiccom","text":"","title":"Author: Roland Tembo Hendel &#114;&#104;&#101;&#110;&#100;&#101;&#108;&#64;&#110;&#101;&#120;&#117;&#115;&#108;&#111;&#103;&#105;&#99;&#46;&#99;&#111;&#109;"},{"location":"display_st7789/#_1","text":"","title":""},{"location":"display_st7789/#description-configuration-for-240x240-pixel-ips-display-4-buttons-joystick","text":"","title":"Description: Configuration for 240x240 pixel IPS display, 4 buttons, joystick,"},{"location":"display_st7789/#st7789v-driver-spi-interface-and-rpi-pico-compatibility","text":"","title":"ST7789V driver, SPI interface, and rPi Pico compatibility."},{"location":"display_st7789/#_2","text":"","title":""},{"location":"display_st7789/#features-240x240-pixel-display-ips-65k-rgb-color","text":"","title":"Features: - 240x240 pixel display, IPS, 65k RGB color"},{"location":"display_st7789/#-4-momentary-buttons-a-b-x-y","text":"","title":"- 4 momentary buttons (A, B, X, Y)"},{"location":"display_st7789/#-4-way-joystick-with-select-button","text":"","title":"- 4-way joystick with select button"},{"location":"display_st7789/#-st7789v-display-driver-support","text":"","title":"- ST7789V display driver support"},{"location":"display_st7789/#-spi-interface-for-communication","text":"","title":"- SPI interface for communication"},{"location":"display_st7789/#-rpi-pico-pin-compatibility","text":"","title":"- rPi Pico Pin compatibility"},{"location":"display_st7789/#_3","text":"","title":""},{"location":"display_st7789/#license-gnu-general-public-license-v30","text":"","title":"License: GNU General Public License v3.0"},{"location":"display_st7789/#spdx-license-identifier-gpl-30-or-later","text":"","title":"SPDX-License-Identifier: GPL-3.0-or-later"},{"location":"display_st7789/#copyright-c-2025-roland-tembo-hendel","text":"","title":"Copyright: (c) 2025 Roland Tembo Hendel"},{"location":"display_st7789/#this-program-is-free-software-you-can-redistribute-it-andor","text":"","title":"This program is free software: you can redistribute it and/or"},{"location":"display_st7789/#modify-it-under-the-terms-of-the-gnu-general-public-license","text":"","title":"modify it under the terms of the GNU General Public License."},{"location":"display_st7789/#-_1","text":"","title":"------------------------------------------------------------------------------"},{"location":"display_st7789/#-_2","text":"","title":"------------------------------------------------------------------------------"},{"location":"display_st7789/#yaml-linter-configuration","text":"","title":"YAML linter configuration"},{"location":"display_st7789/#-disables-quoted-strings-rule-for-improved-readability","text":"","title":"- Disables quoted-strings rule for improved readability"},{"location":"display_st7789/#-_3","text":"","title":"------------------------------------------------------------------------------"},{"location":"display_st7789/#yamllint-disable-rulequoted-strings","text":"","title":"yamllint disable rule:quoted-strings"},{"location":"display_st7789/#-_4","text":"","title":"------------------------------------------------------------------------------"},{"location":"display_st7789/#waveshare-pico-lcd-13-display-standard-pinout-map-vertical-top-view","text":"","title":"Waveshare Pico-LCD-1.3 Display Standard Pinout Map (Vertical, Top View)"},{"location":"display_st7789/#-_5","text":"","title":"------------------------------------------------------------------------------"},{"location":"display_st7789/#_4","text":"","title":""},{"location":"display_st7789/#_5","text":"","title":"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510"},{"location":"display_st7789/#vbus-40-01-nc","text":"","title":"VBUS \u2500\u2524 40 01 \u251c\u2500 NC"},{"location":"display_st7789/#vsys-39-02-nc","text":"","title":"VSYS \u2500\u2524 39 \u2554\u2550\u2550\u2557 02 \u251c\u2500 NC"},{"location":"display_st7789/#gnd-38-03-gnd","text":"","title":"GND \u2500\u2524 38 \u2554\u2550\u2550\u255d \u255a\u2550\u2550\u2557 03 \u251c\u2500 GND"},{"location":"display_st7789/#nc-37-04-joy_up","text":"","title":"NC \u2500\u2524 37 \u255a\u2550\u2550\u2557 \u2554\u2550\u2550\u255d 04 \u251c\u2500 JOY_UP"},{"location":"display_st7789/#nc-36-05-joy_in","text":"","title":"NC \u2500\u2524 36 \u255a\u2550\u2550\u255d 05 \u251c\u2500 JOY_IN"},{"location":"display_st7789/#nc-35-06-nc","text":"","title":"NC \u2500\u2524 35 06 \u251c\u2500 NC"},{"location":"display_st7789/#nc-34-07-nc","text":"","title":"NC \u2500\u2524 34 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 07 \u251c\u2500 NC"},{"location":"display_st7789/#gnd-33-08-gnd","text":"","title":"GND \u2500\u2524 33 \u2502 \u2502 08 \u251c\u2500 GND"},{"location":"display_st7789/#nc-32-09-nc","text":"","title":"NC \u2500\u2524 32 \u2502 \u2502 09 \u251c\u2500 NC"},{"location":"display_st7789/#nc-31-wavesharetm-10-nc","text":"","title":"NC \u2500\u2524 31 \u2502 Waveshare\u2122 \u2502 10 \u251c\u2500 NC"},{"location":"display_st7789/#nc-30-pico-lcd-11-dc","text":"","title":"NC \u2500\u2524 30 \u2502 Pico-LCD \u2502 11 \u251c\u2500 DC"},{"location":"display_st7789/#nc-29-13-12-cs","text":"","title":"NC \u2500\u2524 29 \u2502 1.3\" \u2502 12 \u251c\u2500 CS"},{"location":"display_st7789/#nc-28-13-gnd","text":"","title":"NC \u2500\u2524 28 \u2502 \u2502 13 \u251c\u2500 GND"},{"location":"display_st7789/#btn_y-27-14-clk","text":"","title":"BTN_Y \u2500\u2524 27 \u2502 \u2502 14 \u251c\u2500 CLK"},{"location":"display_st7789/#joy_right-26-15-mosi","text":"","title":"JOY_RIGHT \u2500\u2524 26 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 15 \u251c\u2500 MOSI"},{"location":"display_st7789/#btn_x-25-16-rst","text":"","title":"BTN_X \u2500\u2524 25 16 \u251c\u2500 RST"},{"location":"display_st7789/#joy_down-24-17-bl","text":"","title":"JOY_DOWN \u2500\u2524 24 17 \u251c\u2500 BL"},{"location":"display_st7789/#gnd-23-18-gnd","text":"","title":"GND \u2500\u2524 23 \u250c\u2500\u2510\u250c\u2500\u2510\u250c\u2500\u2510\u250c\u2500\u2510 18 \u251c\u2500 GND"},{"location":"display_st7789/#btn_b-22-19-nc","text":"","title":"BTN_B \u2500\u2524 22 \u2514\u2500\u2518\u2514\u2500\u2518\u2514\u2500\u2518\u2514\u2500\u2518 19 \u251c\u2500 NC"},{"location":"display_st7789/#joy_left-21-y-x-b-a-20-btn_a","text":"","title":"JOY_LEFT \u2500\u2524 21 Y X B A 20 \u251c\u2500 BTN_A"},{"location":"display_st7789/#_6","text":"","title":"\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518"},{"location":"display_st7789/#_7","text":"","title":""},{"location":"display_st7789/#notes","text":"","title":"Notes:"},{"location":"display_st7789/#-pin-40-vbus-5-vdc","text":"","title":"- pin 40, VBUS; 5 VDC"},{"location":"display_st7789/#-pin-39-vsys-nc","text":"","title":"- pin 39, VSYS; NC"},{"location":"display_st7789/#-pin-11-dc-datacommand-high-for-data-low-for-command","text":"","title":"- pin 11, DC; Data/Command - high for data, low for command)"},{"location":"display_st7789/#-pin-12-cs-chip-select-active-low","text":"","title":"- pin 12, CS; Chip Select - active low"},{"location":"display_st7789/#-pin-16-rst-reset-active-low","text":"","title":"- pin 16, RST; Reset - active low"},{"location":"display_st7789/#-pin-17-bl-backlight-active-high","text":"","title":"- pin 17, BL; Backlight - active high"},{"location":"display_st7789/#_8","text":"","title":""},{"location":"display_st7789/#-_6","text":"","title":"------------------------------------------------------------------------------"},{"location":"display_st7789/#-_7","text":"","title":"------------------------------------------------------------------------------"},{"location":"display_st7789/#font-used-for-on-screen-display","text":"","title":"Font used for on-screen display"},{"location":"display_st7789/#-loads-google-noto-sans-mono-font-for-display-text","text":"","title":"- Loads Google Noto Sans Mono font for display text"},{"location":"display_st7789/#-sets-font-size-for-ui-elements","text":"","title":"- Sets font size for UI elements"},{"location":"display_st7789/#-parameters","text":"","title":"- Parameters:"},{"location":"display_st7789/#file-font-file-or-url","text":"","title":"file: Font file or URL"},{"location":"display_st7789/#id-font-id-for-reference","text":"","title":"id: Font ID for reference"},{"location":"display_st7789/#size-font-size-in-points","text":"","title":"size: Font size in points"},{"location":"display_st7789/#-_8","text":"font: - file: gfonts://Noto Sans Mono id: st7789_font size: 22","title":"------------------------------------------------------------------------------"},{"location":"display_st7789/#-_9","text":"","title":"------------------------------------------------------------------------------"},{"location":"display_st7789/#status-icon-images","text":"","title":"Status icon images"},{"location":"display_st7789/#-loads-png-images-for-status-and-wifi-signal-icons","text":"","title":"- Loads PNG images for status and WiFi signal icons"},{"location":"display_st7789/#-used-for-ui-status-bar-and-indicators","text":"","title":"- Used for UI status bar and indicators"},{"location":"display_st7789/#-parameters_1","text":"","title":"- Parameters:"},{"location":"display_st7789/#file-path-to-image-file","text":"","title":"file: Path to image file"},{"location":"display_st7789/#id-image-id-for-reference","text":"","title":"id: Image ID for reference"},{"location":"display_st7789/#type-image-color-type-eg-rgb","text":"","title":"type: Image color type (e.g., RGB)"},{"location":"display_st7789/#resize-resize-dimensions-pixels","text":"","title":"resize: Resize dimensions (pixels)"},{"location":"display_st7789/#-_10","text":"image: # Status icons - file: \"icons/status_ok.png\" id: status_ok_icon type: RGB resize: 32x32 - file: \"icons/status_warn.png\" id: status_warn_icon type: RGB resize: 32x32 - file: \"icons/status_error.png\" id: status_error_icon type: RGB resize: 32x32 # WiFi signal icons - file: \"icons/wifi_0.png\" id: wifi_0_icon type: RGB resize: 32x32 - file: \"icons/wifi_1.png\" id: wifi_1_icon type: RGB resize: 32x32 - file: \"icons/wifi_2.png\" id: wifi_2_icon type: RGB resize: 32x32 - file: \"icons/wifi_3.png\" id: wifi_3_icon type: RGB resize: 32x32 - file: \"icons/wifi_4.png\" id: wifi_4_icon type: RGB resize: 32x32","title":"------------------------------------------------------------------------------"},{"location":"display_st7789/#-_11","text":"","title":"------------------------------------------------------------------------------"},{"location":"display_st7789/#text-and-sensor-definitions","text":"","title":"Text and sensor definitions"},{"location":"display_st7789/#-exposes-wifi-info-hostname-date-and-time-as-text-sensors","text":"","title":"- Exposes WiFi info, hostname, date, and time as text sensors"},{"location":"display_st7789/#-provides-template-sensors-for-custom-data","text":"","title":"- Provides template sensors for custom data"},{"location":"display_st7789/#-parameters-per-sensor","text":"","title":"- Parameters (per sensor):"},{"location":"display_st7789/#name-sensor-name","text":"","title":"name: Sensor name"},{"location":"display_st7789/#id-sensor-id","text":"","title":"id: Sensor ID"},{"location":"display_st7789/#lambda-lambda-function-for-value","text":"","title":"lambda: Lambda function for value"},{"location":"display_st7789/#update_interval-update-frequency","text":"","title":"update_interval: Update frequency"},{"location":"display_st7789/#-_12","text":"text_sensor: - platform: wifi_info ip_address: name: \"WiFi IP Address\" id: ip_address ssid: name: \"WiFi SSID\" id: ssid mac_address: name: \"WiFi MAC Address\" id: mac_address - platform: template name: \"Hostname\" id: hostname lambda: |- return App.get_name(); update_interval: 60s platform: template name: \"Current Date\" id: current_date # Returns the current date as YYYY-MM-DD lambda: |- char str[16]; time_t now = ::time(nullptr); strftime(str, sizeof(str), \"%Y-%m-%d\", localtime(&now)); return std::string(str); update_interval: 60s platform: template name: \"Current Time\" id: current_time # Returns the current time as HH:MM:SS lambda: |- char str[16]; time_t now = ::time(nullptr); strftime(str, sizeof(str), \"%H:%M:%S\", localtime(&now)); return std::string(str); update_interval: 1s sensor: - platform: wifi_signal name: WiFi Signal Strength id: wifi_signal_strength update_interval: 60s","title":"------------------------------------------------------------------------------"},{"location":"display_st7789/#-_13","text":"","title":"------------------------------------------------------------------------------"},{"location":"display_st7789/#display-driver-configuration-block-for-st7789v-lcd","text":"","title":"Display driver configuration block for ST7789V LCD"},{"location":"display_st7789/#-configures-resolution-pinout-refresh-rate-and-ui-rendering-logic","text":"","title":"- Configures resolution, pinout, refresh rate, and UI rendering logic"},{"location":"display_st7789/#-includes-dynamic-rendering-of-flow-rate-sensor-value","text":"","title":"- Includes dynamic rendering of flow rate sensor value"},{"location":"display_st7789/#-screen-is-cleared-to-teal-and-overlays-two-lines-of-text","text":"","title":"- Screen is cleared to teal and overlays two lines of text"},{"location":"display_st7789/#-parameters_2","text":"","title":"- Parameters:"},{"location":"display_st7789/#platform-display-platform-st7789v","text":"","title":"platform: Display platform (st7789v)"},{"location":"display_st7789/#model-display-model-custom","text":"","title":"model: Display model (CUSTOM)"},{"location":"display_st7789/#cs_pin-chip-select-pin","text":"","title":"cs_pin: Chip select pin"},{"location":"display_st7789/#dc_pin-datacommand-pin","text":"","title":"dc_pin: Data/command pin"},{"location":"display_st7789/#reset_pin-reset-line","text":"","title":"reset_pin: Reset line"},{"location":"display_st7789/#width-display-width-pixels","text":"","title":"width: Display width (pixels)"},{"location":"display_st7789/#height-display-height-pixels","text":"","title":"height: Display height (pixels)"},{"location":"display_st7789/#update_interval-refresh-interval","text":"","title":"update_interval: Refresh interval"},{"location":"display_st7789/#data_rate-spi-clock-frequency","text":"","title":"data_rate: SPI clock frequency"},{"location":"display_st7789/#-_14","text":"display: - platform: st7789v model: CUSTOM cs_pin: ${display_cs_pin} # cs_pin Chip select pin dc_pin: ${display_dc_pin} # dc_pin Data/command pin reset_pin: ${display_reset_pin} # reset_pin Reset line width: 240 height: 240 offset_width: 0 offset_height: 0 rotation: 0 update_interval: 1s # update_interval Refresh every second data_rate: 2MHz # data_rate SPI clock frequency auto_clear_enabled: false lambda: |- // Colors auto white = Color(255, 255, 255); auto blue = Color(0, 0, 255); auto teal = Color(0, 128, 128); auto black = Color(0, 0, 0); // establish status pane it . rectangle ( 0 , 0 , 239 , 39 , white ); // establish data pane it . filled_rectangle ( 0 , 40 , 239 , 239 , blue ); it . rectangle ( 0 , 40 , 239 , 239 , white ); // Draw status_ok icon at ( 4 , 4 ) in the status bar it . image ( 4 , 4 , id ( status_ok_icon )); // TODO : add logic to determine which status icon to use // Draw WiFi icons ( Testing ) it . image ( 204 , 4 , id ( wifi_4_icon )); // TODO : add logic to determine which WiFi icon to use // Display device info in the data pane int y = 56 ; int line_height = 32 ; // Estimate average character width for Noto Sans Mono 22 pt const int char_width = 12 ; std :: string hostname_str = id ( hostname ) . state ; int x = ( 240 - ( hostname_str . length () * char_width )) / 2 ; it . printf ( x , y , id ( st7789_font ), white , \" %s \" , hostname_str . c_str ()); y += line_height ; std :: string ssid_str = id ( ssid ) . state . empty () ? std :: string ( \"SSID: N/A\" ) : id ( ssid ) . state ; x = ( 240 - ( ssid_str . length () * char_width )) / 2 ; it . printf ( x , y , id ( st7789_font ), white , \" %s \" , ssid_str . c_str ()); y += line_height ; std :: string ip_str = id ( ip_address ) . state . empty () ? std :: string ( \"IP: N/A\" ) : id ( ip_address ) . state ; x = ( 240 - ( ip_str . length () * char_width )) / 2 ; it . printf ( x , y , id ( st7789_font ), white , \" %s \" , ip_str . c_str ()); y += line_height ; std :: string mac_str = id ( mac_address ) . state . empty () ? std :: string ( \"MAC: N/A\" ) : id ( mac_address ) . state ; x = ( 240 - ( mac_str . length () * char_width )) / 2 ; it . printf ( x , y , id ( st7789_font ), white , \" %s \" , mac_str . c_str ());","title":"------------------------------------------------------------------------------"},{"location":"esp32/","text":"Component: esp32 \u00b6 Source: /cygdrive/c/cygwin64/home/rhendel/git/PumpHouseBoss/common/esp32.yaml \u00b6 Generated: Sun, Jul 27, 2025 11:33:46 PM \u00b6 ------------------------------------------------------------------------------ \u00b6 File: esp32.yaml \u00b6 File Type: ESPHome YAML Include \u00b6 Purpose: ESP32 board and framework configuration \u00b6 Version: 0.7.0 \u00b6 Date: 2025-07-24 \u00b6 Author: Roland Tembo Hendel rhendel@nexuslogic.com \u00b6 \u00b6 Description: Modular include for ESPHome projects targeting ESP32-S3. \u00b6 \u00b6 License: GNU General Public License v3.0 \u00b6 SPDX-License-Identifier: GPL-3.0-or-later \u00b6 Copyright: (c) 2025 Roland Tembo Hendel \u00b6 This program is free software: you can redistribute it and/or \u00b6 modify it under the terms of the GNU General Public License. \u00b6 ------------------------------------------------------------------------------ \u00b6 ------------------------------------------------------------------------------ \u00b6 YAML linter configuration \u00b6 - Disables quoted-strings rule for improved readability \u00b6 ------------------------------------------------------------------------------ \u00b6 yamllint disable rule:quoted-strings \u00b6 ------------------------------------------------------------------------------ \u00b6 ESP32 (30 Pin Package) Dev Module standard Pinout Map (Vertical, Top View) \u00b6 ------------------------------------------------------------------------------ \u00b6 \u00b6 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u00b6 EN \u2500\u2524 01 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510 30 \u251c\u2500 GPIO23 SPI_MOSI VSPI_MOSI \u00b6 VP ADC1_CH0 GPIO36 \u2500\u2524 02 \u2502 \u2502 29 \u251c\u2500 GPIO22 I2C_SCL \u00b6 VN ADC1_CH3 GPIO39 \u2500\u2524 03 \u2502 \u2502 28 \u251c\u2500 GPIO01 U0TXD CLK3 \u00b6 ADC1_CH6 GPIO34 \u2500\u2524 04 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518 27 \u251c\u2500 GPIO03 U0RXD CLK2 \u00b6 ADC1_CH7 GPIO35 \u2500\u2524 05 26 \u251c\u2500 GPIO21 I2C_SDA \u00b6 XTAL32 TOUCH9 ADC1_CH4 GPIO32 \u2500\u2524 06 25 \u251c\u2500 GPIO19 SPI_MISO VSPI_MISO \u00b6 TOUCH8 ADC1_CH5 GPIO33 \u2500\u2524 07 24 \u251c\u2500 GPIO18 SPI_SCK VSPI_CLK \u00b6 DAC1 ADC2_CH8 GPIO25 \u2500\u2524 08 ESP-32 23 \u251c\u2500 GPIO05 VSPI_CS \u00b6 DAC2 ADC2_CH9 GPIO26 \u2500\u2524 09 22 \u251c\u2500 GPIO17 U2TXD \u00b6 TOUCH7 ADC2_CH7 GPIO27 \u2500\u2524 10 21 \u251c\u2500 GPIO16 U2RXD \u00b6 HSPI_CLK TOUCH6 ADC2_CH6 GPIO14 \u2500\u2524 11 20 \u251c\u2500 GPIO04 ADC2_CH0 TOUCH0 \u00b6 HSPI_MISO TOUCH5 ADC2_CH5 GPIO12 \u2500\u2524 12 19 \u251c\u2500 GPIO02 ADC2_CH2 TOUCH2 SPI_CS \u00b6 HSPI_MOSI TOUCH4 ADC2_CH4 GPIO13 \u2500\u2524 13 18 \u251c\u2500 GPIO15 ADC2_CH3 TOUCH3 HSPI_CS \u00b6 GND \u2500\u2524 14 17 \u251c\u2500 GND \u00b6 5V VIN \u2500\u2524 15 16 \u251c\u2500 VCC 3.3V \u00b6 \u2514\u2500\u2500\u2500\u2500\u2500\u2500USB\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u00b6 \u00b6 Notes: \u00b6 - GPIO6-11 are used for SPI flash and are not available for user IO \u00b6 - GPIO1 (TX0), GPIO3 (RX0) are UART0 (serial console) pins \u00b6 - can be repurposed if not using serial, but be careful \u00b6 if you need serial logging or programming \u00b6 - GPIO2 is a strapping pin; must be low at boot for some modules \u00b6 - this pin should not be pulled high or low at boot/reset \u00b6 - avoid using for output that could interfere with boot \u00b6 - GPIO5 is a strapping pin; must be high at boot \u00b6 - this pin should not be pulled low at boot/reset \u00b6 - avoid using for output or with pull-ups \u00b6 - GPIO3 is Rx pin for flashing/debugging \u00b6 - GPIO12 is a strapping pin; high at boot selects high voltage for flash \u00b6 - this pin should not be pulled high or low at boot/reset \u00b6 - avoid using for output or with pull-ups \u00b6 - GPIO15 is a strapping pin; must be low at boot \u00b6 - this pin should not be pulled high or low at boot/reset \u00b6 - avoid using for output or with pull-ups \u00b6 - GPIO16, GPIO17 is used for PSRAM on some modules \u00b6 - check your board\u2019s datasheet before using \u00b6 - GPIO20, GPIO24 is not available on most ESP32 modules \u00b6 - GPIO34-GPIO39 are input only \u00b6 - not all pins are available on all modules; check your board's datasheet \u00b6 - see ESP32 datasheet for full alternate functions \u00b6 \u00b6 ESP32 Datasheet: \u00b6 https://www.espressif.com/sites/default/files/documentation/esp32_datasheet_en.pdf \u00b6 \u00b6 ------------------------------------------------------------------------------ \u00b6 ------------------------------------------------------------------------------ \u00b6 Target ESP32 board and Arduino framework declaration \u00b6 - board: Target ESP32 Dev Module (ESP-WROOM-32) \u00b6 - framework: Arduino core for ESP32 \u00b6 - Parameters: \u00b6 board: Target board (e.g., esp32dev) \u00b6 framework.type: Framework type (e.g., arduino) \u00b6 ------------------------------------------------------------------------------ \u00b6 esp32: board: esp32dev # board Target board: ESP32 Dev Module (ESP-WROOM-32) framework: type: arduino # framework.type Arduino core for ESP32 ------------------------------------------------------------------------------ \u00b6 SPI bus configuration for ST7789V display module \u00b6 - Configures SPI bus for display communication \u00b6 - Assigns clock and MOSI pins \u00b6 - Parameters: \u00b6 clk_pin: Clock pin for SPI \u00b6 mosi_pin: MOSI data pin \u00b6 ------------------------------------------------------------------------------ \u00b6 spi: clk_pin: GPIO18 # clk_pin Clock pin for SPI mosi_pin: GPIO23 # param mosi_pin MOSI data pin ------------------------------------------------------------------------------ \u00b6 Display Interface Configuration \u00b6 - Configures GPIO pins for display communication \u00b6 - Assigns Chip Select, Data/Command, and Reset pins \u00b6 - Parameters: \u00b6 display_cs: pin Chip Select pin \u00b6 display_dc: pin Data/Command pin \u00b6 display_reset: pin Reset pin \u00b6 ------------------------------------------------------------------------------ \u00b6 substitutions: display_cs_pin: \"GPIO13\" # cs_pin Chip select pin display_dc_pin: \"GPIO04\" # dc_pin Data/command pin display_reset_pin: \"GPIO17\" # reset_pin Reset line","title":"esp32"},{"location":"esp32/#component-esp32","text":"","title":"Component: esp32"},{"location":"esp32/#source-cygdriveccygwin64homerhendelgitpumphousebosscommonesp32yaml","text":"","title":"Source: /cygdrive/c/cygwin64/home/rhendel/git/PumpHouseBoss/common/esp32.yaml"},{"location":"esp32/#generated-sun-jul-27-2025-113346-pm","text":"","title":"Generated: Sun, Jul 27, 2025 11:33:46 PM"},{"location":"esp32/#-","text":"","title":"------------------------------------------------------------------------------"},{"location":"esp32/#file-esp32yaml","text":"","title":"File: esp32.yaml"},{"location":"esp32/#file-type-esphome-yaml-include","text":"","title":"File Type: ESPHome YAML Include"},{"location":"esp32/#purpose-esp32-board-and-framework-configuration","text":"","title":"Purpose: ESP32 board and framework configuration"},{"location":"esp32/#version-070","text":"","title":"Version: 0.7.0"},{"location":"esp32/#date-2025-07-24","text":"","title":"Date: 2025-07-24"},{"location":"esp32/#author-roland-tembo-hendel-rhendelnexuslogiccom","text":"","title":"Author: Roland Tembo Hendel &#114;&#104;&#101;&#110;&#100;&#101;&#108;&#64;&#110;&#101;&#120;&#117;&#115;&#108;&#111;&#103;&#105;&#99;&#46;&#99;&#111;&#109;"},{"location":"esp32/#_1","text":"","title":""},{"location":"esp32/#description-modular-include-for-esphome-projects-targeting-esp32-s3","text":"","title":"Description: Modular include for ESPHome projects targeting ESP32-S3."},{"location":"esp32/#_2","text":"","title":""},{"location":"esp32/#license-gnu-general-public-license-v30","text":"","title":"License: GNU General Public License v3.0"},{"location":"esp32/#spdx-license-identifier-gpl-30-or-later","text":"","title":"SPDX-License-Identifier: GPL-3.0-or-later"},{"location":"esp32/#copyright-c-2025-roland-tembo-hendel","text":"","title":"Copyright: (c) 2025 Roland Tembo Hendel"},{"location":"esp32/#this-program-is-free-software-you-can-redistribute-it-andor","text":"","title":"This program is free software: you can redistribute it and/or"},{"location":"esp32/#modify-it-under-the-terms-of-the-gnu-general-public-license","text":"","title":"modify it under the terms of the GNU General Public License."},{"location":"esp32/#-_1","text":"","title":"------------------------------------------------------------------------------"},{"location":"esp32/#-_2","text":"","title":"------------------------------------------------------------------------------"},{"location":"esp32/#yaml-linter-configuration","text":"","title":"YAML linter configuration"},{"location":"esp32/#-disables-quoted-strings-rule-for-improved-readability","text":"","title":"- Disables quoted-strings rule for improved readability"},{"location":"esp32/#-_3","text":"","title":"------------------------------------------------------------------------------"},{"location":"esp32/#yamllint-disable-rulequoted-strings","text":"","title":"yamllint disable rule:quoted-strings"},{"location":"esp32/#-_4","text":"","title":"------------------------------------------------------------------------------"},{"location":"esp32/#esp32-30-pin-package-dev-module-standard-pinout-map-vertical-top-view","text":"","title":"ESP32 (30 Pin Package) Dev Module standard Pinout Map (Vertical, Top View)"},{"location":"esp32/#-_5","text":"","title":"------------------------------------------------------------------------------"},{"location":"esp32/#_3","text":"","title":""},{"location":"esp32/#_4","text":"","title":"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510"},{"location":"esp32/#en-01-30-gpio23-spi_mosi-vspi_mosi","text":"","title":"EN \u2500\u2524 01 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510 30 \u251c\u2500 GPIO23 SPI_MOSI VSPI_MOSI"},{"location":"esp32/#vp-adc1_ch0-gpio36-02-29-gpio22-i2c_scl","text":"","title":"VP ADC1_CH0 GPIO36 \u2500\u2524 02 \u2502 \u2502 29 \u251c\u2500 GPIO22 I2C_SCL"},{"location":"esp32/#vn-adc1_ch3-gpio39-03-28-gpio01-u0txd-clk3","text":"","title":"VN ADC1_CH3 GPIO39 \u2500\u2524 03 \u2502 \u2502 28 \u251c\u2500 GPIO01 U0TXD CLK3"},{"location":"esp32/#adc1_ch6-gpio34-04-27-gpio03-u0rxd-clk2","text":"","title":"ADC1_CH6 GPIO34 \u2500\u2524 04 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518 27 \u251c\u2500 GPIO03 U0RXD CLK2"},{"location":"esp32/#adc1_ch7-gpio35-05-26-gpio21-i2c_sda","text":"","title":"ADC1_CH7 GPIO35 \u2500\u2524 05 26 \u251c\u2500 GPIO21 I2C_SDA"},{"location":"esp32/#xtal32-touch9-adc1_ch4-gpio32-06-25-gpio19-spi_miso-vspi_miso","text":"","title":"XTAL32 TOUCH9 ADC1_CH4 GPIO32 \u2500\u2524 06 25 \u251c\u2500 GPIO19 SPI_MISO VSPI_MISO"},{"location":"esp32/#touch8-adc1_ch5-gpio33-07-24-gpio18-spi_sck-vspi_clk","text":"","title":"TOUCH8 ADC1_CH5 GPIO33 \u2500\u2524 07 24 \u251c\u2500 GPIO18 SPI_SCK VSPI_CLK"},{"location":"esp32/#dac1-adc2_ch8-gpio25-08-esp-32-23-gpio05-vspi_cs","text":"","title":"DAC1 ADC2_CH8 GPIO25 \u2500\u2524 08 ESP-32 23 \u251c\u2500 GPIO05 VSPI_CS"},{"location":"esp32/#dac2-adc2_ch9-gpio26-09-22-gpio17-u2txd","text":"","title":"DAC2 ADC2_CH9 GPIO26 \u2500\u2524 09 22 \u251c\u2500 GPIO17 U2TXD"},{"location":"esp32/#touch7-adc2_ch7-gpio27-10-21-gpio16-u2rxd","text":"","title":"TOUCH7 ADC2_CH7 GPIO27 \u2500\u2524 10 21 \u251c\u2500 GPIO16 U2RXD"},{"location":"esp32/#hspi_clk-touch6-adc2_ch6-gpio14-11-20-gpio04-adc2_ch0-touch0","text":"","title":"HSPI_CLK TOUCH6 ADC2_CH6 GPIO14 \u2500\u2524 11 20 \u251c\u2500 GPIO04 ADC2_CH0 TOUCH0"},{"location":"esp32/#hspi_miso-touch5-adc2_ch5-gpio12-12-19-gpio02-adc2_ch2-touch2-spi_cs","text":"","title":"HSPI_MISO TOUCH5 ADC2_CH5 GPIO12 \u2500\u2524 12 19 \u251c\u2500 GPIO02 ADC2_CH2 TOUCH2 SPI_CS"},{"location":"esp32/#hspi_mosi-touch4-adc2_ch4-gpio13-13-18-gpio15-adc2_ch3-touch3-hspi_cs","text":"","title":"HSPI_MOSI TOUCH4 ADC2_CH4 GPIO13 \u2500\u2524 13 18 \u251c\u2500 GPIO15 ADC2_CH3 TOUCH3 HSPI_CS"},{"location":"esp32/#gnd-14-17-gnd","text":"","title":"GND \u2500\u2524 14 17 \u251c\u2500 GND"},{"location":"esp32/#5v-vin-15-16-vcc-33v","text":"","title":"5V VIN \u2500\u2524 15 16 \u251c\u2500 VCC 3.3V"},{"location":"esp32/#usb","text":"","title":"\u2514\u2500\u2500\u2500\u2500\u2500\u2500USB\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518"},{"location":"esp32/#_5","text":"","title":""},{"location":"esp32/#notes","text":"","title":"Notes:"},{"location":"esp32/#-gpio6-11-are-used-for-spi-flash-and-are-not-available-for-user-io","text":"","title":"- GPIO6-11 are used for SPI flash and are not available for user IO"},{"location":"esp32/#-gpio1-tx0-gpio3-rx0-are-uart0-serial-console-pins","text":"","title":"- GPIO1 (TX0), GPIO3 (RX0) are UART0 (serial console) pins"},{"location":"esp32/#-can-be-repurposed-if-not-using-serial-but-be-careful","text":"","title":"- can be repurposed if not using serial, but be careful"},{"location":"esp32/#if-you-need-serial-logging-or-programming","text":"","title":"if you need serial logging or programming"},{"location":"esp32/#-gpio2-is-a-strapping-pin-must-be-low-at-boot-for-some-modules","text":"","title":"- GPIO2 is a strapping pin; must be low at boot for some modules"},{"location":"esp32/#-this-pin-should-not-be-pulled-high-or-low-at-bootreset","text":"","title":"- this pin should not be pulled high or low at boot/reset"},{"location":"esp32/#-avoid-using-for-output-that-could-interfere-with-boot","text":"","title":"- avoid using for output that could interfere with boot"},{"location":"esp32/#-gpio5-is-a-strapping-pin-must-be-high-at-boot","text":"","title":"- GPIO5 is a strapping pin; must be high at boot"},{"location":"esp32/#-this-pin-should-not-be-pulled-low-at-bootreset","text":"","title":"- this pin should not be pulled low at boot/reset"},{"location":"esp32/#-avoid-using-for-output-or-with-pull-ups","text":"","title":"- avoid using for output or with pull-ups"},{"location":"esp32/#-gpio3-is-rx-pin-for-flashingdebugging","text":"","title":"- GPIO3 is Rx pin for flashing/debugging"},{"location":"esp32/#-gpio12-is-a-strapping-pin-high-at-boot-selects-high-voltage-for-flash","text":"","title":"- GPIO12 is a strapping pin; high at boot selects high voltage for flash"},{"location":"esp32/#-this-pin-should-not-be-pulled-high-or-low-at-bootreset_1","text":"","title":"- this pin should not be pulled high or low at boot/reset"},{"location":"esp32/#-avoid-using-for-output-or-with-pull-ups_1","text":"","title":"- avoid using for output or with pull-ups"},{"location":"esp32/#-gpio15-is-a-strapping-pin-must-be-low-at-boot","text":"","title":"- GPIO15 is a strapping pin; must be low at boot"},{"location":"esp32/#-this-pin-should-not-be-pulled-high-or-low-at-bootreset_2","text":"","title":"- this pin should not be pulled high or low at boot/reset"},{"location":"esp32/#-avoid-using-for-output-or-with-pull-ups_2","text":"","title":"- avoid using for output or with pull-ups"},{"location":"esp32/#-gpio16-gpio17-is-used-for-psram-on-some-modules","text":"","title":"- GPIO16, GPIO17 is used for PSRAM on some modules"},{"location":"esp32/#-check-your-boards-datasheet-before-using","text":"","title":"- check your board\u2019s datasheet before using"},{"location":"esp32/#-gpio20-gpio24-is-not-available-on-most-esp32-modules","text":"","title":"- GPIO20, GPIO24 is not available on most ESP32 modules"},{"location":"esp32/#-gpio34-gpio39-are-input-only","text":"","title":"- GPIO34-GPIO39 are input only"},{"location":"esp32/#-not-all-pins-are-available-on-all-modules-check-your-boards-datasheet","text":"","title":"- not all pins are available on all modules; check your board's datasheet"},{"location":"esp32/#-see-esp32-datasheet-for-full-alternate-functions","text":"","title":"- see ESP32 datasheet for full alternate functions"},{"location":"esp32/#_6","text":"","title":""},{"location":"esp32/#esp32-datasheet","text":"","title":"ESP32 Datasheet:"},{"location":"esp32/#httpswwwespressifcomsitesdefaultfilesdocumentationesp32_datasheet_enpdf","text":"","title":"https://www.espressif.com/sites/default/files/documentation/esp32_datasheet_en.pdf"},{"location":"esp32/#_7","text":"","title":""},{"location":"esp32/#-_6","text":"","title":"------------------------------------------------------------------------------"},{"location":"esp32/#-_7","text":"","title":"------------------------------------------------------------------------------"},{"location":"esp32/#target-esp32-board-and-arduino-framework-declaration","text":"","title":"Target ESP32 board and Arduino framework declaration"},{"location":"esp32/#-board-target-esp32-dev-module-esp-wroom-32","text":"","title":"- board: Target ESP32 Dev Module (ESP-WROOM-32)"},{"location":"esp32/#-framework-arduino-core-for-esp32","text":"","title":"- framework: Arduino core for ESP32"},{"location":"esp32/#-parameters","text":"","title":"- Parameters:"},{"location":"esp32/#board-target-board-eg-esp32dev","text":"","title":"board: Target board (e.g., esp32dev)"},{"location":"esp32/#frameworktype-framework-type-eg-arduino","text":"","title":"framework.type: Framework type (e.g., arduino)"},{"location":"esp32/#-_8","text":"esp32: board: esp32dev # board Target board: ESP32 Dev Module (ESP-WROOM-32) framework: type: arduino # framework.type Arduino core for ESP32","title":"------------------------------------------------------------------------------"},{"location":"esp32/#-_9","text":"","title":"------------------------------------------------------------------------------"},{"location":"esp32/#spi-bus-configuration-for-st7789v-display-module","text":"","title":"SPI bus configuration for ST7789V display module"},{"location":"esp32/#-configures-spi-bus-for-display-communication","text":"","title":"- Configures SPI bus for display communication"},{"location":"esp32/#-assigns-clock-and-mosi-pins","text":"","title":"- Assigns clock and MOSI pins"},{"location":"esp32/#-parameters_1","text":"","title":"- Parameters:"},{"location":"esp32/#clk_pin-clock-pin-for-spi","text":"","title":"clk_pin: Clock pin for SPI"},{"location":"esp32/#mosi_pin-mosi-data-pin","text":"","title":"mosi_pin: MOSI data pin"},{"location":"esp32/#-_10","text":"spi: clk_pin: GPIO18 # clk_pin Clock pin for SPI mosi_pin: GPIO23 # param mosi_pin MOSI data pin","title":"------------------------------------------------------------------------------"},{"location":"esp32/#-_11","text":"","title":"------------------------------------------------------------------------------"},{"location":"esp32/#display-interface-configuration","text":"","title":"Display Interface Configuration"},{"location":"esp32/#-configures-gpio-pins-for-display-communication","text":"","title":"- Configures GPIO pins for display communication"},{"location":"esp32/#-assigns-chip-select-datacommand-and-reset-pins","text":"","title":"- Assigns Chip Select, Data/Command, and Reset pins"},{"location":"esp32/#-parameters_2","text":"","title":"- Parameters:"},{"location":"esp32/#display_cs-pin-chip-select-pin","text":"","title":"display_cs: pin Chip Select pin"},{"location":"esp32/#display_dc-pin-datacommand-pin","text":"","title":"display_dc: pin Data/Command pin"},{"location":"esp32/#display_reset-pin-reset-pin","text":"","title":"display_reset: pin Reset pin"},{"location":"esp32/#-_12","text":"substitutions: display_cs_pin: \"GPIO13\" # cs_pin Chip select pin display_dc_pin: \"GPIO04\" # dc_pin Data/command pin display_reset_pin: \"GPIO17\" # reset_pin Reset line","title":"------------------------------------------------------------------------------"},{"location":"esp32s3/","text":"Component: esp32s3 \u00b6 Source: /cygdrive/c/cygwin64/home/rhendel/git/PumpHouseBoss/common/esp32s3.yaml \u00b6 Generated: Sun, Jul 27, 2025 11:33:46 PM \u00b6 ------------------------------------------------------------------------------ \u00b6 File: esp32s3.yaml \u00b6 File Type: ESPHome YAML Include \u00b6 Purpose: ESP32-S3 board and framework configuration \u00b6 Version: 0.7.0 \u00b6 Date: 2025-07-24 \u00b6 Author: Roland Tembo Hendel rhendel@nexuslogic.com \u00b6 \u00b6 Description: Modular include for ESPHome projects targeting ESP32-S3. \u00b6 \u00b6 License: GNU General Public License v3.0 \u00b6 SPDX-License-Identifier: GPL-3.0-or-later \u00b6 Copyright: (c) 2025 Roland Tembo Hendel \u00b6 This program is free software: you can redistribute it and/or \u00b6 modify it under the terms of the GNU General Public License. \u00b6 ------------------------------------------------------------------------------ \u00b6 ------------------------------------------------------------------------------ \u00b6 YAML linter configuration \u00b6 - Disables quoted-strings rule for improved readability \u00b6 ------------------------------------------------------------------------------ \u00b6 yamllint disable rule:quoted-strings \u00b6 ------------------------------------------------------------------------------ \u00b6 ESP32-S3 (QFN44) Dev Module Standard Pinout Map (Vertical, Top View) \u00b6 ------------------------------------------------------------------------------ \u00b6 \u00b6 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u00b6 3.3V VCC \u2500\u2524 01 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 44 \u251c\u2500\u2500 GND \u00b6 3.3V VCC \u2500\u2524 02 \u2502 \u2502 43 \u251c\u2500\u2500 GPIO43 U0TXD LED_TX \u00b6 RST \u2500\u2524 03 \u2502 \u2502 42 \u251c\u2500\u2500 GPIO44 U0RXD LED_RX \u00b6 T04 ADC1_CH3 CAM_SIOD GPIO04 \u2500\u2524 04 \u2502 \u2502 41 \u251c\u2500\u2500 GPIO01, ADC1_CH0 T01 \u00b6 T05 ADC1_CH4 CAM_SIOC GPIO05 \u2500\u2524 05 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 40 \u251c\u2500\u2500 GPIO02 ADC1_CH1 LED_ON T02 \u00b6 T06 ADC1_CH5 CAM_VSYNC GPIO06 \u2500\u2524 06 39 \u251c\u2500\u2500 GPIO42 MTMS \u00b6 T07 ADC1_CH6 CAM_HREF GPIO07 \u2500\u2524 07 38 \u251c\u2500\u2500 GPIO41 MTD1 \u00b6 U0RTS ADC2_CH4 CAM_XCLK GPIO15 \u2500\u2524 08 37 \u251c\u2500\u2500 GPIO40 SD_DATA MTDO \u00b6 U0CTS ADC2_CH5 CAM_Y9 GPIO16 \u2500\u2524 09 36 \u251c\u2500\u2500 GPIO39 SD_CLK MTCK \u00b6 U1TXD ADC2_CH6 CAM_Y8 GPIO17 \u2500\u2524 10 35 \u251c\u2500\u2500 GPIO38 SD_CMD \u00b6 U1RXD ADC2_CH7 CAM_Y7 GPIO18 \u2500\u2524 11 ESP32-S3 34 \u251c\u2500\u2500 GPIO37 PSRAM \u00b6 T08 ADC1_CH7 CAM_Y4 GPIO08 \u2500\u2524 12 33 \u251c\u2500\u2500 GPIO36 PSRAM \u00b6 T03 ADC1_CH2 JTAG_EN GPIO03 \u2500\u2524 13 32 \u251c\u2500\u2500 GPIO35 PSRAM \u00b6 LOG GPIO46 \u2500\u2524 14 31 \u251c\u2500\u2500 GPIO00 BOOT \u00b6 T09 ADC1_CH8 CAM_Y3 GPIO09 \u2500\u2524 15 30 \u251c\u2500\u2500 GPIO45 VSPI \u00b6 T10 ADC1_CH9 CAM_Y5 GPIO10 \u2500\u2524 16 29 \u251c\u2500\u2500 GPIO48 WS2812 \u00b6 T11 ADC2_CH0 CAM_Y2 GPIO11 \u2500\u2524 17 28 \u251c\u2500\u2500 GPIO47 \u00b6 T12 ADC2_CH1 CAM_Y6 GPIO12 \u2500\u2524 18 27 \u251c\u2500\u2500 GPIO21 \u00b6 T13 ADC2_CH2 CAM_PCLK GPIO13 \u2500\u2524 19 26 \u251c\u2500\u2500 GPIO20 USB_D- ADC2_CH9 U1CTS \u00b6 T14 ADC2_CH3 GPIO14 \u2500\u2524 20 25 \u251c\u2500\u2500 GPIO19 USB_D+ ADC2_CH8 U1RTS \u00b6 5V VIN \u2500\u2524 21 24 \u251c\u2500\u2500 GND \u00b6 GND \u2500\u2524 22 23 \u251c\u2500\u2500 GND \u00b6 \u2514\u2500\u2500\u2500\u2510USB\u250c\u2500\u2510USB\u250c\u2500\u2500\u2500\u2500\u2518 \u00b6 \u2514\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2518 \u00b6 \u00b6 Notes: \u00b6 - pin numbers (1-44) match QFN44 package, not module/dev board \u00b6 - GPIO6-11 are typically used for SPI flash and not available for user IO \u00b6 - GPIO46 is input only \u00b6 - GPIO00, GPIO45, GPIO46 are strapping pins \u00b6 - these pins should not be pulled high or low at boot/reset \u00b6 - use with caution; avoid using as output or with pull-downs \u00b6 - GPIO1, GPIO3 are default UART0 pins (console) \u00b6 - can be repurposed if not used for serial \u00b6 - GPIO19, GPIO20, GPIO21 are USB D+/D- and related pins; \u00b6 - using them for other purposes can interfere with USB functionality \u00b6 - not all pins are available on all modules; check your board's datasheet \u00b6 - see ESP32-S3 datasheet for alternate functions and capabilities \u00b6 \u00b6 ------------------------------------------------------------------------------ \u00b6 ------------------------------------------------------------------------------ \u00b6 Target ESP32-S3 board and Arduino framework declaration \u00b6 - board: Target ESP32-S3 DevKitC-1 (8MB flash, no PSRAM) \u00b6 - framework: Arduino core for ESP32-S3 \u00b6 - Parameters: \u00b6 board: Target board (e.g., esp32-s3-devkitc-1) \u00b6 framework.type: Framework type (e.g., arduino) \u00b6 ------------------------------------------------------------------------------ \u00b6 esp32: board: esp32-s3-devkitc-1 # board Target board: DevKitC-1 (8MB flash, no PSRAM) framework: type: arduino # framework.type Arduino core for ESP32-S3 ------------------------------------------------------------------------------ \u00b6 SPI bus configuration \u00b6 - Configures SPI bus for communication \u00b6 - Assigns clock and MOSI pins \u00b6 - Parameters: \u00b6 clk_pin: Clock pin for SPI \u00b6 mosi_pin: MOSI data pin \u00b6 ------------------------------------------------------------------------------ \u00b6 spi: clk_pin: GPIO10 # clk_pin Clock pin for SPI mosi_pin: GPIO11 # param mosi_pin MOSI data pin ------------------------------------------------------------------------------ \u00b6 Display Interface Configuration \u00b6 - Configures GPIO pins for display communication \u00b6 - Assigns Chip Select, Data/Command, and Reset pins \u00b6 - Parameters: \u00b6 display_cs: pin Chip Select pin \u00b6 display_dc: pin Data/Command pin \u00b6 display_reset: pin Reset pin \u00b6 ------------------------------------------------------------------------------ \u00b6 substitutions: display_cs_pin: \"GPIO09\" # cs_pin Chip select pin display_dc_pin: \"GPIO08\" # dc_pin Data/command pin display_reset_pin: \"GPIO12\" # reset_pin Reset line","title":"esp32s3"},{"location":"esp32s3/#component-esp32s3","text":"","title":"Component: esp32s3"},{"location":"esp32s3/#source-cygdriveccygwin64homerhendelgitpumphousebosscommonesp32s3yaml","text":"","title":"Source: /cygdrive/c/cygwin64/home/rhendel/git/PumpHouseBoss/common/esp32s3.yaml"},{"location":"esp32s3/#generated-sun-jul-27-2025-113346-pm","text":"","title":"Generated: Sun, Jul 27, 2025 11:33:46 PM"},{"location":"esp32s3/#-","text":"","title":"------------------------------------------------------------------------------"},{"location":"esp32s3/#file-esp32s3yaml","text":"","title":"File: esp32s3.yaml"},{"location":"esp32s3/#file-type-esphome-yaml-include","text":"","title":"File Type: ESPHome YAML Include"},{"location":"esp32s3/#purpose-esp32-s3-board-and-framework-configuration","text":"","title":"Purpose: ESP32-S3 board and framework configuration"},{"location":"esp32s3/#version-070","text":"","title":"Version: 0.7.0"},{"location":"esp32s3/#date-2025-07-24","text":"","title":"Date: 2025-07-24"},{"location":"esp32s3/#author-roland-tembo-hendel-rhendelnexuslogiccom","text":"","title":"Author: Roland Tembo Hendel &#114;&#104;&#101;&#110;&#100;&#101;&#108;&#64;&#110;&#101;&#120;&#117;&#115;&#108;&#111;&#103;&#105;&#99;&#46;&#99;&#111;&#109;"},{"location":"esp32s3/#_1","text":"","title":""},{"location":"esp32s3/#description-modular-include-for-esphome-projects-targeting-esp32-s3","text":"","title":"Description: Modular include for ESPHome projects targeting ESP32-S3."},{"location":"esp32s3/#_2","text":"","title":""},{"location":"esp32s3/#license-gnu-general-public-license-v30","text":"","title":"License: GNU General Public License v3.0"},{"location":"esp32s3/#spdx-license-identifier-gpl-30-or-later","text":"","title":"SPDX-License-Identifier: GPL-3.0-or-later"},{"location":"esp32s3/#copyright-c-2025-roland-tembo-hendel","text":"","title":"Copyright: (c) 2025 Roland Tembo Hendel"},{"location":"esp32s3/#this-program-is-free-software-you-can-redistribute-it-andor","text":"","title":"This program is free software: you can redistribute it and/or"},{"location":"esp32s3/#modify-it-under-the-terms-of-the-gnu-general-public-license","text":"","title":"modify it under the terms of the GNU General Public License."},{"location":"esp32s3/#-_1","text":"","title":"------------------------------------------------------------------------------"},{"location":"esp32s3/#-_2","text":"","title":"------------------------------------------------------------------------------"},{"location":"esp32s3/#yaml-linter-configuration","text":"","title":"YAML linter configuration"},{"location":"esp32s3/#-disables-quoted-strings-rule-for-improved-readability","text":"","title":"- Disables quoted-strings rule for improved readability"},{"location":"esp32s3/#-_3","text":"","title":"------------------------------------------------------------------------------"},{"location":"esp32s3/#yamllint-disable-rulequoted-strings","text":"","title":"yamllint disable rule:quoted-strings"},{"location":"esp32s3/#-_4","text":"","title":"------------------------------------------------------------------------------"},{"location":"esp32s3/#esp32-s3-qfn44-dev-module-standard-pinout-map-vertical-top-view","text":"","title":"ESP32-S3 (QFN44) Dev Module Standard Pinout Map (Vertical, Top View)"},{"location":"esp32s3/#-_5","text":"","title":"------------------------------------------------------------------------------"},{"location":"esp32s3/#_3","text":"","title":""},{"location":"esp32s3/#_4","text":"","title":"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510"},{"location":"esp32s3/#33v-vcc-01-44-gnd","text":"","title":"3.3V VCC \u2500\u2524 01 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 44 \u251c\u2500\u2500 GND"},{"location":"esp32s3/#33v-vcc-02-43-gpio43-u0txd-led_tx","text":"","title":"3.3V VCC \u2500\u2524 02 \u2502 \u2502 43 \u251c\u2500\u2500 GPIO43 U0TXD LED_TX"},{"location":"esp32s3/#rst-03-42-gpio44-u0rxd-led_rx","text":"","title":"RST \u2500\u2524 03 \u2502 \u2502 42 \u251c\u2500\u2500 GPIO44 U0RXD LED_RX"},{"location":"esp32s3/#t04-adc1_ch3-cam_siod-gpio04-04-41-gpio01-adc1_ch0-t01","text":"","title":"T04 ADC1_CH3 CAM_SIOD GPIO04 \u2500\u2524 04 \u2502 \u2502 41 \u251c\u2500\u2500 GPIO01, ADC1_CH0 T01"},{"location":"esp32s3/#t05-adc1_ch4-cam_sioc-gpio05-05-40-gpio02-adc1_ch1-led_on-t02","text":"","title":"T05 ADC1_CH4 CAM_SIOC GPIO05 \u2500\u2524 05 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 40 \u251c\u2500\u2500 GPIO02 ADC1_CH1 LED_ON T02"},{"location":"esp32s3/#t06-adc1_ch5-cam_vsync-gpio06-06-39-gpio42-mtms","text":"","title":"T06 ADC1_CH5 CAM_VSYNC GPIO06 \u2500\u2524 06 39 \u251c\u2500\u2500 GPIO42 MTMS"},{"location":"esp32s3/#t07-adc1_ch6-cam_href-gpio07-07-38-gpio41-mtd1","text":"","title":"T07 ADC1_CH6 CAM_HREF GPIO07 \u2500\u2524 07 38 \u251c\u2500\u2500 GPIO41 MTD1"},{"location":"esp32s3/#u0rts-adc2_ch4-cam_xclk-gpio15-08-37-gpio40-sd_data-mtdo","text":"","title":"U0RTS ADC2_CH4 CAM_XCLK GPIO15 \u2500\u2524 08 37 \u251c\u2500\u2500 GPIO40 SD_DATA MTDO"},{"location":"esp32s3/#u0cts-adc2_ch5-cam_y9-gpio16-09-36-gpio39-sd_clk-mtck","text":"","title":"U0CTS ADC2_CH5 CAM_Y9 GPIO16 \u2500\u2524 09 36 \u251c\u2500\u2500 GPIO39 SD_CLK MTCK"},{"location":"esp32s3/#u1txd-adc2_ch6-cam_y8-gpio17-10-35-gpio38-sd_cmd","text":"","title":"U1TXD ADC2_CH6 CAM_Y8 GPIO17 \u2500\u2524 10 35 \u251c\u2500\u2500 GPIO38 SD_CMD"},{"location":"esp32s3/#u1rxd-adc2_ch7-cam_y7-gpio18-11-esp32-s3-34-gpio37-psram","text":"","title":"U1RXD ADC2_CH7 CAM_Y7 GPIO18 \u2500\u2524 11 ESP32-S3 34 \u251c\u2500\u2500 GPIO37 PSRAM"},{"location":"esp32s3/#t08-adc1_ch7-cam_y4-gpio08-12-33-gpio36-psram","text":"","title":"T08 ADC1_CH7 CAM_Y4 GPIO08 \u2500\u2524 12 33 \u251c\u2500\u2500 GPIO36 PSRAM"},{"location":"esp32s3/#t03-adc1_ch2-jtag_en-gpio03-13-32-gpio35-psram","text":"","title":"T03 ADC1_CH2 JTAG_EN GPIO03 \u2500\u2524 13 32 \u251c\u2500\u2500 GPIO35 PSRAM"},{"location":"esp32s3/#log-gpio46-14-31-gpio00-boot","text":"","title":"LOG GPIO46 \u2500\u2524 14 31 \u251c\u2500\u2500 GPIO00 BOOT"},{"location":"esp32s3/#t09-adc1_ch8-cam_y3-gpio09-15-30-gpio45-vspi","text":"","title":"T09 ADC1_CH8 CAM_Y3 GPIO09 \u2500\u2524 15 30 \u251c\u2500\u2500 GPIO45 VSPI"},{"location":"esp32s3/#t10-adc1_ch9-cam_y5-gpio10-16-29-gpio48-ws2812","text":"","title":"T10 ADC1_CH9 CAM_Y5 GPIO10 \u2500\u2524 16 29 \u251c\u2500\u2500 GPIO48 WS2812"},{"location":"esp32s3/#t11-adc2_ch0-cam_y2-gpio11-17-28-gpio47","text":"","title":"T11 ADC2_CH0 CAM_Y2 GPIO11 \u2500\u2524 17 28 \u251c\u2500\u2500 GPIO47"},{"location":"esp32s3/#t12-adc2_ch1-cam_y6-gpio12-18-27-gpio21","text":"","title":"T12 ADC2_CH1 CAM_Y6 GPIO12 \u2500\u2524 18 27 \u251c\u2500\u2500 GPIO21"},{"location":"esp32s3/#t13-adc2_ch2-cam_pclk-gpio13-19-26-gpio20-usb_d-adc2_ch9-u1cts","text":"","title":"T13 ADC2_CH2 CAM_PCLK GPIO13 \u2500\u2524 19 26 \u251c\u2500\u2500 GPIO20 USB_D- ADC2_CH9 U1CTS"},{"location":"esp32s3/#t14-adc2_ch3-gpio14-20-25-gpio19-usb_d-adc2_ch8-u1rts","text":"","title":"T14 ADC2_CH3 GPIO14 \u2500\u2524 20 25 \u251c\u2500\u2500 GPIO19 USB_D+ ADC2_CH8 U1RTS"},{"location":"esp32s3/#5v-vin-21-24-gnd","text":"","title":"5V VIN \u2500\u2524 21 24 \u251c\u2500\u2500 GND"},{"location":"esp32s3/#gnd-22-23-gnd","text":"","title":"GND \u2500\u2524 22 23 \u251c\u2500\u2500 GND"},{"location":"esp32s3/#usbusb","text":"","title":"\u2514\u2500\u2500\u2500\u2510USB\u250c\u2500\u2510USB\u250c\u2500\u2500\u2500\u2500\u2518"},{"location":"esp32s3/#_5","text":"","title":"\u2514\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2518"},{"location":"esp32s3/#_6","text":"","title":""},{"location":"esp32s3/#notes","text":"","title":"Notes:"},{"location":"esp32s3/#-pin-numbers-1-44-match-qfn44-package-not-moduledev-board","text":"","title":"- pin numbers (1-44) match QFN44 package, not module/dev board"},{"location":"esp32s3/#-gpio6-11-are-typically-used-for-spi-flash-and-not-available-for-user-io","text":"","title":"- GPIO6-11 are typically used for SPI flash and not available for user IO"},{"location":"esp32s3/#-gpio46-is-input-only","text":"","title":"- GPIO46 is input only"},{"location":"esp32s3/#-gpio00-gpio45-gpio46-are-strapping-pins","text":"","title":"- GPIO00, GPIO45, GPIO46 are strapping pins"},{"location":"esp32s3/#-these-pins-should-not-be-pulled-high-or-low-at-bootreset","text":"","title":"- these pins should not be pulled high or low at boot/reset"},{"location":"esp32s3/#-use-with-caution-avoid-using-as-output-or-with-pull-downs","text":"","title":"- use with caution; avoid using as output or with pull-downs"},{"location":"esp32s3/#-gpio1-gpio3-are-default-uart0-pins-console","text":"","title":"- GPIO1, GPIO3 are default UART0 pins (console)"},{"location":"esp32s3/#-can-be-repurposed-if-not-used-for-serial","text":"","title":"- can be repurposed if not used for serial"},{"location":"esp32s3/#-gpio19-gpio20-gpio21-are-usb-dd-and-related-pins","text":"","title":"- GPIO19, GPIO20, GPIO21 are USB D+/D- and related pins;"},{"location":"esp32s3/#-using-them-for-other-purposes-can-interfere-with-usb-functionality","text":"","title":"- using them for other purposes can interfere with USB functionality"},{"location":"esp32s3/#-not-all-pins-are-available-on-all-modules-check-your-boards-datasheet","text":"","title":"- not all pins are available on all modules; check your board's datasheet"},{"location":"esp32s3/#-see-esp32-s3-datasheet-for-alternate-functions-and-capabilities","text":"","title":"- see ESP32-S3 datasheet for alternate functions and capabilities"},{"location":"esp32s3/#_7","text":"","title":""},{"location":"esp32s3/#-_6","text":"","title":"------------------------------------------------------------------------------"},{"location":"esp32s3/#-_7","text":"","title":"------------------------------------------------------------------------------"},{"location":"esp32s3/#target-esp32-s3-board-and-arduino-framework-declaration","text":"","title":"Target ESP32-S3 board and Arduino framework declaration"},{"location":"esp32s3/#-board-target-esp32-s3-devkitc-1-8mb-flash-no-psram","text":"","title":"- board: Target ESP32-S3 DevKitC-1 (8MB flash, no PSRAM)"},{"location":"esp32s3/#-framework-arduino-core-for-esp32-s3","text":"","title":"- framework: Arduino core for ESP32-S3"},{"location":"esp32s3/#-parameters","text":"","title":"- Parameters:"},{"location":"esp32s3/#board-target-board-eg-esp32-s3-devkitc-1","text":"","title":"board: Target board (e.g., esp32-s3-devkitc-1)"},{"location":"esp32s3/#frameworktype-framework-type-eg-arduino","text":"","title":"framework.type: Framework type (e.g., arduino)"},{"location":"esp32s3/#-_8","text":"esp32: board: esp32-s3-devkitc-1 # board Target board: DevKitC-1 (8MB flash, no PSRAM) framework: type: arduino # framework.type Arduino core for ESP32-S3","title":"------------------------------------------------------------------------------"},{"location":"esp32s3/#-_9","text":"","title":"------------------------------------------------------------------------------"},{"location":"esp32s3/#spi-bus-configuration","text":"","title":"SPI bus configuration"},{"location":"esp32s3/#-configures-spi-bus-for-communication","text":"","title":"- Configures SPI bus for communication"},{"location":"esp32s3/#-assigns-clock-and-mosi-pins","text":"","title":"- Assigns clock and MOSI pins"},{"location":"esp32s3/#-parameters_1","text":"","title":"- Parameters:"},{"location":"esp32s3/#clk_pin-clock-pin-for-spi","text":"","title":"clk_pin: Clock pin for SPI"},{"location":"esp32s3/#mosi_pin-mosi-data-pin","text":"","title":"mosi_pin: MOSI data pin"},{"location":"esp32s3/#-_10","text":"spi: clk_pin: GPIO10 # clk_pin Clock pin for SPI mosi_pin: GPIO11 # param mosi_pin MOSI data pin","title":"------------------------------------------------------------------------------"},{"location":"esp32s3/#-_11","text":"","title":"------------------------------------------------------------------------------"},{"location":"esp32s3/#display-interface-configuration","text":"","title":"Display Interface Configuration"},{"location":"esp32s3/#-configures-gpio-pins-for-display-communication","text":"","title":"- Configures GPIO pins for display communication"},{"location":"esp32s3/#-assigns-chip-select-datacommand-and-reset-pins","text":"","title":"- Assigns Chip Select, Data/Command, and Reset pins"},{"location":"esp32s3/#-parameters_2","text":"","title":"- Parameters:"},{"location":"esp32s3/#display_cs-pin-chip-select-pin","text":"","title":"display_cs: pin Chip Select pin"},{"location":"esp32s3/#display_dc-pin-datacommand-pin","text":"","title":"display_dc: pin Data/Command pin"},{"location":"esp32s3/#display_reset-pin-reset-pin","text":"","title":"display_reset: pin Reset pin"},{"location":"esp32s3/#-_12","text":"substitutions: display_cs_pin: \"GPIO09\" # cs_pin Chip select pin display_dc_pin: \"GPIO08\" # dc_pin Data/command pin display_reset_pin: \"GPIO12\" # reset_pin Reset line","title":"------------------------------------------------------------------------------"},{"location":"logging/","text":"Component: logging \u00b6 Source: /cygdrive/c/cygwin64/home/rhendel/git/PumpHouseBoss/common/logging.yaml \u00b6 Generated: Sun, Jul 27, 2025 11:33:46 PM \u00b6 ------------------------------------------------------------------------------ \u00b6 File: logging.yaml \u00b6 File Type: ESPHome YAML Include \u00b6 Purpose: Common ESPHome logging subsystem configuration \u00b6 Version: 0.7.0 \u00b6 Date: 2025-07-24 \u00b6 Author: Roland Tembo Hendel rhendel@nexuslogic.com \u00b6 \u00b6 Description: Provides global and module-specific logging configuration for ESPHome nodes. \u00b6 Enables serial and OTA log output, controls verbosity, and allows \u00b6 custom actions on log message reception for diagnostics and automation. \u00b6 \u00b6 License: GNU General Public License v3.0 \u00b6 SPDX-License-Identifier: GPL-3.0-or-later \u00b6 Copyright: (c) 2025 Roland Tembo Hendel \u00b6 This program is free software: you can redistribute it and/or \u00b6 modify it under the terms of the GNU General Public License. \u00b6 ------------------------------------------------------------------------------ \u00b6 ------------------------------------------------------------------------------ \u00b6 YAML linter configuration \u00b6 - Disables quoted-strings rule for improved readability \u00b6 - Ensures that string values do not require unnecessary quotes, improving \u00b6 readability and maintainability of the YAML configuration. \u00b6 ------------------------------------------------------------------------------ \u00b6 yamllint disable rule:quoted-strings \u00b6 ------------------------------------------------------------------------------ \u00b6 ESPHome logging subsystem configuration \u00b6 - Enables serial and OTA log output for diagnostics and monitoring. \u00b6 - Controls global and module-specific verbosity for fine-grained logging. \u00b6 - Can trigger custom actions on log message reception (e.g., publish firmware version). \u00b6 - Parameters: \u00b6 level: Global log level (NONE, ERROR, WARN, INFO, DEBUG, VERBOSE) \u00b6 logs.main: Module-specific log level for 'main' \u00b6 on_message: List of actions to perform on log message reception \u00b6 ------------------------------------------------------------------------------ \u00b6 logger: level: DEBUG # level: Global log level (NONE, ERROR, WARN, INFO, DEBUG, VERBOSE) logs: main: DEBUG # logs.main: Module-specific log level for 'main' # brief Action on log message reception # - Publishes firmware version to log on message on_message: - lambda: |- ESP_LOGI(\"main\", \"Firmware version: ${version}\");","title":"Logging"},{"location":"logging/#component-logging","text":"","title":"Component: logging"},{"location":"logging/#source-cygdriveccygwin64homerhendelgitpumphousebosscommonloggingyaml","text":"","title":"Source: /cygdrive/c/cygwin64/home/rhendel/git/PumpHouseBoss/common/logging.yaml"},{"location":"logging/#generated-sun-jul-27-2025-113346-pm","text":"","title":"Generated: Sun, Jul 27, 2025 11:33:46 PM"},{"location":"logging/#-","text":"","title":"------------------------------------------------------------------------------"},{"location":"logging/#file-loggingyaml","text":"","title":"File: logging.yaml"},{"location":"logging/#file-type-esphome-yaml-include","text":"","title":"File Type: ESPHome YAML Include"},{"location":"logging/#purpose-common-esphome-logging-subsystem-configuration","text":"","title":"Purpose: Common ESPHome logging subsystem configuration"},{"location":"logging/#version-070","text":"","title":"Version: 0.7.0"},{"location":"logging/#date-2025-07-24","text":"","title":"Date: 2025-07-24"},{"location":"logging/#author-roland-tembo-hendel-rhendelnexuslogiccom","text":"","title":"Author: Roland Tembo Hendel &#114;&#104;&#101;&#110;&#100;&#101;&#108;&#64;&#110;&#101;&#120;&#117;&#115;&#108;&#111;&#103;&#105;&#99;&#46;&#99;&#111;&#109;"},{"location":"logging/#_1","text":"","title":""},{"location":"logging/#description-provides-global-and-module-specific-logging-configuration-for-esphome-nodes","text":"","title":"Description: Provides global and module-specific logging configuration for ESPHome nodes."},{"location":"logging/#enables-serial-and-ota-log-output-controls-verbosity-and-allows","text":"","title":"Enables serial and OTA log output, controls verbosity, and allows"},{"location":"logging/#custom-actions-on-log-message-reception-for-diagnostics-and-automation","text":"","title":"custom actions on log message reception for diagnostics and automation."},{"location":"logging/#_2","text":"","title":""},{"location":"logging/#license-gnu-general-public-license-v30","text":"","title":"License: GNU General Public License v3.0"},{"location":"logging/#spdx-license-identifier-gpl-30-or-later","text":"","title":"SPDX-License-Identifier: GPL-3.0-or-later"},{"location":"logging/#copyright-c-2025-roland-tembo-hendel","text":"","title":"Copyright: (c) 2025 Roland Tembo Hendel"},{"location":"logging/#this-program-is-free-software-you-can-redistribute-it-andor","text":"","title":"This program is free software: you can redistribute it and/or"},{"location":"logging/#modify-it-under-the-terms-of-the-gnu-general-public-license","text":"","title":"modify it under the terms of the GNU General Public License."},{"location":"logging/#-_1","text":"","title":"------------------------------------------------------------------------------"},{"location":"logging/#-_2","text":"","title":"------------------------------------------------------------------------------"},{"location":"logging/#yaml-linter-configuration","text":"","title":"YAML linter configuration"},{"location":"logging/#-disables-quoted-strings-rule-for-improved-readability","text":"","title":"- Disables quoted-strings rule for improved readability"},{"location":"logging/#-ensures-that-string-values-do-not-require-unnecessary-quotes-improving","text":"","title":"- Ensures that string values do not require unnecessary quotes, improving"},{"location":"logging/#readability-and-maintainability-of-the-yaml-configuration","text":"","title":"readability and maintainability of the YAML configuration."},{"location":"logging/#-_3","text":"","title":"------------------------------------------------------------------------------"},{"location":"logging/#yamllint-disable-rulequoted-strings","text":"","title":"yamllint disable rule:quoted-strings"},{"location":"logging/#-_4","text":"","title":"------------------------------------------------------------------------------"},{"location":"logging/#esphome-logging-subsystem-configuration","text":"","title":"ESPHome logging subsystem configuration"},{"location":"logging/#-enables-serial-and-ota-log-output-for-diagnostics-and-monitoring","text":"","title":"- Enables serial and OTA log output for diagnostics and monitoring."},{"location":"logging/#-controls-global-and-module-specific-verbosity-for-fine-grained-logging","text":"","title":"- Controls global and module-specific verbosity for fine-grained logging."},{"location":"logging/#-can-trigger-custom-actions-on-log-message-reception-eg-publish-firmware-version","text":"","title":"- Can trigger custom actions on log message reception (e.g., publish firmware version)."},{"location":"logging/#-parameters","text":"","title":"- Parameters:"},{"location":"logging/#level-global-log-level-none-error-warn-info-debug-verbose","text":"","title":"level: Global log level (NONE, ERROR, WARN, INFO, DEBUG, VERBOSE)"},{"location":"logging/#logsmain-module-specific-log-level-for-main","text":"","title":"logs.main: Module-specific log level for 'main'"},{"location":"logging/#on_message-list-of-actions-to-perform-on-log-message-reception","text":"","title":"on_message: List of actions to perform on log message reception"},{"location":"logging/#-_5","text":"logger: level: DEBUG # level: Global log level (NONE, ERROR, WARN, INFO, DEBUG, VERBOSE) logs: main: DEBUG # logs.main: Module-specific log level for 'main' # brief Action on log message reception # - Publishes firmware version to log on message on_message: - lambda: |- ESP_LOGI(\"main\", \"Firmware version: ${version}\");","title":"------------------------------------------------------------------------------"},{"location":"ota/","text":"Component: ota \u00b6 Source: /cygdrive/c/cygwin64/home/rhendel/git/PumpHouseBoss/common/ota.yaml \u00b6 Generated: Sun, Jul 27, 2025 11:33:46 PM \u00b6 ------------------------------------------------------------------------------ \u00b6 File: ota.yaml \u00b6 File Type: ESPHome YAML Include \u00b6 Purpose: Common ESPHome Over-The-Air programming subsystem configuration \u00b6 Version: 0.7.0 \u00b6 Date: 2025-07-24 \u00b6 Author: GitHub Copilot \u00b6 \u00b6 Description: OTA update configuration for ESPHome nodes. \u00b6 \u00b6 License: GNU General Public License v3.0 \u00b6 SPDX-License-Identifier: GPL-3.0-or-later \u00b6 Copyright: (c) 2025 Roland Tembo Hendel \u00b6 This program is free software: you can redistribute it and/or \u00b6 modify it under the terms of the GNU General Public License. \u00b6 ------------------------------------------------------------------------------ \u00b6 ------------------------------------------------------------------------------ \u00b6 YAML linter configuration \u00b6 - Disables quoted-strings rule for improved readability \u00b6 ------------------------------------------------------------------------------ \u00b6 yamllint disable rule:quoted-strings \u00b6 ota: ------------------------------------------------------------------------------ \u00b6 Enables OTA firmware upload over Wi-Fi \u00b6 - Password is loaded from the secrets file for security \u00b6 - Platform can be set (default: esphome) \u00b6 - Logs a message on OTA completion \u00b6 - Parameters: \u00b6 password: OTA password (from secrets file) \u00b6 platform: OTA platform (default: esphome) \u00b6 on_end: Actions to perform on OTA completion \u00b6 ------------------------------------------------------------------------------ \u00b6 password: !secret ota_password # password Load OTA password from secrets file platform: esphome # platform OTA platform (default: esphome) # brief Log message on OTA completion # details Logs a message to indicate OTA update finished on_end: then: - logger.log: OTA update finished ------------------------------------------------------------------------------ \u00b6 Safe Mode logging handler \u00b6 - Triggered when device boots into recovery mode \u00b6 - Logs a message to indicate safe mode boot \u00b6 ------------------------------------------------------------------------------ \u00b6 safe_mode: on_safe_mode: then: - logger.log: Booted into safe mode","title":"OTA"},{"location":"ota/#component-ota","text":"","title":"Component: ota"},{"location":"ota/#source-cygdriveccygwin64homerhendelgitpumphousebosscommonotayaml","text":"","title":"Source: /cygdrive/c/cygwin64/home/rhendel/git/PumpHouseBoss/common/ota.yaml"},{"location":"ota/#generated-sun-jul-27-2025-113346-pm","text":"","title":"Generated: Sun, Jul 27, 2025 11:33:46 PM"},{"location":"ota/#-","text":"","title":"------------------------------------------------------------------------------"},{"location":"ota/#file-otayaml","text":"","title":"File: ota.yaml"},{"location":"ota/#file-type-esphome-yaml-include","text":"","title":"File Type: ESPHome YAML Include"},{"location":"ota/#purpose-common-esphome-over-the-air-programming-subsystem-configuration","text":"","title":"Purpose: Common ESPHome Over-The-Air programming subsystem configuration"},{"location":"ota/#version-070","text":"","title":"Version: 0.7.0"},{"location":"ota/#date-2025-07-24","text":"","title":"Date: 2025-07-24"},{"location":"ota/#author-github-copilot","text":"","title":"Author: GitHub Copilot"},{"location":"ota/#_1","text":"","title":""},{"location":"ota/#description-ota-update-configuration-for-esphome-nodes","text":"","title":"Description: OTA update configuration for ESPHome nodes."},{"location":"ota/#_2","text":"","title":""},{"location":"ota/#license-gnu-general-public-license-v30","text":"","title":"License: GNU General Public License v3.0"},{"location":"ota/#spdx-license-identifier-gpl-30-or-later","text":"","title":"SPDX-License-Identifier: GPL-3.0-or-later"},{"location":"ota/#copyright-c-2025-roland-tembo-hendel","text":"","title":"Copyright: (c) 2025 Roland Tembo Hendel"},{"location":"ota/#this-program-is-free-software-you-can-redistribute-it-andor","text":"","title":"This program is free software: you can redistribute it and/or"},{"location":"ota/#modify-it-under-the-terms-of-the-gnu-general-public-license","text":"","title":"modify it under the terms of the GNU General Public License."},{"location":"ota/#-_1","text":"","title":"------------------------------------------------------------------------------"},{"location":"ota/#-_2","text":"","title":"------------------------------------------------------------------------------"},{"location":"ota/#yaml-linter-configuration","text":"","title":"YAML linter configuration"},{"location":"ota/#-disables-quoted-strings-rule-for-improved-readability","text":"","title":"- Disables quoted-strings rule for improved readability"},{"location":"ota/#-_3","text":"","title":"------------------------------------------------------------------------------"},{"location":"ota/#yamllint-disable-rulequoted-strings","text":"ota:","title":"yamllint disable rule:quoted-strings"},{"location":"ota/#-_4","text":"","title":"------------------------------------------------------------------------------"},{"location":"ota/#enables-ota-firmware-upload-over-wi-fi","text":"","title":"Enables OTA firmware upload over Wi-Fi"},{"location":"ota/#-password-is-loaded-from-the-secrets-file-for-security","text":"","title":"- Password is loaded from the secrets file for security"},{"location":"ota/#-platform-can-be-set-default-esphome","text":"","title":"- Platform can be set (default: esphome)"},{"location":"ota/#-logs-a-message-on-ota-completion","text":"","title":"- Logs a message on OTA completion"},{"location":"ota/#-parameters","text":"","title":"- Parameters:"},{"location":"ota/#password-ota-password-from-secrets-file","text":"","title":"password: OTA password (from secrets file)"},{"location":"ota/#platform-ota-platform-default-esphome","text":"","title":"platform: OTA platform (default: esphome)"},{"location":"ota/#on_end-actions-to-perform-on-ota-completion","text":"","title":"on_end: Actions to perform on OTA completion"},{"location":"ota/#-_5","text":"password: !secret ota_password # password Load OTA password from secrets file platform: esphome # platform OTA platform (default: esphome) # brief Log message on OTA completion # details Logs a message to indicate OTA update finished on_end: then: - logger.log: OTA update finished","title":"------------------------------------------------------------------------------"},{"location":"ota/#-_6","text":"","title":"------------------------------------------------------------------------------"},{"location":"ota/#safe-mode-logging-handler","text":"","title":"Safe Mode logging handler"},{"location":"ota/#-triggered-when-device-boots-into-recovery-mode","text":"","title":"- Triggered when device boots into recovery mode"},{"location":"ota/#-logs-a-message-to-indicate-safe-mode-boot","text":"","title":"- Logs a message to indicate safe mode boot"},{"location":"ota/#-_7","text":"safe_mode: on_safe_mode: then: - logger.log: Booted into safe mode","title":"------------------------------------------------------------------------------"},{"location":"phb-pro-hardware/","text":"PumpHouseBoss Professional - Hardware Guide \u00b6 Pinout Map: ESP32-S3 (44 Pin Package, Top View'') \u00b6 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 VCC [ NC] \u2500\u2524 01 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 44 \u251c\u2500\u2500 [GND ] GND VCC [ NC] \u2500\u2524 02 \u2502 \u2502 43 \u251c\u2500\u2500 [OUT ] GPIO43 MMU7_CTRL BTN_RESET RST [INLOW] \u2500\u2524 03 \u2502 \u2502 42 \u251c\u2500\u2500 [PWMIN] GPIO44 MMU7_SENS GPIO04 [ NC] \u2500\u2524 04 \u2502 \u2502 41 \u251c\u2500\u2500 [OUT ] GPIO01 MMU6_CTRL BTN_DISP GPIO05 [ IN] \u2500\u2524 05 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 40 \u251c\u2500\u2500 [PWMIN] GPIO02 MMU6_SENS BTN_CTRL GPIO06 [ IN] \u2500\u2524 06 39 \u251c\u2500\u2500 [OUT ] GPIO42 MMU5_CTRL LED_WHITE GPIO07 [ OUT] \u2500\u2524 07 38 \u251c\u2500\u2500 [PWMIN] GPIO41 MMU5_SENS lED_GREEN GPIO15 [ OUT] \u2500\u2524 08 37 \u251c\u2500\u2500 [OUT ] GPIO40 MMU4_CTRL LED_BLUE GPIO16 [ OUT] \u2500\u2524 09 36 \u251c\u2500\u2500 [PWMIN] GPIO39 MMU4_SENS LED_RED GPIO17 [ OUT] \u2500\u2524 10 35 \u251c\u2500\u2500 [OUT ] GPIO38 MMU3_CTRL DISP_SDA GPIO18 [INOUT] \u2500\u2524 11 ESP32-S3 34 \u251c\u2500\u2500 [PWMIN] GPIO37 MMU3_SENS GPIO08 [ NC] \u2500\u2524 12 33 \u251c\u2500\u2500 [OUT ] GPIO36 MMU2_CTRL GPIO03 [-----] \u2500\u2524 13 32 \u251c\u2500\u2500 [PWMIN] GPIO35 MMU2_SENS GPIO46 [-----] \u2500\u2524 14 31 \u251c\u2500\u2500 [-----] GPIO00 DISP_SCL GPIO09 [ OUT] \u2500\u2524 15 30 \u251c\u2500\u2500 [-----] GPIO45 GPIO10 [ NC] \u2500\u2524 16 29 \u251c\u2500\u2500 [NC ] GPIO48 GPIO11 [ NC] \u2500\u2524 17 28 \u251c\u2500\u2500 [OUT ] GPIO47 MMU1_CTRL GPIO12 [ NC] \u2500\u2524 18 27 \u251c\u2500\u2500 [PWMIN] GPIO21 MMU1_SENS GPIO13 [ NC] \u2500\u2524 19 26 \u251c\u2500\u2500 [OUT ] GPIO20 MMU0_CTRL GPIO14 [ NC] \u2500\u2524 20 25 \u251c\u2500\u2500 [PWMIN] GPIO19 MMU0_SENS 5V VIN [5V_IN] \u2500\u2524 21 24 \u251c\u2500\u2500 [GND ] GND GND [ GND] \u2500\u2524 22 23 \u251c\u2500\u2500 [GND ] GND \u2514\u2500\u2500\u2500\u2510USB\u250c\u2500\u2510USB\u250c\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2518 Notes: \u00b6 Power: supply 5v to VIN (on-board regulator) GND: tie pins 22, 23, 24, and 44 low BTN_RESET: active low; button press pulls to GND for system reset","title":"Hardware"},{"location":"phb-pro-hardware/#pumphouseboss-professional-hardware-guide","text":"","title":"PumpHouseBoss Professional - Hardware Guide"},{"location":"phb-pro-hardware/#pinout-map-esp32-s3-44-pin-package-top-view","text":"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 VCC [ NC] \u2500\u2524 01 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 44 \u251c\u2500\u2500 [GND ] GND VCC [ NC] \u2500\u2524 02 \u2502 \u2502 43 \u251c\u2500\u2500 [OUT ] GPIO43 MMU7_CTRL BTN_RESET RST [INLOW] \u2500\u2524 03 \u2502 \u2502 42 \u251c\u2500\u2500 [PWMIN] GPIO44 MMU7_SENS GPIO04 [ NC] \u2500\u2524 04 \u2502 \u2502 41 \u251c\u2500\u2500 [OUT ] GPIO01 MMU6_CTRL BTN_DISP GPIO05 [ IN] \u2500\u2524 05 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 40 \u251c\u2500\u2500 [PWMIN] GPIO02 MMU6_SENS BTN_CTRL GPIO06 [ IN] \u2500\u2524 06 39 \u251c\u2500\u2500 [OUT ] GPIO42 MMU5_CTRL LED_WHITE GPIO07 [ OUT] \u2500\u2524 07 38 \u251c\u2500\u2500 [PWMIN] GPIO41 MMU5_SENS lED_GREEN GPIO15 [ OUT] \u2500\u2524 08 37 \u251c\u2500\u2500 [OUT ] GPIO40 MMU4_CTRL LED_BLUE GPIO16 [ OUT] \u2500\u2524 09 36 \u251c\u2500\u2500 [PWMIN] GPIO39 MMU4_SENS LED_RED GPIO17 [ OUT] \u2500\u2524 10 35 \u251c\u2500\u2500 [OUT ] GPIO38 MMU3_CTRL DISP_SDA GPIO18 [INOUT] \u2500\u2524 11 ESP32-S3 34 \u251c\u2500\u2500 [PWMIN] GPIO37 MMU3_SENS GPIO08 [ NC] \u2500\u2524 12 33 \u251c\u2500\u2500 [OUT ] GPIO36 MMU2_CTRL GPIO03 [-----] \u2500\u2524 13 32 \u251c\u2500\u2500 [PWMIN] GPIO35 MMU2_SENS GPIO46 [-----] \u2500\u2524 14 31 \u251c\u2500\u2500 [-----] GPIO00 DISP_SCL GPIO09 [ OUT] \u2500\u2524 15 30 \u251c\u2500\u2500 [-----] GPIO45 GPIO10 [ NC] \u2500\u2524 16 29 \u251c\u2500\u2500 [NC ] GPIO48 GPIO11 [ NC] \u2500\u2524 17 28 \u251c\u2500\u2500 [OUT ] GPIO47 MMU1_CTRL GPIO12 [ NC] \u2500\u2524 18 27 \u251c\u2500\u2500 [PWMIN] GPIO21 MMU1_SENS GPIO13 [ NC] \u2500\u2524 19 26 \u251c\u2500\u2500 [OUT ] GPIO20 MMU0_CTRL GPIO14 [ NC] \u2500\u2524 20 25 \u251c\u2500\u2500 [PWMIN] GPIO19 MMU0_SENS 5V VIN [5V_IN] \u2500\u2524 21 24 \u251c\u2500\u2500 [GND ] GND GND [ GND] \u2500\u2524 22 23 \u251c\u2500\u2500 [GND ] GND \u2514\u2500\u2500\u2500\u2510USB\u250c\u2500\u2510USB\u250c\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2518","title":"Pinout Map: ESP32-S3 (44 Pin Package, Top View'')"},{"location":"phb-pro-hardware/#notes","text":"Power: supply 5v to VIN (on-board regulator) GND: tie pins 22, 23, 24, and 44 low BTN_RESET: active low; button press pulls to GND for system reset","title":"Notes:"},{"location":"phb-pro-overview/","text":"PumpHouseBoss Professional - Hardware Guide \u00b6 Description \u00b6 PumpHouseBoss Professional is an Advanced Water Distribution System Monitor and Controller. Features \u00b6 Ingress and egress flow monitoring, metering Over/under flow-rate detection, alerts and alarms Automated solenoid control for emergency water-shutoff or water-flow management/control Manual emergency override to shut-off water-flow 4 line LCD (lcd_pcf8574 interface) Historical flow-rate/usage graphing Home Assistant integration via ESPHome Supports up to 8 MMUs (flow-sensor + solenoid) to monitor and control up to 8 water lines Controls \u00b6 CONTROL INPUT FUNCTION BTN_DISP press/releases rotate active MMU in display hold 3s toggle freeze display BTN_CTRL press/release toggle MMU manual override for active MMU hold 3s toggle MMU manual override BTN_RESET press/release system reset Indications \u00b6 LED ACTIVITY INDICATION LED_WHITE solid normal operation slow flash system initialization rapid flash system failure off no power LED_GREEN off WiFi disconnected slow flash WiFi connecting rapid flash WiFi initialization pending solid WiFi connected LED_BLUE off Home Assistant disconnected slow flash Home Assistant connecting rapid flash Home Assistant initialization pending solid Home Assistant connected LED_RED off MMU open (normal operation) slow flash one or more MMUs in manual shut-off state rapid flash on or more MMUs in automatic shut-off state solid all MMUs in shut-off state","title":"Overview"},{"location":"phb-pro-overview/#pumphouseboss-professional-hardware-guide","text":"","title":"PumpHouseBoss Professional - Hardware Guide"},{"location":"phb-pro-overview/#description","text":"PumpHouseBoss Professional is an Advanced Water Distribution System Monitor and Controller.","title":"Description"},{"location":"phb-pro-overview/#features","text":"Ingress and egress flow monitoring, metering Over/under flow-rate detection, alerts and alarms Automated solenoid control for emergency water-shutoff or water-flow management/control Manual emergency override to shut-off water-flow 4 line LCD (lcd_pcf8574 interface) Historical flow-rate/usage graphing Home Assistant integration via ESPHome Supports up to 8 MMUs (flow-sensor + solenoid) to monitor and control up to 8 water lines","title":"Features"},{"location":"phb-pro-overview/#controls","text":"CONTROL INPUT FUNCTION BTN_DISP press/releases rotate active MMU in display hold 3s toggle freeze display BTN_CTRL press/release toggle MMU manual override for active MMU hold 3s toggle MMU manual override BTN_RESET press/release system reset","title":"Controls"},{"location":"phb-pro-overview/#indications","text":"LED ACTIVITY INDICATION LED_WHITE solid normal operation slow flash system initialization rapid flash system failure off no power LED_GREEN off WiFi disconnected slow flash WiFi connecting rapid flash WiFi initialization pending solid WiFi connected LED_BLUE off Home Assistant disconnected slow flash Home Assistant connecting rapid flash Home Assistant initialization pending solid Home Assistant connected LED_RED off MMU open (normal operation) slow flash one or more MMUs in manual shut-off state rapid flash on or more MMUs in automatic shut-off state solid all MMUs in shut-off state","title":"Indications"},{"location":"phb-pro/","text":"Component: phb-pro \u00b6 Source: /cygdrive/c/cygwin64/home/rhendel/git/PumpHouseBoss/variants/phb-pro/phb-pro.yaml \u00b6 Generated: Sun, Jul 27, 2025 11:33:47 PM \u00b6 ------------------------------------------------------------------------------ \u00b6 File: phb-pro.yaml \u00b6 File Type: ESPHome YAML Main \u00b6 Purpose: PumpHouseBoss Pro Variant Main \u00b6 Version: 0.7.0 \u00b6 Date: 2025-07-24 \u00b6 Author: Roland Tembo Hendel rhendel@nexuslogic.com \u00b6 \u00b6 Description: PumpHouseBoss Pro Variant is a Water Distribution System \u00b6 Monitor and controller built on the ESP32s3 platform. \u00b6 \u00b6 Features: - Ingress and egress flow monitoring, metering \u00b6 - Over/under flow-rate detection, alerts and alarms \u00b6 - Automated solenoid control for emergency water-shutoff or \u00b6 water-flow management/control \u00b6 - Manual emergency override to shut-off water-flow \u00b6 - 4 line LCD (lcd_pcf8574 interface) \u00b6 - Historical flow-rate/usage graphing \u00b6 - Home Assistant integration via ESPHome \u00b6 - Supports up to 8 MMUs \u00b6 \u00b6 License: GNU General Public License v3.0 \u00b6 SPDX-License-Identifier: GPL-3.0-or-later \u00b6 Copyright: (c) 2025 Roland Tembo Hendel \u00b6 This program is free software: you can redistribute it and/or \u00b6 modify it under the terms of the GNU General Public License. \u00b6 \u00b6 Note: Co-developed with GitHub Copilot by OpenAI. \u00b6 ------------------------------------------------------------------------------ \u00b6 ------------------------------------------------------------------------------ \u00b6 YAML linter configuration \u00b6 - Disables quoted-strings rule for improved readability \u00b6 ------------------------------------------------------------------------------ \u00b6 yamllint disable rule:quoted-strings \u00b6 ------------------------------------------------------------------------------ \u00b6 Node identity, version, and hardware pin assignments \u00b6 - Provides substitutions for node name, friendly name, version, and key pins \u00b6 - Used throughout the configuration for maintainability \u00b6 - Parameters: \u00b6 node_name: Node ID used in ESPHome and logs \u00b6 friendly_name: Human-readable name for dashboards \u00b6 version: Firmware version tag injected into logs and sensors \u00b6 flow_sensor_pin: Primary flow sensor pulse counter input \u00b6 test_output_pin: GPIO test and verification pin \u00b6 watchdog_timeout: Hardware watchdog timeout period \u00b6 watchdog_trigger_pin: External watchdog trigger output \u00b6 watchdog_early_trigger: Early trigger before timeout \u00b6 ------------------------------------------------------------------------------ \u00b6 substitutions: chip_set: PLATFORM node_name: NODE_NAME friendly_name: FRIENDLY_NAME version: VERSION watchdog_timeout: \"30s\" watchdog_trigger_pin: \"GPIO07\" watchdog_early_trigger: \"25s\" ------------------------------------------------------------------------------ \u00b6 Common package includes for modular configuration \u00b6 - Modularizes board, display, network, OTA, logging, and watchdog config \u00b6 - Parameters: \u00b6 esp32s3: ESP32s3 board and framework config \u00b6 display: Display configuration (e.g., ST7789V panel) \u00b6 wifi: Wi-Fi credentials, static IP, and fallback \u00b6 ota: OTA settings (port, auth) \u00b6 web: Web interface (http:// .local) \u00b6 logging: USB/UART logging config (level, baud) \u00b6 watchdog: System reliability watchdog component \u00b6 ------------------------------------------------------------------------------ \u00b6 packages: esp32s3: !include PROJECT_ROOT /common/ PLATFORM .yaml wifi: !include PROJECT_ROOT /common/wifi.yaml ota: !include PROJECT_ROOT /common/ota.yaml web: !include PROJECT_ROOT /common/web_server.yaml logging: !include PROJECT_ROOT /common/logging.yaml watchdog: !include PROJECT_ROOT /common/watchdog.yaml ------------------------------------------------------------------------------ \u00b6 ESPHome-specific metadata and on_boot logic \u00b6 - Sets node name and friendly name \u00b6 - Publishes firmware version to Home Assistant on boot \u00b6 - Parameters: \u00b6 name: Node name \u00b6 friendly_name: Human-readable name \u00b6 on_boot: Actions to perform on boot \u00b6 ------------------------------------------------------------------------------ \u00b6 esphome: name: NODE_NAME friendly_name: FRIENDLY_NAME on_boot: priority: -100 then: - text_sensor.template.publish: id: firmware_version state: version # Publishes version string to Home Assistant on boot ------------------------------------------------------------------------------ \u00b6 Template sensor exposing firmware version as Home Assistant text_sensor \u00b6 - Publishes the firmware version string to Home Assistant \u00b6 - Parameters: \u00b6 name: Sensor name \u00b6 id: Sensor ID \u00b6 icon: Home Assistant icon \u00b6 update_interval: Update frequency \u00b6 lambda: Lambda function for value \u00b6 ------------------------------------------------------------------------------ \u00b6 text_sensor: - platform: template name: \"Firmware Version\" # User-visible sensor name in HA id: firmware_version icon: \"mdi:tag\" update_interval: never # Static value set only on boot lambda: |- return {\" VERSION \"}; ------------------------------------------------------------------------------ \u00b6 Uptime and flow rate sensors (hall-effect pulse counter) \u00b6 - Uptime sensor: seconds since boot \u00b6 - Flow rate sensor: hall-effect pulse counter, configurable input pin \u00b6 - Calibration factor converts pulses to L/min \u00b6 - Parameters: \u00b6 platform: Sensor platform (uptime, pulse_counter) \u00b6 pin: Input pin for pulse counter \u00b6 name: Sensor name \u00b6 id: Sensor ID \u00b6 update_interval: Update frequency \u00b6 count_mode: Pulse counting mode \u00b6 internal_filter: Filter for pulse input \u00b6 unit_of_measurement: Measurement units \u00b6 accuracy_decimals: Number of decimals \u00b6 filters: Calibration factor \u00b6 ------------------------------------------------------------------------------ \u00b6 sensor: - platform: uptime name: \"Uptime\" # Uptime in seconds since boot id: uptime_sensor","title":"PHB Pro"},{"location":"phb-pro/#component-phb-pro","text":"","title":"Component: phb-pro"},{"location":"phb-pro/#source-cygdriveccygwin64homerhendelgitpumphousebossvariantsphb-prophb-proyaml","text":"","title":"Source: /cygdrive/c/cygwin64/home/rhendel/git/PumpHouseBoss/variants/phb-pro/phb-pro.yaml"},{"location":"phb-pro/#generated-sun-jul-27-2025-113347-pm","text":"","title":"Generated: Sun, Jul 27, 2025 11:33:47 PM"},{"location":"phb-pro/#-","text":"","title":"------------------------------------------------------------------------------"},{"location":"phb-pro/#file-phb-proyaml","text":"","title":"File: phb-pro.yaml"},{"location":"phb-pro/#file-type-esphome-yaml-main","text":"","title":"File Type: ESPHome YAML Main"},{"location":"phb-pro/#purpose-pumphouseboss-pro-variant-main","text":"","title":"Purpose: PumpHouseBoss Pro Variant Main"},{"location":"phb-pro/#version-070","text":"","title":"Version: 0.7.0"},{"location":"phb-pro/#date-2025-07-24","text":"","title":"Date: 2025-07-24"},{"location":"phb-pro/#author-roland-tembo-hendel-rhendelnexuslogiccom","text":"","title":"Author: Roland Tembo Hendel &#114;&#104;&#101;&#110;&#100;&#101;&#108;&#64;&#110;&#101;&#120;&#117;&#115;&#108;&#111;&#103;&#105;&#99;&#46;&#99;&#111;&#109;"},{"location":"phb-pro/#_1","text":"","title":""},{"location":"phb-pro/#description-pumphouseboss-pro-variant-is-a-water-distribution-system","text":"","title":"Description: PumpHouseBoss Pro Variant is a Water Distribution System"},{"location":"phb-pro/#monitor-and-controller-built-on-the-esp32s3-platform","text":"","title":"Monitor and controller built on the ESP32s3 platform."},{"location":"phb-pro/#_2","text":"","title":""},{"location":"phb-pro/#features-ingress-and-egress-flow-monitoring-metering","text":"","title":"Features: - Ingress and egress flow monitoring, metering"},{"location":"phb-pro/#-overunder-flow-rate-detection-alerts-and-alarms","text":"","title":"- Over/under flow-rate detection, alerts and alarms"},{"location":"phb-pro/#-automated-solenoid-control-for-emergency-water-shutoff-or","text":"","title":"- Automated solenoid control for emergency water-shutoff or"},{"location":"phb-pro/#water-flow-managementcontrol","text":"","title":"water-flow management/control"},{"location":"phb-pro/#-manual-emergency-override-to-shut-off-water-flow","text":"","title":"- Manual emergency override to shut-off water-flow"},{"location":"phb-pro/#-4-line-lcd-lcd_pcf8574-interface","text":"","title":"- 4 line LCD (lcd_pcf8574 interface)"},{"location":"phb-pro/#-historical-flow-rateusage-graphing","text":"","title":"- Historical flow-rate/usage graphing"},{"location":"phb-pro/#-home-assistant-integration-via-esphome","text":"","title":"- Home Assistant integration via ESPHome"},{"location":"phb-pro/#-supports-up-to-8-mmus","text":"","title":"- Supports up to 8 MMUs"},{"location":"phb-pro/#_3","text":"","title":""},{"location":"phb-pro/#license-gnu-general-public-license-v30","text":"","title":"License: GNU General Public License v3.0"},{"location":"phb-pro/#spdx-license-identifier-gpl-30-or-later","text":"","title":"SPDX-License-Identifier: GPL-3.0-or-later"},{"location":"phb-pro/#copyright-c-2025-roland-tembo-hendel","text":"","title":"Copyright: (c) 2025 Roland Tembo Hendel"},{"location":"phb-pro/#this-program-is-free-software-you-can-redistribute-it-andor","text":"","title":"This program is free software: you can redistribute it and/or"},{"location":"phb-pro/#modify-it-under-the-terms-of-the-gnu-general-public-license","text":"","title":"modify it under the terms of the GNU General Public License."},{"location":"phb-pro/#_4","text":"","title":""},{"location":"phb-pro/#note-co-developed-with-github-copilot-by-openai","text":"","title":"Note: Co-developed with GitHub Copilot by OpenAI."},{"location":"phb-pro/#-_1","text":"","title":"------------------------------------------------------------------------------"},{"location":"phb-pro/#-_2","text":"","title":"------------------------------------------------------------------------------"},{"location":"phb-pro/#yaml-linter-configuration","text":"","title":"YAML linter configuration"},{"location":"phb-pro/#-disables-quoted-strings-rule-for-improved-readability","text":"","title":"- Disables quoted-strings rule for improved readability"},{"location":"phb-pro/#-_3","text":"","title":"------------------------------------------------------------------------------"},{"location":"phb-pro/#yamllint-disable-rulequoted-strings","text":"","title":"yamllint disable rule:quoted-strings"},{"location":"phb-pro/#-_4","text":"","title":"------------------------------------------------------------------------------"},{"location":"phb-pro/#node-identity-version-and-hardware-pin-assignments","text":"","title":"Node identity, version, and hardware pin assignments"},{"location":"phb-pro/#-provides-substitutions-for-node-name-friendly-name-version-and-key-pins","text":"","title":"- Provides substitutions for node name, friendly name, version, and key pins"},{"location":"phb-pro/#-used-throughout-the-configuration-for-maintainability","text":"","title":"- Used throughout the configuration for maintainability"},{"location":"phb-pro/#-parameters","text":"","title":"- Parameters:"},{"location":"phb-pro/#node_name-node-id-used-in-esphome-and-logs","text":"","title":"node_name: Node ID used in ESPHome and logs"},{"location":"phb-pro/#friendly_name-human-readable-name-for-dashboards","text":"","title":"friendly_name: Human-readable name for dashboards"},{"location":"phb-pro/#version-firmware-version-tag-injected-into-logs-and-sensors","text":"","title":"version: Firmware version tag injected into logs and sensors"},{"location":"phb-pro/#flow_sensor_pin-primary-flow-sensor-pulse-counter-input","text":"","title":"flow_sensor_pin: Primary flow sensor pulse counter input"},{"location":"phb-pro/#test_output_pin-gpio-test-and-verification-pin","text":"","title":"test_output_pin: GPIO test and verification pin"},{"location":"phb-pro/#watchdog_timeout-hardware-watchdog-timeout-period","text":"","title":"watchdog_timeout: Hardware watchdog timeout period"},{"location":"phb-pro/#watchdog_trigger_pin-external-watchdog-trigger-output","text":"","title":"watchdog_trigger_pin: External watchdog trigger output"},{"location":"phb-pro/#watchdog_early_trigger-early-trigger-before-timeout","text":"","title":"watchdog_early_trigger: Early trigger before timeout"},{"location":"phb-pro/#-_5","text":"substitutions: chip_set: PLATFORM node_name: NODE_NAME friendly_name: FRIENDLY_NAME version: VERSION watchdog_timeout: \"30s\" watchdog_trigger_pin: \"GPIO07\" watchdog_early_trigger: \"25s\"","title":"------------------------------------------------------------------------------"},{"location":"phb-pro/#-_6","text":"","title":"------------------------------------------------------------------------------"},{"location":"phb-pro/#common-package-includes-for-modular-configuration","text":"","title":"Common package includes for modular configuration"},{"location":"phb-pro/#-modularizes-board-display-network-ota-logging-and-watchdog-config","text":"","title":"- Modularizes board, display, network, OTA, logging, and watchdog config"},{"location":"phb-pro/#-parameters_1","text":"","title":"- Parameters:"},{"location":"phb-pro/#esp32s3-esp32s3-board-and-framework-config","text":"","title":"esp32s3: ESP32s3 board and framework config"},{"location":"phb-pro/#display-display-configuration-eg-st7789v-panel","text":"","title":"display: Display configuration (e.g., ST7789V panel)"},{"location":"phb-pro/#wifi-wi-fi-credentials-static-ip-and-fallback","text":"","title":"wifi: Wi-Fi credentials, static IP, and fallback"},{"location":"phb-pro/#ota-ota-settings-port-auth","text":"","title":"ota: OTA settings (port, auth)"},{"location":"phb-pro/#web-web-interface-httplocal","text":"","title":"web: Web interface (http://.local)"},{"location":"phb-pro/#logging-usbuart-logging-config-level-baud","text":"","title":"logging: USB/UART logging config (level, baud)"},{"location":"phb-pro/#watchdog-system-reliability-watchdog-component","text":"","title":"watchdog: System reliability watchdog component"},{"location":"phb-pro/#-_7","text":"packages: esp32s3: !include PROJECT_ROOT /common/ PLATFORM .yaml wifi: !include PROJECT_ROOT /common/wifi.yaml ota: !include PROJECT_ROOT /common/ota.yaml web: !include PROJECT_ROOT /common/web_server.yaml logging: !include PROJECT_ROOT /common/logging.yaml watchdog: !include PROJECT_ROOT /common/watchdog.yaml","title":"------------------------------------------------------------------------------"},{"location":"phb-pro/#-_8","text":"","title":"------------------------------------------------------------------------------"},{"location":"phb-pro/#esphome-specific-metadata-and-on_boot-logic","text":"","title":"ESPHome-specific metadata and on_boot logic"},{"location":"phb-pro/#-sets-node-name-and-friendly-name","text":"","title":"- Sets node name and friendly name"},{"location":"phb-pro/#-publishes-firmware-version-to-home-assistant-on-boot","text":"","title":"- Publishes firmware version to Home Assistant on boot"},{"location":"phb-pro/#-parameters_2","text":"","title":"- Parameters:"},{"location":"phb-pro/#name-node-name","text":"","title":"name: Node name"},{"location":"phb-pro/#friendly_name-human-readable-name","text":"","title":"friendly_name: Human-readable name"},{"location":"phb-pro/#on_boot-actions-to-perform-on-boot","text":"","title":"on_boot: Actions to perform on boot"},{"location":"phb-pro/#-_9","text":"esphome: name: NODE_NAME friendly_name: FRIENDLY_NAME on_boot: priority: -100 then: - text_sensor.template.publish: id: firmware_version state: version # Publishes version string to Home Assistant on boot","title":"------------------------------------------------------------------------------"},{"location":"phb-pro/#-_10","text":"","title":"------------------------------------------------------------------------------"},{"location":"phb-pro/#template-sensor-exposing-firmware-version-as-home-assistant-text_sensor","text":"","title":"Template sensor exposing firmware version as Home Assistant text_sensor"},{"location":"phb-pro/#-publishes-the-firmware-version-string-to-home-assistant","text":"","title":"- Publishes the firmware version string to Home Assistant"},{"location":"phb-pro/#-parameters_3","text":"","title":"- Parameters:"},{"location":"phb-pro/#name-sensor-name","text":"","title":"name: Sensor name"},{"location":"phb-pro/#id-sensor-id","text":"","title":"id: Sensor ID"},{"location":"phb-pro/#icon-home-assistant-icon","text":"","title":"icon: Home Assistant icon"},{"location":"phb-pro/#update_interval-update-frequency","text":"","title":"update_interval: Update frequency"},{"location":"phb-pro/#lambda-lambda-function-for-value","text":"","title":"lambda: Lambda function for value"},{"location":"phb-pro/#-_11","text":"text_sensor: - platform: template name: \"Firmware Version\" # User-visible sensor name in HA id: firmware_version icon: \"mdi:tag\" update_interval: never # Static value set only on boot lambda: |- return {\" VERSION \"};","title":"------------------------------------------------------------------------------"},{"location":"phb-pro/#-_12","text":"","title":"------------------------------------------------------------------------------"},{"location":"phb-pro/#uptime-and-flow-rate-sensors-hall-effect-pulse-counter","text":"","title":"Uptime and flow rate sensors (hall-effect pulse counter)"},{"location":"phb-pro/#-uptime-sensor-seconds-since-boot","text":"","title":"- Uptime sensor: seconds since boot"},{"location":"phb-pro/#-flow-rate-sensor-hall-effect-pulse-counter-configurable-input-pin","text":"","title":"- Flow rate sensor: hall-effect pulse counter, configurable input pin"},{"location":"phb-pro/#-calibration-factor-converts-pulses-to-lmin","text":"","title":"- Calibration factor converts pulses to L/min"},{"location":"phb-pro/#-parameters_4","text":"","title":"- Parameters:"},{"location":"phb-pro/#platform-sensor-platform-uptime-pulse_counter","text":"","title":"platform: Sensor platform (uptime, pulse_counter)"},{"location":"phb-pro/#pin-input-pin-for-pulse-counter","text":"","title":"pin: Input pin for pulse counter"},{"location":"phb-pro/#name-sensor-name_1","text":"","title":"name: Sensor name"},{"location":"phb-pro/#id-sensor-id_1","text":"","title":"id: Sensor ID"},{"location":"phb-pro/#update_interval-update-frequency_1","text":"","title":"update_interval: Update frequency"},{"location":"phb-pro/#count_mode-pulse-counting-mode","text":"","title":"count_mode: Pulse counting mode"},{"location":"phb-pro/#internal_filter-filter-for-pulse-input","text":"","title":"internal_filter: Filter for pulse input"},{"location":"phb-pro/#unit_of_measurement-measurement-units","text":"","title":"unit_of_measurement: Measurement units"},{"location":"phb-pro/#accuracy_decimals-number-of-decimals","text":"","title":"accuracy_decimals: Number of decimals"},{"location":"phb-pro/#filters-calibration-factor","text":"","title":"filters: Calibration factor"},{"location":"phb-pro/#-_13","text":"sensor: - platform: uptime name: \"Uptime\" # Uptime in seconds since boot id: uptime_sensor","title":"------------------------------------------------------------------------------"},{"location":"phb-std-hardware/","text":"PumpHouseBoss Pro - Hardware Guide \u00b6 Pinout Map: ESP32 (30 Pin Package, Top View'') \u00b6 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 BTN_RESET [ EN] \u2500\u2524 01 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510 30 \u251c\u2500 [NC ] GPIO23 NC GPIO36 [ NC] \u2500\u2524 02 \u2502 \u2502 29 \u251c\u2500 [OUT ] GPIO22 DISP_SCL BTN_CTRL GPIO39 [ IN] \u2500\u2524 03 \u2502 \u2502 28 \u251c\u2500 [-----] GPIO01 NC LED_WHITE GPIO34 [ IN] \u2500\u2524 04 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518 27 \u251c\u2500 [-----] GPIO03 NC LED_GREEN GPIO35 [ IN] \u2500\u2524 05 26 \u251c\u2500 [INOUT] GPIO21 DISP_SDA LED_BLUE GPIO32 [ OUT] \u2500\u2524 06 25 \u251c\u2500 [NC ] GPIO19 NC LED_RED GPIO33 [ OUT] \u2500\u2524 07 24 \u251c\u2500 [NC ] GPIO18 NC NC GPIO25 [ OUT] \u2500\u2524 08 ESP-32 23 \u251c\u2500 [XXX ] GPIO05 NC NC GPIO26 [ NC] \u2500\u2524 09 22 \u251c\u2500 [NC ] GPIO17 NC NC GPIO27 [ NC] \u2500\u2524 10 21 \u251c\u2500 [OUT ] GPIO16 MMU0_CTRL NC GPIO14 [ NC] \u2500\u2524 11 20 \u251c\u2500 [PWMIN] GPIO04 MMU0_SENS NC GPIO12 [-----] \u2500\u2524 12 19 \u251c\u2500 [-----] GPIO02 NC NC GPIO13 [ NC] \u2500\u2524 13 18 \u251c\u2500 [-----] GPIO15 NC GND [ GND] \u2500\u2524 14 17 \u251c\u2500 [GND ] GND VIN [5V_IN] \u2500\u2524 15 16 \u251c\u2500 [NC ] NC \u2514\u2500\u2500\u2500\u2500\u2500\u2510USB\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2518 Notes: \u00b6 Power: supply 5v to VIN (on-board regulator) GND: tie pins 14 and 17 low BTN_RESET: active low; button press pulls to GND for system reset","title":"Hardware"},{"location":"phb-std-hardware/#pumphouseboss-pro-hardware-guide","text":"","title":"PumpHouseBoss Pro - Hardware Guide"},{"location":"phb-std-hardware/#pinout-map-esp32-30-pin-package-top-view","text":"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 BTN_RESET [ EN] \u2500\u2524 01 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510 30 \u251c\u2500 [NC ] GPIO23 NC GPIO36 [ NC] \u2500\u2524 02 \u2502 \u2502 29 \u251c\u2500 [OUT ] GPIO22 DISP_SCL BTN_CTRL GPIO39 [ IN] \u2500\u2524 03 \u2502 \u2502 28 \u251c\u2500 [-----] GPIO01 NC LED_WHITE GPIO34 [ IN] \u2500\u2524 04 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2518 27 \u251c\u2500 [-----] GPIO03 NC LED_GREEN GPIO35 [ IN] \u2500\u2524 05 26 \u251c\u2500 [INOUT] GPIO21 DISP_SDA LED_BLUE GPIO32 [ OUT] \u2500\u2524 06 25 \u251c\u2500 [NC ] GPIO19 NC LED_RED GPIO33 [ OUT] \u2500\u2524 07 24 \u251c\u2500 [NC ] GPIO18 NC NC GPIO25 [ OUT] \u2500\u2524 08 ESP-32 23 \u251c\u2500 [XXX ] GPIO05 NC NC GPIO26 [ NC] \u2500\u2524 09 22 \u251c\u2500 [NC ] GPIO17 NC NC GPIO27 [ NC] \u2500\u2524 10 21 \u251c\u2500 [OUT ] GPIO16 MMU0_CTRL NC GPIO14 [ NC] \u2500\u2524 11 20 \u251c\u2500 [PWMIN] GPIO04 MMU0_SENS NC GPIO12 [-----] \u2500\u2524 12 19 \u251c\u2500 [-----] GPIO02 NC NC GPIO13 [ NC] \u2500\u2524 13 18 \u251c\u2500 [-----] GPIO15 NC GND [ GND] \u2500\u2524 14 17 \u251c\u2500 [GND ] GND VIN [5V_IN] \u2500\u2524 15 16 \u251c\u2500 [NC ] NC \u2514\u2500\u2500\u2500\u2500\u2500\u2510USB\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2518","title":"Pinout Map: ESP32 (30 Pin Package, Top View'')"},{"location":"phb-std-hardware/#notes","text":"Power: supply 5v to VIN (on-board regulator) GND: tie pins 14 and 17 low BTN_RESET: active low; button press pulls to GND for system reset","title":"Notes:"},{"location":"phb-std-overview/","text":"PumpHouseBoss Standard - Hardware Guide \u00b6 Description \u00b6 PumpHouseBoss Standard is a Water Distribution System Monitor and Controller. Features \u00b6 Ingress and egress flow monitoring, metering Over/under flow-rate detection, alerts and alarms Automated solenoid control for emergency water-shutoff or water-flow management/control Manual emergency override to shut-off water-flow 4 line LCD (lcd_pcf8574 interface) Historical flow-rate/usage graphing Home Assistant integration via ESPHome Supports 1 MMU (flow-sensor + solenoid) to monitor and control a single water line Controls \u00b6 CONTROL INPUT FUNCTION BTN_CTRL hold 3s toggle MMU manual override BTN_RESET press/release system reset Indications \u00b6 LED ACTIVITY INDICATION LED_WHITE solid normal operation slow flash system initialization rapid flash system failure off no power LED_GREEN off WiFi disconnected slow flash WiFi connecting rapid flash WiFi initialization pending solid WiFi connected LED_BLUE off Home Assistant disconnected slow flash Home Assistant connecting rapid flash Home Assistant initialization pending solid Home Assistant connected LED_RED off MMU open (normal operation) slow flash MMU in manual shut-off state rapid flash MMU in automatic shut-off state","title":"Overview"},{"location":"phb-std-overview/#pumphouseboss-standard-hardware-guide","text":"","title":"PumpHouseBoss Standard - Hardware Guide"},{"location":"phb-std-overview/#description","text":"PumpHouseBoss Standard is a Water Distribution System Monitor and Controller.","title":"Description"},{"location":"phb-std-overview/#features","text":"Ingress and egress flow monitoring, metering Over/under flow-rate detection, alerts and alarms Automated solenoid control for emergency water-shutoff or water-flow management/control Manual emergency override to shut-off water-flow 4 line LCD (lcd_pcf8574 interface) Historical flow-rate/usage graphing Home Assistant integration via ESPHome Supports 1 MMU (flow-sensor + solenoid) to monitor and control a single water line","title":"Features"},{"location":"phb-std-overview/#controls","text":"CONTROL INPUT FUNCTION BTN_CTRL hold 3s toggle MMU manual override BTN_RESET press/release system reset","title":"Controls"},{"location":"phb-std-overview/#indications","text":"LED ACTIVITY INDICATION LED_WHITE solid normal operation slow flash system initialization rapid flash system failure off no power LED_GREEN off WiFi disconnected slow flash WiFi connecting rapid flash WiFi initialization pending solid WiFi connected LED_BLUE off Home Assistant disconnected slow flash Home Assistant connecting rapid flash Home Assistant initialization pending solid Home Assistant connected LED_RED off MMU open (normal operation) slow flash MMU in manual shut-off state rapid flash MMU in automatic shut-off state","title":"Indications"},{"location":"phb-std/","text":"Component: phb-std \u00b6 Source: /cygdrive/c/cygwin64/home/rhendel/git/PumpHouseBoss/variants/phb-std/phb-std.yaml \u00b6 Generated: Sun, Jul 27, 2025 11:33:47 PM \u00b6 ------------------------------------------------------------------------------ \u00b6 File: phb-std.yaml \u00b6 File Type: ESPHome YAML Main \u00b6 Purpose: PumpHouseBoss Standard Variant Main \u00b6 Version: 0.7.0 \u00b6 Date: 2025-07-24 \u00b6 Author: Roland Tembo Hendel rhendel@nexuslogic.com \u00b6 \u00b6 Description: PumpHouseBoss Standard Variant is a Water Distribution System \u00b6 Monitor and controller built on the ESP32 platform. \u00b6 \u00b6 Features: - Ingress and egress flow monitoring, metering \u00b6 - Over/under flow-rate detection, alerts and alarms \u00b6 - Automated solenoid control for emergency water-shutoff or \u00b6 water-flow management/control \u00b6 - Manual emergency override to shut-off water-flow \u00b6 - 4 line LCD (lcd_pcf8574 interface) \u00b6 - Historical flow-rate/usage graphing \u00b6 - Home Assistant integration via ESPHome \u00b6 - Supports up to 5 MMUs \u00b6 \u00b6 License: GNU General Public License v3.0 \u00b6 SPDX-License-Identifier: GPL-3.0-or-later \u00b6 Copyright: (c) 2025 Roland Tembo Hendel \u00b6 This program is free software: you can redistribute it and/or \u00b6 modify it under the terms of the GNU General Public License. \u00b6 \u00b6 Note: Co-developed with GitHub Copilot by OpenAI. \u00b6 ------------------------------------------------------------------------------ \u00b6 ------------------------------------------------------------------------------ \u00b6 YAML linter configuration \u00b6 - Disables quoted-strings rule for improved readability \u00b6 ------------------------------------------------------------------------------ \u00b6 yamllint disable rule:quoted-strings \u00b6 ------------------------------------------------------------------------------ \u00b6 Node identity, version, and hardware pin assignments \u00b6 - Provides substitutions for node name, friendly name, version, and key pins \u00b6 - Used throughout the configuration for maintainability \u00b6 - Parameters: \u00b6 node_name: Node ID used in ESPHome and logs \u00b6 friendly_name: Human-readable name for dashboards \u00b6 version: Firmware version tag injected into logs and sensors \u00b6 flow_sensor_pin: Primary flow sensor pulse counter input \u00b6 test_output_pin: GPIO test and verification pin \u00b6 watchdog_timeout: Hardware watchdog timeout period \u00b6 watchdog_trigger_pin: External watchdog trigger output \u00b6 watchdog_early_trigger: Early trigger before timeout \u00b6 ------------------------------------------------------------------------------ \u00b6 substitutions: chip_set: PLATFORM node_name: NODE_NAME friendly_name: FRIENDLY_NAME version: VERSION watchdog_timeout: \"30s\" watchdog_trigger_pin: \"GPIO07\" watchdog_early_trigger: \"25s\" ------------------------------------------------------------------------------ \u00b6 Common package includes for modular configuration \u00b6 - Modularizes board, display, network, OTA, logging, and watchdog config \u00b6 - Parameters: \u00b6 esp32: ESP32 board and framework config \u00b6 display: Display configuration (e.g., ST7789V panel) \u00b6 wifi: Wi-Fi credentials, static IP, and fallback \u00b6 ota: OTA settings (port, auth) \u00b6 web: Web interface (http:// .local) \u00b6 logging: USB/UART logging config (level, baud) \u00b6 watchdog: System reliability watchdog component \u00b6 ------------------------------------------------------------------------------ \u00b6 packages: esp32: !include PROJECT_ROOT /common/ PLATFORM .yaml wifi: !include PROJECT_ROOT /common/wifi.yaml ota: !include PROJECT_ROOT /common/ota.yaml web: !include PROJECT_ROOT /common/web_server.yaml logging: !include PROJECT_ROOT /common/logging.yaml watchdog: !include PROJECT_ROOT /common/watchdog.yaml ------------------------------------------------------------------------------ \u00b6 ESPHome-specific metadata and on_boot logic \u00b6 - Sets node name and friendly name \u00b6 - Publishes firmware version to Home Assistant on boot \u00b6 - Parameters: \u00b6 name: Node name \u00b6 friendly_name: Human-readable name \u00b6 on_boot: Actions to perform on boot \u00b6 ------------------------------------------------------------------------------ \u00b6 esphome: name: NODE_NAME friendly_name: FRIENDLY_NAME on_boot: priority: -100 then: - text_sensor.template.publish: id: firmware_version state: version # Publishes version string to Home Assistant on boot ------------------------------------------------------------------------------ \u00b6 Template sensor exposing firmware version as Home Assistant text_sensor \u00b6 - Publishes the firmware version string to Home Assistant \u00b6 - Parameters: \u00b6 name: Sensor name \u00b6 id: Sensor ID \u00b6 icon: Home Assistant icon \u00b6 update_interval: Update frequency \u00b6 lambda: Lambda function for value \u00b6 ------------------------------------------------------------------------------ \u00b6 text_sensor: - platform: template name: \"Firmware Version\" # User-visible sensor name in HA id: firmware_version icon: \"mdi:tag\" update_interval: never # Static value set only on boot lambda: |- return {\" VERSION \"}; ------------------------------------------------------------------------------ \u00b6 Uptime and flow rate sensors (hall-effect pulse counter) \u00b6 - Uptime sensor: seconds since boot \u00b6 - Flow rate sensor: hall-effect pulse counter, configurable input pin \u00b6 - Calibration factor converts pulses to L/min \u00b6 - Parameters: \u00b6 platform: Sensor platform (uptime, pulse_counter) \u00b6 pin: Input pin for pulse counter \u00b6 name: Sensor name \u00b6 id: Sensor ID \u00b6 update_interval: Update frequency \u00b6 count_mode: Pulse counting mode \u00b6 internal_filter: Filter for pulse input \u00b6 unit_of_measurement: Measurement units \u00b6 accuracy_decimals: Number of decimals \u00b6 filters: Calibration factor \u00b6 ------------------------------------------------------------------------------ \u00b6 sensor: - platform: uptime name: \"Uptime\" # Uptime in seconds since boot id: uptime_sensor","title":"PHB Std"},{"location":"phb-std/#component-phb-std","text":"","title":"Component: phb-std"},{"location":"phb-std/#source-cygdriveccygwin64homerhendelgitpumphousebossvariantsphb-stdphb-stdyaml","text":"","title":"Source: /cygdrive/c/cygwin64/home/rhendel/git/PumpHouseBoss/variants/phb-std/phb-std.yaml"},{"location":"phb-std/#generated-sun-jul-27-2025-113347-pm","text":"","title":"Generated: Sun, Jul 27, 2025 11:33:47 PM"},{"location":"phb-std/#-","text":"","title":"------------------------------------------------------------------------------"},{"location":"phb-std/#file-phb-stdyaml","text":"","title":"File: phb-std.yaml"},{"location":"phb-std/#file-type-esphome-yaml-main","text":"","title":"File Type: ESPHome YAML Main"},{"location":"phb-std/#purpose-pumphouseboss-standard-variant-main","text":"","title":"Purpose: PumpHouseBoss Standard Variant Main"},{"location":"phb-std/#version-070","text":"","title":"Version: 0.7.0"},{"location":"phb-std/#date-2025-07-24","text":"","title":"Date: 2025-07-24"},{"location":"phb-std/#author-roland-tembo-hendel-rhendelnexuslogiccom","text":"","title":"Author: Roland Tembo Hendel &#114;&#104;&#101;&#110;&#100;&#101;&#108;&#64;&#110;&#101;&#120;&#117;&#115;&#108;&#111;&#103;&#105;&#99;&#46;&#99;&#111;&#109;"},{"location":"phb-std/#_1","text":"","title":""},{"location":"phb-std/#description-pumphouseboss-standard-variant-is-a-water-distribution-system","text":"","title":"Description: PumpHouseBoss Standard Variant is a Water Distribution System"},{"location":"phb-std/#monitor-and-controller-built-on-the-esp32-platform","text":"","title":"Monitor and controller built on the ESP32 platform."},{"location":"phb-std/#_2","text":"","title":""},{"location":"phb-std/#features-ingress-and-egress-flow-monitoring-metering","text":"","title":"Features: - Ingress and egress flow monitoring, metering"},{"location":"phb-std/#-overunder-flow-rate-detection-alerts-and-alarms","text":"","title":"- Over/under flow-rate detection, alerts and alarms"},{"location":"phb-std/#-automated-solenoid-control-for-emergency-water-shutoff-or","text":"","title":"- Automated solenoid control for emergency water-shutoff or"},{"location":"phb-std/#water-flow-managementcontrol","text":"","title":"water-flow management/control"},{"location":"phb-std/#-manual-emergency-override-to-shut-off-water-flow","text":"","title":"- Manual emergency override to shut-off water-flow"},{"location":"phb-std/#-4-line-lcd-lcd_pcf8574-interface","text":"","title":"- 4 line LCD (lcd_pcf8574 interface)"},{"location":"phb-std/#-historical-flow-rateusage-graphing","text":"","title":"- Historical flow-rate/usage graphing"},{"location":"phb-std/#-home-assistant-integration-via-esphome","text":"","title":"- Home Assistant integration via ESPHome"},{"location":"phb-std/#-supports-up-to-5-mmus","text":"","title":"- Supports up to 5 MMUs"},{"location":"phb-std/#_3","text":"","title":""},{"location":"phb-std/#license-gnu-general-public-license-v30","text":"","title":"License: GNU General Public License v3.0"},{"location":"phb-std/#spdx-license-identifier-gpl-30-or-later","text":"","title":"SPDX-License-Identifier: GPL-3.0-or-later"},{"location":"phb-std/#copyright-c-2025-roland-tembo-hendel","text":"","title":"Copyright: (c) 2025 Roland Tembo Hendel"},{"location":"phb-std/#this-program-is-free-software-you-can-redistribute-it-andor","text":"","title":"This program is free software: you can redistribute it and/or"},{"location":"phb-std/#modify-it-under-the-terms-of-the-gnu-general-public-license","text":"","title":"modify it under the terms of the GNU General Public License."},{"location":"phb-std/#_4","text":"","title":""},{"location":"phb-std/#note-co-developed-with-github-copilot-by-openai","text":"","title":"Note: Co-developed with GitHub Copilot by OpenAI."},{"location":"phb-std/#-_1","text":"","title":"------------------------------------------------------------------------------"},{"location":"phb-std/#-_2","text":"","title":"------------------------------------------------------------------------------"},{"location":"phb-std/#yaml-linter-configuration","text":"","title":"YAML linter configuration"},{"location":"phb-std/#-disables-quoted-strings-rule-for-improved-readability","text":"","title":"- Disables quoted-strings rule for improved readability"},{"location":"phb-std/#-_3","text":"","title":"------------------------------------------------------------------------------"},{"location":"phb-std/#yamllint-disable-rulequoted-strings","text":"","title":"yamllint disable rule:quoted-strings"},{"location":"phb-std/#-_4","text":"","title":"------------------------------------------------------------------------------"},{"location":"phb-std/#node-identity-version-and-hardware-pin-assignments","text":"","title":"Node identity, version, and hardware pin assignments"},{"location":"phb-std/#-provides-substitutions-for-node-name-friendly-name-version-and-key-pins","text":"","title":"- Provides substitutions for node name, friendly name, version, and key pins"},{"location":"phb-std/#-used-throughout-the-configuration-for-maintainability","text":"","title":"- Used throughout the configuration for maintainability"},{"location":"phb-std/#-parameters","text":"","title":"- Parameters:"},{"location":"phb-std/#node_name-node-id-used-in-esphome-and-logs","text":"","title":"node_name: Node ID used in ESPHome and logs"},{"location":"phb-std/#friendly_name-human-readable-name-for-dashboards","text":"","title":"friendly_name: Human-readable name for dashboards"},{"location":"phb-std/#version-firmware-version-tag-injected-into-logs-and-sensors","text":"","title":"version: Firmware version tag injected into logs and sensors"},{"location":"phb-std/#flow_sensor_pin-primary-flow-sensor-pulse-counter-input","text":"","title":"flow_sensor_pin: Primary flow sensor pulse counter input"},{"location":"phb-std/#test_output_pin-gpio-test-and-verification-pin","text":"","title":"test_output_pin: GPIO test and verification pin"},{"location":"phb-std/#watchdog_timeout-hardware-watchdog-timeout-period","text":"","title":"watchdog_timeout: Hardware watchdog timeout period"},{"location":"phb-std/#watchdog_trigger_pin-external-watchdog-trigger-output","text":"","title":"watchdog_trigger_pin: External watchdog trigger output"},{"location":"phb-std/#watchdog_early_trigger-early-trigger-before-timeout","text":"","title":"watchdog_early_trigger: Early trigger before timeout"},{"location":"phb-std/#-_5","text":"substitutions: chip_set: PLATFORM node_name: NODE_NAME friendly_name: FRIENDLY_NAME version: VERSION watchdog_timeout: \"30s\" watchdog_trigger_pin: \"GPIO07\" watchdog_early_trigger: \"25s\"","title":"------------------------------------------------------------------------------"},{"location":"phb-std/#-_6","text":"","title":"------------------------------------------------------------------------------"},{"location":"phb-std/#common-package-includes-for-modular-configuration","text":"","title":"Common package includes for modular configuration"},{"location":"phb-std/#-modularizes-board-display-network-ota-logging-and-watchdog-config","text":"","title":"- Modularizes board, display, network, OTA, logging, and watchdog config"},{"location":"phb-std/#-parameters_1","text":"","title":"- Parameters:"},{"location":"phb-std/#esp32-esp32-board-and-framework-config","text":"","title":"esp32: ESP32 board and framework config"},{"location":"phb-std/#display-display-configuration-eg-st7789v-panel","text":"","title":"display: Display configuration (e.g., ST7789V panel)"},{"location":"phb-std/#wifi-wi-fi-credentials-static-ip-and-fallback","text":"","title":"wifi: Wi-Fi credentials, static IP, and fallback"},{"location":"phb-std/#ota-ota-settings-port-auth","text":"","title":"ota: OTA settings (port, auth)"},{"location":"phb-std/#web-web-interface-httplocal","text":"","title":"web: Web interface (http://.local)"},{"location":"phb-std/#logging-usbuart-logging-config-level-baud","text":"","title":"logging: USB/UART logging config (level, baud)"},{"location":"phb-std/#watchdog-system-reliability-watchdog-component","text":"","title":"watchdog: System reliability watchdog component"},{"location":"phb-std/#-_7","text":"packages: esp32: !include PROJECT_ROOT /common/ PLATFORM .yaml wifi: !include PROJECT_ROOT /common/wifi.yaml ota: !include PROJECT_ROOT /common/ota.yaml web: !include PROJECT_ROOT /common/web_server.yaml logging: !include PROJECT_ROOT /common/logging.yaml watchdog: !include PROJECT_ROOT /common/watchdog.yaml","title":"------------------------------------------------------------------------------"},{"location":"phb-std/#-_8","text":"","title":"------------------------------------------------------------------------------"},{"location":"phb-std/#esphome-specific-metadata-and-on_boot-logic","text":"","title":"ESPHome-specific metadata and on_boot logic"},{"location":"phb-std/#-sets-node-name-and-friendly-name","text":"","title":"- Sets node name and friendly name"},{"location":"phb-std/#-publishes-firmware-version-to-home-assistant-on-boot","text":"","title":"- Publishes firmware version to Home Assistant on boot"},{"location":"phb-std/#-parameters_2","text":"","title":"- Parameters:"},{"location":"phb-std/#name-node-name","text":"","title":"name: Node name"},{"location":"phb-std/#friendly_name-human-readable-name","text":"","title":"friendly_name: Human-readable name"},{"location":"phb-std/#on_boot-actions-to-perform-on-boot","text":"","title":"on_boot: Actions to perform on boot"},{"location":"phb-std/#-_9","text":"esphome: name: NODE_NAME friendly_name: FRIENDLY_NAME on_boot: priority: -100 then: - text_sensor.template.publish: id: firmware_version state: version # Publishes version string to Home Assistant on boot","title":"------------------------------------------------------------------------------"},{"location":"phb-std/#-_10","text":"","title":"------------------------------------------------------------------------------"},{"location":"phb-std/#template-sensor-exposing-firmware-version-as-home-assistant-text_sensor","text":"","title":"Template sensor exposing firmware version as Home Assistant text_sensor"},{"location":"phb-std/#-publishes-the-firmware-version-string-to-home-assistant","text":"","title":"- Publishes the firmware version string to Home Assistant"},{"location":"phb-std/#-parameters_3","text":"","title":"- Parameters:"},{"location":"phb-std/#name-sensor-name","text":"","title":"name: Sensor name"},{"location":"phb-std/#id-sensor-id","text":"","title":"id: Sensor ID"},{"location":"phb-std/#icon-home-assistant-icon","text":"","title":"icon: Home Assistant icon"},{"location":"phb-std/#update_interval-update-frequency","text":"","title":"update_interval: Update frequency"},{"location":"phb-std/#lambda-lambda-function-for-value","text":"","title":"lambda: Lambda function for value"},{"location":"phb-std/#-_11","text":"text_sensor: - platform: template name: \"Firmware Version\" # User-visible sensor name in HA id: firmware_version icon: \"mdi:tag\" update_interval: never # Static value set only on boot lambda: |- return {\" VERSION \"};","title":"------------------------------------------------------------------------------"},{"location":"phb-std/#-_12","text":"","title":"------------------------------------------------------------------------------"},{"location":"phb-std/#uptime-and-flow-rate-sensors-hall-effect-pulse-counter","text":"","title":"Uptime and flow rate sensors (hall-effect pulse counter)"},{"location":"phb-std/#-uptime-sensor-seconds-since-boot","text":"","title":"- Uptime sensor: seconds since boot"},{"location":"phb-std/#-flow-rate-sensor-hall-effect-pulse-counter-configurable-input-pin","text":"","title":"- Flow rate sensor: hall-effect pulse counter, configurable input pin"},{"location":"phb-std/#-calibration-factor-converts-pulses-to-lmin","text":"","title":"- Calibration factor converts pulses to L/min"},{"location":"phb-std/#-parameters_4","text":"","title":"- Parameters:"},{"location":"phb-std/#platform-sensor-platform-uptime-pulse_counter","text":"","title":"platform: Sensor platform (uptime, pulse_counter)"},{"location":"phb-std/#pin-input-pin-for-pulse-counter","text":"","title":"pin: Input pin for pulse counter"},{"location":"phb-std/#name-sensor-name_1","text":"","title":"name: Sensor name"},{"location":"phb-std/#id-sensor-id_1","text":"","title":"id: Sensor ID"},{"location":"phb-std/#update_interval-update-frequency_1","text":"","title":"update_interval: Update frequency"},{"location":"phb-std/#count_mode-pulse-counting-mode","text":"","title":"count_mode: Pulse counting mode"},{"location":"phb-std/#internal_filter-filter-for-pulse-input","text":"","title":"internal_filter: Filter for pulse input"},{"location":"phb-std/#unit_of_measurement-measurement-units","text":"","title":"unit_of_measurement: Measurement units"},{"location":"phb-std/#accuracy_decimals-number-of-decimals","text":"","title":"accuracy_decimals: Number of decimals"},{"location":"phb-std/#filters-calibration-factor","text":"","title":"filters: Calibration factor"},{"location":"phb-std/#-_13","text":"sensor: - platform: uptime name: \"Uptime\" # Uptime in seconds since boot id: uptime_sensor","title":"------------------------------------------------------------------------------"},{"location":"secrets.template/","text":"Component: secrets.template \u00b6 Source: /cygdrive/c/cygwin64/home/rhendel/git/PumpHouseBoss/common/secrets.template.yaml \u00b6 Generated: Sun, Jul 27, 2025 11:33:46 PM \u00b6 ------------------------------------------------------------------------------ \u00b6 File: secrets.template.yaml \u00b6 File Type: ESPHome YAML Include \u00b6 Purpose: Template for ESPHome secrets file (credentials, passwords) \u00b6 Version: 0.7.0 \u00b6 Date: 2025-07-24 \u00b6 Author: Roland Tembo Hendel rhendel@nexuslogic.com \u00b6 \u00b6 Description: Copy this file to secrets.yaml and fill in your actual values. \u00b6 This template is safe to check into version control. \u00b6 \u00b6 License: GNU General Public License v3.0 \u00b6 SPDX-License-Identifier: GPL-3.0-or-later \u00b6 Copyright: (c) 2025 Roland Tembo Hendel \u00b6 This program is free software: you can redistribute it and/or \u00b6 modify it under the terms of the GNU General Public License. \u00b6 ------------------------------------------------------------------------------ \u00b6 ---------------------------------------------------------------------------- \u00b6 YAML linter configuration \u00b6 - Disables quoted-strings rule for improved readability \u00b6 ---------------------------------------------------------------------------- \u00b6 yamllint disable rule:quoted-strings \u00b6 ---------------------------------------------------------------------------- \u00b6 Wi-Fi and service credentials \u00b6 - Template values for secrets.yaml (do not use real credentials here) \u00b6 - Parameters: \u00b6 wifi_ssid: Wi-Fi network name \u00b6 wifi_password: Wi-Fi network password \u00b6 fallback_password: Fallback AP password \u00b6 ota_password: OTA update password \u00b6 web_user: Web Server username \u00b6 web_password: Web Server password \u00b6 ---------------------------------------------------------------------------- \u00b6 wifi_ssid: \"YOUR_WIFI_SSID\" # Wi-Fi network name wifi_password: \"YOUR_WIFI_PASSWORD\" # Wi-Fi network password fallback_password: \"YOUR_FALLBACK_PASSWORD\" # Fallback AP password ota_password: \"YOUR_OTA_PASSWORD\" # OTA update password web_user: \"YOUR_WEB_USER\" # Web Server username web_password: \"YOUR_WEB_PASSWORD\" # Web Server password","title":"Secrets Template"},{"location":"secrets.template/#component-secretstemplate","text":"","title":"Component: secrets.template"},{"location":"secrets.template/#source-cygdriveccygwin64homerhendelgitpumphousebosscommonsecretstemplateyaml","text":"","title":"Source: /cygdrive/c/cygwin64/home/rhendel/git/PumpHouseBoss/common/secrets.template.yaml"},{"location":"secrets.template/#generated-sun-jul-27-2025-113346-pm","text":"","title":"Generated: Sun, Jul 27, 2025 11:33:46 PM"},{"location":"secrets.template/#-","text":"","title":"------------------------------------------------------------------------------"},{"location":"secrets.template/#file-secretstemplateyaml","text":"","title":"File: secrets.template.yaml"},{"location":"secrets.template/#file-type-esphome-yaml-include","text":"","title":"File Type: ESPHome YAML Include"},{"location":"secrets.template/#purpose-template-for-esphome-secrets-file-credentials-passwords","text":"","title":"Purpose: Template for ESPHome secrets file (credentials, passwords)"},{"location":"secrets.template/#version-070","text":"","title":"Version: 0.7.0"},{"location":"secrets.template/#date-2025-07-24","text":"","title":"Date: 2025-07-24"},{"location":"secrets.template/#author-roland-tembo-hendel-rhendelnexuslogiccom","text":"","title":"Author: Roland Tembo Hendel &#114;&#104;&#101;&#110;&#100;&#101;&#108;&#64;&#110;&#101;&#120;&#117;&#115;&#108;&#111;&#103;&#105;&#99;&#46;&#99;&#111;&#109;"},{"location":"secrets.template/#_1","text":"","title":""},{"location":"secrets.template/#description-copy-this-file-to-secretsyaml-and-fill-in-your-actual-values","text":"","title":"Description: Copy this file to secrets.yaml and fill in your actual values."},{"location":"secrets.template/#this-template-is-safe-to-check-into-version-control","text":"","title":"This template is safe to check into version control."},{"location":"secrets.template/#_2","text":"","title":""},{"location":"secrets.template/#license-gnu-general-public-license-v30","text":"","title":"License: GNU General Public License v3.0"},{"location":"secrets.template/#spdx-license-identifier-gpl-30-or-later","text":"","title":"SPDX-License-Identifier: GPL-3.0-or-later"},{"location":"secrets.template/#copyright-c-2025-roland-tembo-hendel","text":"","title":"Copyright: (c) 2025 Roland Tembo Hendel"},{"location":"secrets.template/#this-program-is-free-software-you-can-redistribute-it-andor","text":"","title":"This program is free software: you can redistribute it and/or"},{"location":"secrets.template/#modify-it-under-the-terms-of-the-gnu-general-public-license","text":"","title":"modify it under the terms of the GNU General Public License."},{"location":"secrets.template/#-_1","text":"","title":"------------------------------------------------------------------------------"},{"location":"secrets.template/#-_2","text":"","title":"----------------------------------------------------------------------------"},{"location":"secrets.template/#yaml-linter-configuration","text":"","title":"YAML linter configuration"},{"location":"secrets.template/#-disables-quoted-strings-rule-for-improved-readability","text":"","title":"- Disables quoted-strings rule for improved readability"},{"location":"secrets.template/#-_3","text":"","title":"----------------------------------------------------------------------------"},{"location":"secrets.template/#yamllint-disable-rulequoted-strings","text":"","title":"yamllint disable rule:quoted-strings"},{"location":"secrets.template/#-_4","text":"","title":"----------------------------------------------------------------------------"},{"location":"secrets.template/#wi-fi-and-service-credentials","text":"","title":"Wi-Fi and service credentials"},{"location":"secrets.template/#-template-values-for-secretsyaml-do-not-use-real-credentials-here","text":"","title":"- Template values for secrets.yaml (do not use real credentials here)"},{"location":"secrets.template/#-parameters","text":"","title":"- Parameters:"},{"location":"secrets.template/#wifi_ssid-wi-fi-network-name","text":"","title":"wifi_ssid: Wi-Fi network name"},{"location":"secrets.template/#wifi_password-wi-fi-network-password","text":"","title":"wifi_password: Wi-Fi network password"},{"location":"secrets.template/#fallback_password-fallback-ap-password","text":"","title":"fallback_password: Fallback AP password"},{"location":"secrets.template/#ota_password-ota-update-password","text":"","title":"ota_password: OTA update password"},{"location":"secrets.template/#web_user-web-server-username","text":"","title":"web_user: Web Server username"},{"location":"secrets.template/#web_password-web-server-password","text":"","title":"web_password: Web Server password"},{"location":"secrets.template/#-_5","text":"wifi_ssid: \"YOUR_WIFI_SSID\" # Wi-Fi network name wifi_password: \"YOUR_WIFI_PASSWORD\" # Wi-Fi network password fallback_password: \"YOUR_FALLBACK_PASSWORD\" # Fallback AP password ota_password: \"YOUR_OTA_PASSWORD\" # OTA update password web_user: \"YOUR_WEB_USER\" # Web Server username web_password: \"YOUR_WEB_PASSWORD\" # Web Server password","title":"----------------------------------------------------------------------------"},{"location":"watchdog/","text":"Component: watchdog \u00b6 Source: /cygdrive/c/cygwin64/home/rhendel/git/PumpHouseBoss/common/watchdog.yaml \u00b6 Generated: Sun, Jul 27, 2025 11:33:46 PM \u00b6 ------------------------------------------------------------------------------ \u00b6 File: watchdog.yaml \u00b6 File Type: ESPHome YAML Include \u00b6 Purpose: System reliability watchdog component for ESP32 platforms \u00b6 Version: 0.7.0 \u00b6 Date: 2025-07-24 \u00b6 Author: Roland Tembo Hendel rhendel@nexuslogic.com \u00b6 \u00b6 Description: Provides hardware watchdog timer, external watchdog trigger, \u00b6 reset reason monitoring, and system health diagnostics for \u00b6 mission-critical pump house monitoring applications. \u00b6 \u00b6 License: GNU General Public License v3.0 \u00b6 SPDX-License-Identifier: GPL-3.0-or-later \u00b6 Copyright: (c) 2025 Roland Tembo Hendel \u00b6 This program is free software: you can redistribute it and/or \u00b6 modify it under the terms of the GNU General Public License. \u00b6 ------------------------------------------------------------------------------ \u00b6 ------------------------------------------------------------------------------ \u00b6 YAML linter configuration \u00b6 - Disables quoted-strings rule for improved readability \u00b6 - Ensures that string values do not require unnecessary quotes, improving \u00b6 readability and maintainability of the YAML configuration. \u00b6 ------------------------------------------------------------------------------ \u00b6 yamllint disable rule:quoted-strings \u00b6 ------------------------------------------------------------------------------ \u00b6 Boot-time system monitoring initialization \u00b6 - Sets up system monitoring and software watchdog actions to run on boot. \u00b6 - Logs system and reset monitoring status for diagnostics and reliability tracking. \u00b6 - Ensures that monitoring is active as soon as the device starts. \u00b6 ------------------------------------------------------------------------------ \u00b6 esphome: on_boot: priority: 200 # High priority - run early in boot sequence then: - logger.log: level: INFO tag: \"SYSTEM\" format: \"System monitoring initialized - software watchdog active\" - logger.log: level: INFO tag: \"SYSTEM\" format: \"Reset monitoring active - tracking system stability\" ------------------------------------------------------------------------------ \u00b6 Watchdog status and reset reason monitoring \u00b6 - Defines a text sensor for human-readable reset reason tracking. \u00b6 - Uses esp_reset_reason() to determine and expose the last reset cause as a string. \u00b6 - Aids in diagnostics and troubleshooting by making reset causes visible in Home Assistant. \u00b6 - Parameters: \u00b6 name: Sensor name for reset reason \u00b6 id: Sensor ID \u00b6 icon: Icon for Home Assistant \u00b6 update_interval: How often to update the sensor \u00b6 lambda: C++ code to determine the reset reason \u00b6 ------------------------------------------------------------------------------ \u00b6 text_sensor: # brief Human-readable reset reason tracking # details # - Exposes the last reset reason as a readable string # - Uses esp_reset_reason() to determine cause - platform: template name: \"Reset Reason\" # name Sensor name for reset reason id: reset_reason_text # id Sensor ID icon: \"mdi:restart\" update_interval: never # Set once on boot lambda: |- int reason = esp_reset_reason(); switch(reason) { case 1: return {\"Power-on reset\"}; case 3: return {\"Software reset\"}; case 4: return {\"Watchdog reset\"}; case 5: return {\"Deep sleep wake\"}; case 6: return {\"Brownout reset\"}; case 7: return {\"JTAG reset\"}; default: return {\"Unknown reset (\" + to_string(reason) + \")\"}; } ------------------------------------------------------------------------------ \u00b6 Watchdog monitoring sensors \u00b6 - Defines template sensors for reliability and diagnostics: \u00b6 - Watchdog reset counter: Tracks number of watchdog resets since boot. \u00b6 - Last reset code: Exposes the raw reset reason code for advanced troubleshooting. \u00b6 - System health score: Calculates a health score based on uptime and reset frequency. \u00b6 - These sensors provide insight into system stability and help with proactive maintenance. \u00b6 - Parameters (per sensor): \u00b6 name: Sensor name \u00b6 id: Sensor ID \u00b6 unit_of_measurement: Unit for sensor value \u00b6 accuracy_decimals: Number of decimals to report \u00b6 icon: Icon for Home Assistant \u00b6 update_interval: How often to update the sensor \u00b6 lambda: C++ code for sensor value \u00b6 ------------------------------------------------------------------------------ \u00b6 sensor: # Watchdog reset counter for reliability tracking # - Counts watchdog resets since boot - platform: template name: \"Watchdog Resets\" # name Sensor name for reset counter id: watchdog_reset_counter # id Sensor ID unit_of_measurement: \"resets\" accuracy_decimals: 0 icon: \"mdi:counter\" update_interval: 60s # Check once per minute lambda: |- // Count watchdog resets since boot static int reset_count = 0; if (esp_reset_reason() == 4) { reset_count++; } return reset_count; # Raw reset reason code for advanced diagnostics # - Exposes the raw reset reason code for troubleshooting - platform: template name: \"Last Reset Code\" # name Sensor name for raw code id: last_reset_reason_code # id Sensor ID unit_of_measurement: \"\" accuracy_decimals: 0 icon: \"mdi:information\" update_interval: never # Set once on boot lambda: |- return esp_reset_reason(); # System health score based on reset frequency # - Calculates a health score based on uptime and reset frequency - platform: template name: \"System Health Score\" # name Sensor name for health score id: system_health_score # id Sensor ID unit_of_measurement: \"%\" accuracy_decimals: 1 icon: \"mdi:heart-pulse\" update_interval: 300s # Update every 5 minutes lambda: |- // Calculate health score based on uptime and reset frequency float uptime_hours = id(uptime_sensor).state / 3600.0; int reset_count = id(watchdog_reset_counter).state; if (uptime_hours < 1.0) return 100.0; float health = 100.0 - (reset_count * 10.0); if (uptime_hours > 24.0) health += 5.0; return max(0.0f, min(100.0f, health)); ------------------------------------------------------------------------------ \u00b6 Software-controlled system restart for remote troubleshooting \u00b6 - Allows remote restart of the ESP32 via Home Assistant or API \u00b6 - Physical hardware reset available via external button wired to ESP32 EN pin \u00b6 Note: Physical hardware reset available via external button wired to ESP32 EN pin \u00b6 ------------------------------------------------------------------------------ \u00b6 switch: - platform: restart name: \"System Restart\" # name Switch name for restart id: system_restart_switch # id Switch ID icon: \"mdi:restart\"","title":"Watchdog"},{"location":"watchdog/#component-watchdog","text":"","title":"Component: watchdog"},{"location":"watchdog/#source-cygdriveccygwin64homerhendelgitpumphousebosscommonwatchdogyaml","text":"","title":"Source: /cygdrive/c/cygwin64/home/rhendel/git/PumpHouseBoss/common/watchdog.yaml"},{"location":"watchdog/#generated-sun-jul-27-2025-113346-pm","text":"","title":"Generated: Sun, Jul 27, 2025 11:33:46 PM"},{"location":"watchdog/#-","text":"","title":"------------------------------------------------------------------------------"},{"location":"watchdog/#file-watchdogyaml","text":"","title":"File: watchdog.yaml"},{"location":"watchdog/#file-type-esphome-yaml-include","text":"","title":"File Type: ESPHome YAML Include"},{"location":"watchdog/#purpose-system-reliability-watchdog-component-for-esp32-platforms","text":"","title":"Purpose: System reliability watchdog component for ESP32 platforms"},{"location":"watchdog/#version-070","text":"","title":"Version: 0.7.0"},{"location":"watchdog/#date-2025-07-24","text":"","title":"Date: 2025-07-24"},{"location":"watchdog/#author-roland-tembo-hendel-rhendelnexuslogiccom","text":"","title":"Author: Roland Tembo Hendel &#114;&#104;&#101;&#110;&#100;&#101;&#108;&#64;&#110;&#101;&#120;&#117;&#115;&#108;&#111;&#103;&#105;&#99;&#46;&#99;&#111;&#109;"},{"location":"watchdog/#_1","text":"","title":""},{"location":"watchdog/#description-provides-hardware-watchdog-timer-external-watchdog-trigger","text":"","title":"Description: Provides hardware watchdog timer, external watchdog trigger,"},{"location":"watchdog/#reset-reason-monitoring-and-system-health-diagnostics-for","text":"","title":"reset reason monitoring, and system health diagnostics for"},{"location":"watchdog/#mission-critical-pump-house-monitoring-applications","text":"","title":"mission-critical pump house monitoring applications."},{"location":"watchdog/#_2","text":"","title":""},{"location":"watchdog/#license-gnu-general-public-license-v30","text":"","title":"License: GNU General Public License v3.0"},{"location":"watchdog/#spdx-license-identifier-gpl-30-or-later","text":"","title":"SPDX-License-Identifier: GPL-3.0-or-later"},{"location":"watchdog/#copyright-c-2025-roland-tembo-hendel","text":"","title":"Copyright: (c) 2025 Roland Tembo Hendel"},{"location":"watchdog/#this-program-is-free-software-you-can-redistribute-it-andor","text":"","title":"This program is free software: you can redistribute it and/or"},{"location":"watchdog/#modify-it-under-the-terms-of-the-gnu-general-public-license","text":"","title":"modify it under the terms of the GNU General Public License."},{"location":"watchdog/#-_1","text":"","title":"------------------------------------------------------------------------------"},{"location":"watchdog/#-_2","text":"","title":"------------------------------------------------------------------------------"},{"location":"watchdog/#yaml-linter-configuration","text":"","title":"YAML linter configuration"},{"location":"watchdog/#-disables-quoted-strings-rule-for-improved-readability","text":"","title":"- Disables quoted-strings rule for improved readability"},{"location":"watchdog/#-ensures-that-string-values-do-not-require-unnecessary-quotes-improving","text":"","title":"- Ensures that string values do not require unnecessary quotes, improving"},{"location":"watchdog/#readability-and-maintainability-of-the-yaml-configuration","text":"","title":"readability and maintainability of the YAML configuration."},{"location":"watchdog/#-_3","text":"","title":"------------------------------------------------------------------------------"},{"location":"watchdog/#yamllint-disable-rulequoted-strings","text":"","title":"yamllint disable rule:quoted-strings"},{"location":"watchdog/#-_4","text":"","title":"------------------------------------------------------------------------------"},{"location":"watchdog/#boot-time-system-monitoring-initialization","text":"","title":"Boot-time system monitoring initialization"},{"location":"watchdog/#-sets-up-system-monitoring-and-software-watchdog-actions-to-run-on-boot","text":"","title":"- Sets up system monitoring and software watchdog actions to run on boot."},{"location":"watchdog/#-logs-system-and-reset-monitoring-status-for-diagnostics-and-reliability-tracking","text":"","title":"- Logs system and reset monitoring status for diagnostics and reliability tracking."},{"location":"watchdog/#-ensures-that-monitoring-is-active-as-soon-as-the-device-starts","text":"","title":"- Ensures that monitoring is active as soon as the device starts."},{"location":"watchdog/#-_5","text":"esphome: on_boot: priority: 200 # High priority - run early in boot sequence then: - logger.log: level: INFO tag: \"SYSTEM\" format: \"System monitoring initialized - software watchdog active\" - logger.log: level: INFO tag: \"SYSTEM\" format: \"Reset monitoring active - tracking system stability\"","title":"------------------------------------------------------------------------------"},{"location":"watchdog/#-_6","text":"","title":"------------------------------------------------------------------------------"},{"location":"watchdog/#watchdog-status-and-reset-reason-monitoring","text":"","title":"Watchdog status and reset reason monitoring"},{"location":"watchdog/#-defines-a-text-sensor-for-human-readable-reset-reason-tracking","text":"","title":"- Defines a text sensor for human-readable reset reason tracking."},{"location":"watchdog/#-uses-esp_reset_reason-to-determine-and-expose-the-last-reset-cause-as-a-string","text":"","title":"- Uses esp_reset_reason() to determine and expose the last reset cause as a string."},{"location":"watchdog/#-aids-in-diagnostics-and-troubleshooting-by-making-reset-causes-visible-in-home-assistant","text":"","title":"- Aids in diagnostics and troubleshooting by making reset causes visible in Home Assistant."},{"location":"watchdog/#-parameters","text":"","title":"- Parameters:"},{"location":"watchdog/#name-sensor-name-for-reset-reason","text":"","title":"name: Sensor name for reset reason"},{"location":"watchdog/#id-sensor-id","text":"","title":"id: Sensor ID"},{"location":"watchdog/#icon-icon-for-home-assistant","text":"","title":"icon: Icon for Home Assistant"},{"location":"watchdog/#update_interval-how-often-to-update-the-sensor","text":"","title":"update_interval: How often to update the sensor"},{"location":"watchdog/#lambda-c-code-to-determine-the-reset-reason","text":"","title":"lambda: C++ code to determine the reset reason"},{"location":"watchdog/#-_7","text":"text_sensor: # brief Human-readable reset reason tracking # details # - Exposes the last reset reason as a readable string # - Uses esp_reset_reason() to determine cause - platform: template name: \"Reset Reason\" # name Sensor name for reset reason id: reset_reason_text # id Sensor ID icon: \"mdi:restart\" update_interval: never # Set once on boot lambda: |- int reason = esp_reset_reason(); switch(reason) { case 1: return {\"Power-on reset\"}; case 3: return {\"Software reset\"}; case 4: return {\"Watchdog reset\"}; case 5: return {\"Deep sleep wake\"}; case 6: return {\"Brownout reset\"}; case 7: return {\"JTAG reset\"}; default: return {\"Unknown reset (\" + to_string(reason) + \")\"}; }","title":"------------------------------------------------------------------------------"},{"location":"watchdog/#-_8","text":"","title":"------------------------------------------------------------------------------"},{"location":"watchdog/#watchdog-monitoring-sensors","text":"","title":"Watchdog monitoring sensors"},{"location":"watchdog/#-defines-template-sensors-for-reliability-and-diagnostics","text":"","title":"- Defines template sensors for reliability and diagnostics:"},{"location":"watchdog/#-watchdog-reset-counter-tracks-number-of-watchdog-resets-since-boot","text":"","title":"- Watchdog reset counter: Tracks number of watchdog resets since boot."},{"location":"watchdog/#-last-reset-code-exposes-the-raw-reset-reason-code-for-advanced-troubleshooting","text":"","title":"- Last reset code: Exposes the raw reset reason code for advanced troubleshooting."},{"location":"watchdog/#-system-health-score-calculates-a-health-score-based-on-uptime-and-reset-frequency","text":"","title":"- System health score: Calculates a health score based on uptime and reset frequency."},{"location":"watchdog/#-these-sensors-provide-insight-into-system-stability-and-help-with-proactive-maintenance","text":"","title":"- These sensors provide insight into system stability and help with proactive maintenance."},{"location":"watchdog/#-parameters-per-sensor","text":"","title":"- Parameters (per sensor):"},{"location":"watchdog/#name-sensor-name","text":"","title":"name: Sensor name"},{"location":"watchdog/#id-sensor-id_1","text":"","title":"id: Sensor ID"},{"location":"watchdog/#unit_of_measurement-unit-for-sensor-value","text":"","title":"unit_of_measurement: Unit for sensor value"},{"location":"watchdog/#accuracy_decimals-number-of-decimals-to-report","text":"","title":"accuracy_decimals: Number of decimals to report"},{"location":"watchdog/#icon-icon-for-home-assistant_1","text":"","title":"icon: Icon for Home Assistant"},{"location":"watchdog/#update_interval-how-often-to-update-the-sensor_1","text":"","title":"update_interval: How often to update the sensor"},{"location":"watchdog/#lambda-c-code-for-sensor-value","text":"","title":"lambda: C++ code for sensor value"},{"location":"watchdog/#-_9","text":"sensor: # Watchdog reset counter for reliability tracking # - Counts watchdog resets since boot - platform: template name: \"Watchdog Resets\" # name Sensor name for reset counter id: watchdog_reset_counter # id Sensor ID unit_of_measurement: \"resets\" accuracy_decimals: 0 icon: \"mdi:counter\" update_interval: 60s # Check once per minute lambda: |- // Count watchdog resets since boot static int reset_count = 0; if (esp_reset_reason() == 4) { reset_count++; } return reset_count; # Raw reset reason code for advanced diagnostics # - Exposes the raw reset reason code for troubleshooting - platform: template name: \"Last Reset Code\" # name Sensor name for raw code id: last_reset_reason_code # id Sensor ID unit_of_measurement: \"\" accuracy_decimals: 0 icon: \"mdi:information\" update_interval: never # Set once on boot lambda: |- return esp_reset_reason(); # System health score based on reset frequency # - Calculates a health score based on uptime and reset frequency - platform: template name: \"System Health Score\" # name Sensor name for health score id: system_health_score # id Sensor ID unit_of_measurement: \"%\" accuracy_decimals: 1 icon: \"mdi:heart-pulse\" update_interval: 300s # Update every 5 minutes lambda: |- // Calculate health score based on uptime and reset frequency float uptime_hours = id(uptime_sensor).state / 3600.0; int reset_count = id(watchdog_reset_counter).state; if (uptime_hours < 1.0) return 100.0; float health = 100.0 - (reset_count * 10.0); if (uptime_hours > 24.0) health += 5.0; return max(0.0f, min(100.0f, health));","title":"------------------------------------------------------------------------------"},{"location":"watchdog/#-_10","text":"","title":"------------------------------------------------------------------------------"},{"location":"watchdog/#software-controlled-system-restart-for-remote-troubleshooting","text":"","title":"Software-controlled system restart for remote troubleshooting"},{"location":"watchdog/#-allows-remote-restart-of-the-esp32-via-home-assistant-or-api","text":"","title":"- Allows remote restart of the ESP32 via Home Assistant or API"},{"location":"watchdog/#-physical-hardware-reset-available-via-external-button-wired-to-esp32-en-pin","text":"","title":"- Physical hardware reset available via external button wired to ESP32 EN pin"},{"location":"watchdog/#note-physical-hardware-reset-available-via-external-button-wired-to-esp32-en-pin","text":"","title":"Note: Physical hardware reset available via external button wired to ESP32 EN pin"},{"location":"watchdog/#-_11","text":"switch: - platform: restart name: \"System Restart\" # name Switch name for restart id: system_restart_switch # id Switch ID icon: \"mdi:restart\"","title":"------------------------------------------------------------------------------"},{"location":"web_server/","text":"Component: web_server \u00b6 Source: /cygdrive/c/cygwin64/home/rhendel/git/PumpHouseBoss/common/web_server.yaml \u00b6 Generated: Sun, Jul 27, 2025 11:33:46 PM \u00b6 ------------------------------------------------------------------------------ \u00b6 File: web_server.yaml \u00b6 File Type: ESPHome YAML Include \u00b6 Purpose: Common ESPHome Web Server subsystem configuration \u00b6 Version: 0.7.0 \u00b6 Date: 2025-07-24 \u00b6 Author: Roland Tembo Hendel rhendel@nexuslogic.com \u00b6 \u00b6 Description: Web server configuration for ESPHome nodes. \u00b6 \u00b6 License: GNU General Public License v3.0 \u00b6 SPDX-License-Identifier: GPL-3.0-or-later \u00b6 Copyright: (c) 2025 Roland Tembo Hendel \u00b6 This program is free software: you can redistribute it and/or \u00b6 modify it under the terms of the GNU General Public License. \u00b6 ------------------------------------------------------------------------------ \u00b6 ------------------------------------------------------------------------------ \u00b6 YAML linter configuration \u00b6 - Disables quoted-strings rule for improved readability \u00b6 ------------------------------------------------------------------------------ \u00b6 yamllint disable rule:quoted-strings \u00b6 ------------------------------------------------------------------------------ \u00b6 ESPHome embedded web server configuration \u00b6 - Enables the built-in web server for device diagnostics and control \u00b6 - Provides HTTP authentication using secrets for security \u00b6 - Accessible via browser on the configured port \u00b6 - Parameters: \u00b6 port: HTTP port for web access \u00b6 auth.username: Web interface username \u00b6 auth.password: Web interface password \u00b6 ------------------------------------------------------------------------------ \u00b6 web_server: port: 80 # port HTTP port for web access auth: username: !secret web_user # username Web interface username password: !secret web_password # password Web interface password","title":"Web Server"},{"location":"web_server/#component-web_server","text":"","title":"Component: web_server"},{"location":"web_server/#source-cygdriveccygwin64homerhendelgitpumphousebosscommonweb_serveryaml","text":"","title":"Source: /cygdrive/c/cygwin64/home/rhendel/git/PumpHouseBoss/common/web_server.yaml"},{"location":"web_server/#generated-sun-jul-27-2025-113346-pm","text":"","title":"Generated: Sun, Jul 27, 2025 11:33:46 PM"},{"location":"web_server/#-","text":"","title":"------------------------------------------------------------------------------"},{"location":"web_server/#file-web_serveryaml","text":"","title":"File: web_server.yaml"},{"location":"web_server/#file-type-esphome-yaml-include","text":"","title":"File Type: ESPHome YAML Include"},{"location":"web_server/#purpose-common-esphome-web-server-subsystem-configuration","text":"","title":"Purpose: Common ESPHome Web Server subsystem configuration"},{"location":"web_server/#version-070","text":"","title":"Version: 0.7.0"},{"location":"web_server/#date-2025-07-24","text":"","title":"Date: 2025-07-24"},{"location":"web_server/#author-roland-tembo-hendel-rhendelnexuslogiccom","text":"","title":"Author: Roland Tembo Hendel &#114;&#104;&#101;&#110;&#100;&#101;&#108;&#64;&#110;&#101;&#120;&#117;&#115;&#108;&#111;&#103;&#105;&#99;&#46;&#99;&#111;&#109;"},{"location":"web_server/#_1","text":"","title":""},{"location":"web_server/#description-web-server-configuration-for-esphome-nodes","text":"","title":"Description: Web server configuration for ESPHome nodes."},{"location":"web_server/#_2","text":"","title":""},{"location":"web_server/#license-gnu-general-public-license-v30","text":"","title":"License: GNU General Public License v3.0"},{"location":"web_server/#spdx-license-identifier-gpl-30-or-later","text":"","title":"SPDX-License-Identifier: GPL-3.0-or-later"},{"location":"web_server/#copyright-c-2025-roland-tembo-hendel","text":"","title":"Copyright: (c) 2025 Roland Tembo Hendel"},{"location":"web_server/#this-program-is-free-software-you-can-redistribute-it-andor","text":"","title":"This program is free software: you can redistribute it and/or"},{"location":"web_server/#modify-it-under-the-terms-of-the-gnu-general-public-license","text":"","title":"modify it under the terms of the GNU General Public License."},{"location":"web_server/#-_1","text":"","title":"------------------------------------------------------------------------------"},{"location":"web_server/#-_2","text":"","title":"------------------------------------------------------------------------------"},{"location":"web_server/#yaml-linter-configuration","text":"","title":"YAML linter configuration"},{"location":"web_server/#-disables-quoted-strings-rule-for-improved-readability","text":"","title":"- Disables quoted-strings rule for improved readability"},{"location":"web_server/#-_3","text":"","title":"------------------------------------------------------------------------------"},{"location":"web_server/#yamllint-disable-rulequoted-strings","text":"","title":"yamllint disable rule:quoted-strings"},{"location":"web_server/#-_4","text":"","title":"------------------------------------------------------------------------------"},{"location":"web_server/#esphome-embedded-web-server-configuration","text":"","title":"ESPHome embedded web server configuration"},{"location":"web_server/#-enables-the-built-in-web-server-for-device-diagnostics-and-control","text":"","title":"- Enables the built-in web server for device diagnostics and control"},{"location":"web_server/#-provides-http-authentication-using-secrets-for-security","text":"","title":"- Provides HTTP authentication using secrets for security"},{"location":"web_server/#-accessible-via-browser-on-the-configured-port","text":"","title":"- Accessible via browser on the configured port"},{"location":"web_server/#-parameters","text":"","title":"- Parameters:"},{"location":"web_server/#port-http-port-for-web-access","text":"","title":"port: HTTP port for web access"},{"location":"web_server/#authusername-web-interface-username","text":"","title":"auth.username: Web interface username"},{"location":"web_server/#authpassword-web-interface-password","text":"","title":"auth.password: Web interface password"},{"location":"web_server/#-_5","text":"web_server: port: 80 # port HTTP port for web access auth: username: !secret web_user # username Web interface username password: !secret web_password # password Web interface password","title":"------------------------------------------------------------------------------"},{"location":"wifi/","text":"Component: wifi \u00b6 Source: /cygdrive/c/cygwin64/home/rhendel/git/PumpHouseBoss/common/wifi.yaml \u00b6 Generated: Sun, Jul 27, 2025 11:33:46 PM \u00b6 ------------------------------------------------------------------------------ \u00b6 File: wifi.yaml \u00b6 File Type: ESPHome YAML Include \u00b6 Purpose: Common ESPHome WiFi subsystem configuration \u00b6 Version: 0.7.0 \u00b6 Date: 2025-07-24 \u00b6 Author: Roland Tembo Hendel rhendel@nexuslogic.com \u00b6 \u00b6 Description: WiFi configuration for ESPHome nodes. \u00b6 \u00b6 License: GNU General Public License v3.0 \u00b6 SPDX-License-Identifier: GPL-3.0-or-later \u00b6 Copyright: (c) 2025 Roland Tembo Hendel \u00b6 This program is free software: you can redistribute it and/or \u00b6 modify it under the terms of the GNU General Public License. \u00b6 ------------------------------------------------------------------------------ \u00b6 ------------------------------------------------------------------------------ \u00b6 YAML linter configuration \u00b6 - Disables quoted-strings rule for improved readability \u00b6 ------------------------------------------------------------------------------ \u00b6 yamllint disable rule:quoted-strings \u00b6 ------------------------------------------------------------------------------ \u00b6 Wi-Fi client and fallback AP configuration \u00b6 - Configures Wi-Fi client for normal operation \u00b6 - Enables fallback Access Point (AP) if Wi-Fi connection fails \u00b6 - Uses secrets.yaml for all sensitive credentials \u00b6 - Supports power management and connection reliability options \u00b6 - Parameters: \u00b6 ssid: Wi-Fi SSID (from secrets.yaml) \u00b6 password: Wi-Fi password (from secrets.yaml) \u00b6 power_save_mode: Wi-Fi power save mode \u00b6 fast_connect: Whether to wait for DHCP before continuing \u00b6 output_power: Transmit power in dBm \u00b6 reboot_timeout: Reboot if connection not established \u00b6 ap: \u00b6 ssid: Fallback AP SSID \u00b6 password: Fallback AP password (from secrets.yaml) \u00b6 ------------------------------------------------------------------------------ \u00b6 wifi: ssid: !secret wifi_ssid # ssid Wi-Fi SSID (from secrets.yaml) password: !secret wifi_password # password Wi-Fi password (from secrets.yaml) power_save_mode: none # power_save_mode Disable Wi-Fi power save fast_connect: false # fast_connect Wait for DHCP before continuing output_power: 20.0 # output_power Transmit power in dBm reboot_timeout: 30s # reboot_timeout Reboot if connection not established # -------------------------------------------------------------------------- # Fallback Access Point when Wi-Fi fails # - Provides a backup AP for device recovery if client connection fails # - AP SSID is auto-generated using node_name # - Password is stored in secrets.yaml # -------------------------------------------------------------------------- ap: ssid: \"${node_name} Fallback\" # ssid Auto-generated AP name using node_name password: !secret fallback_password # password Separate fallback password from secrets.yaml","title":"WiFi"},{"location":"wifi/#component-wifi","text":"","title":"Component: wifi"},{"location":"wifi/#source-cygdriveccygwin64homerhendelgitpumphousebosscommonwifiyaml","text":"","title":"Source: /cygdrive/c/cygwin64/home/rhendel/git/PumpHouseBoss/common/wifi.yaml"},{"location":"wifi/#generated-sun-jul-27-2025-113346-pm","text":"","title":"Generated: Sun, Jul 27, 2025 11:33:46 PM"},{"location":"wifi/#-","text":"","title":"------------------------------------------------------------------------------"},{"location":"wifi/#file-wifiyaml","text":"","title":"File: wifi.yaml"},{"location":"wifi/#file-type-esphome-yaml-include","text":"","title":"File Type: ESPHome YAML Include"},{"location":"wifi/#purpose-common-esphome-wifi-subsystem-configuration","text":"","title":"Purpose: Common ESPHome WiFi subsystem configuration"},{"location":"wifi/#version-070","text":"","title":"Version: 0.7.0"},{"location":"wifi/#date-2025-07-24","text":"","title":"Date: 2025-07-24"},{"location":"wifi/#author-roland-tembo-hendel-rhendelnexuslogiccom","text":"","title":"Author: Roland Tembo Hendel &#114;&#104;&#101;&#110;&#100;&#101;&#108;&#64;&#110;&#101;&#120;&#117;&#115;&#108;&#111;&#103;&#105;&#99;&#46;&#99;&#111;&#109;"},{"location":"wifi/#_1","text":"","title":""},{"location":"wifi/#description-wifi-configuration-for-esphome-nodes","text":"","title":"Description: WiFi configuration for ESPHome nodes."},{"location":"wifi/#_2","text":"","title":""},{"location":"wifi/#license-gnu-general-public-license-v30","text":"","title":"License: GNU General Public License v3.0"},{"location":"wifi/#spdx-license-identifier-gpl-30-or-later","text":"","title":"SPDX-License-Identifier: GPL-3.0-or-later"},{"location":"wifi/#copyright-c-2025-roland-tembo-hendel","text":"","title":"Copyright: (c) 2025 Roland Tembo Hendel"},{"location":"wifi/#this-program-is-free-software-you-can-redistribute-it-andor","text":"","title":"This program is free software: you can redistribute it and/or"},{"location":"wifi/#modify-it-under-the-terms-of-the-gnu-general-public-license","text":"","title":"modify it under the terms of the GNU General Public License."},{"location":"wifi/#-_1","text":"","title":"------------------------------------------------------------------------------"},{"location":"wifi/#-_2","text":"","title":"------------------------------------------------------------------------------"},{"location":"wifi/#yaml-linter-configuration","text":"","title":"YAML linter configuration"},{"location":"wifi/#-disables-quoted-strings-rule-for-improved-readability","text":"","title":"- Disables quoted-strings rule for improved readability"},{"location":"wifi/#-_3","text":"","title":"------------------------------------------------------------------------------"},{"location":"wifi/#yamllint-disable-rulequoted-strings","text":"","title":"yamllint disable rule:quoted-strings"},{"location":"wifi/#-_4","text":"","title":"------------------------------------------------------------------------------"},{"location":"wifi/#wi-fi-client-and-fallback-ap-configuration","text":"","title":"Wi-Fi client and fallback AP configuration"},{"location":"wifi/#-configures-wi-fi-client-for-normal-operation","text":"","title":"- Configures Wi-Fi client for normal operation"},{"location":"wifi/#-enables-fallback-access-point-ap-if-wi-fi-connection-fails","text":"","title":"- Enables fallback Access Point (AP) if Wi-Fi connection fails"},{"location":"wifi/#-uses-secretsyaml-for-all-sensitive-credentials","text":"","title":"- Uses secrets.yaml for all sensitive credentials"},{"location":"wifi/#-supports-power-management-and-connection-reliability-options","text":"","title":"- Supports power management and connection reliability options"},{"location":"wifi/#-parameters","text":"","title":"- Parameters:"},{"location":"wifi/#ssid-wi-fi-ssid-from-secretsyaml","text":"","title":"ssid: Wi-Fi SSID (from secrets.yaml)"},{"location":"wifi/#password-wi-fi-password-from-secretsyaml","text":"","title":"password: Wi-Fi password (from secrets.yaml)"},{"location":"wifi/#power_save_mode-wi-fi-power-save-mode","text":"","title":"power_save_mode: Wi-Fi power save mode"},{"location":"wifi/#fast_connect-whether-to-wait-for-dhcp-before-continuing","text":"","title":"fast_connect: Whether to wait for DHCP before continuing"},{"location":"wifi/#output_power-transmit-power-in-dbm","text":"","title":"output_power: Transmit power in dBm"},{"location":"wifi/#reboot_timeout-reboot-if-connection-not-established","text":"","title":"reboot_timeout: Reboot if connection not established"},{"location":"wifi/#ap","text":"","title":"ap:"},{"location":"wifi/#ssid-fallback-ap-ssid","text":"","title":"ssid: Fallback AP SSID"},{"location":"wifi/#password-fallback-ap-password-from-secretsyaml","text":"","title":"password: Fallback AP password (from secrets.yaml)"},{"location":"wifi/#-_5","text":"wifi: ssid: !secret wifi_ssid # ssid Wi-Fi SSID (from secrets.yaml) password: !secret wifi_password # password Wi-Fi password (from secrets.yaml) power_save_mode: none # power_save_mode Disable Wi-Fi power save fast_connect: false # fast_connect Wait for DHCP before continuing output_power: 20.0 # output_power Transmit power in dBm reboot_timeout: 30s # reboot_timeout Reboot if connection not established # -------------------------------------------------------------------------- # Fallback Access Point when Wi-Fi fails # - Provides a backup AP for device recovery if client connection fails # - AP SSID is auto-generated using node_name # - Password is stored in secrets.yaml # -------------------------------------------------------------------------- ap: ssid: \"${node_name} Fallback\" # ssid Auto-generated AP name using node_name password: !secret fallback_password # password Separate fallback password from secrets.yaml","title":"------------------------------------------------------------------------------"},{"location":"wiki/Contact-and-Support/","text":"Contact & Support \u00b6 See also: README.md | Wiki Home | Overview | Getting Started | Hardware Overview | Firmware & Configuration | Usage & Troubleshooting | Developer Guide | FAQ For bug reports, questions, or contributions: - Open an issue or pull request on GitHub - Contact the maintainer via the email listed in the repository profile - See the project wiki for more documentation and help","title":"Contact &amp; Support"},{"location":"wiki/Contact-and-Support/#contact-support","text":"See also: README.md | Wiki Home | Overview | Getting Started | Hardware Overview | Firmware & Configuration | Usage & Troubleshooting | Developer Guide | FAQ For bug reports, questions, or contributions: - Open an issue or pull request on GitHub - Contact the maintainer via the email listed in the repository profile - See the project wiki for more documentation and help","title":"Contact &amp; Support"},{"location":"wiki/Developer-Guide/","text":"Developer Guide \u00b6 See also: README.md | Wiki Home | Overview | Getting Started | Hardware Overview | Firmware & Configuration | Usage & Troubleshooting | FAQ | Contact & Support This section covers contribution standards, automation, and coding conventions for PumpHouseBoss. Contribution Standards \u00b6 Follow CONTRIBUTING.md Use clear commit messages and document changes Automation & Makefile Targets \u00b6 Use make help to see all available targets Document new targets in the Makefile and docs Coding Conventions \u00b6 See STANDARDS.md for style and best practices For more, see the full documentation site .","title":"Developer Guide"},{"location":"wiki/Developer-Guide/#developer-guide","text":"See also: README.md | Wiki Home | Overview | Getting Started | Hardware Overview | Firmware & Configuration | Usage & Troubleshooting | FAQ | Contact & Support This section covers contribution standards, automation, and coding conventions for PumpHouseBoss.","title":"Developer Guide"},{"location":"wiki/Developer-Guide/#contribution-standards","text":"Follow CONTRIBUTING.md Use clear commit messages and document changes","title":"Contribution Standards"},{"location":"wiki/Developer-Guide/#automation-makefile-targets","text":"Use make help to see all available targets Document new targets in the Makefile and docs","title":"Automation &amp; Makefile Targets"},{"location":"wiki/Developer-Guide/#coding-conventions","text":"See STANDARDS.md for style and best practices For more, see the full documentation site .","title":"Coding Conventions"},{"location":"wiki/FAQ/","text":"FAQ \u00b6 See also: README.md | Wiki Home | Overview | Getting Started | Hardware Overview | Firmware & Configuration | Usage & Troubleshooting | Developer Guide | Contact & Support Q: Build fails due to missing secrets or configuration files. \u00b6 A: Ensure you have copied and edited the secrets and configuration templates as described in the README. Q: Upload or flash fails. \u00b6 A: Check device connection, correct serial port, and user permissions. Q: Logging does not work or logs are empty. \u00b6 A: Make sure the device is running and you are using the correct log target. Try make logs-fresh for a clean session. Q: Wrong variant or hardware configuration. \u00b6 A: Edit your configuration files to select the correct variant and hardware options. For more troubleshooting, see the Usage & Troubleshooting section or open an issue on GitHub.","title":"FAQ"},{"location":"wiki/FAQ/#faq","text":"See also: README.md | Wiki Home | Overview | Getting Started | Hardware Overview | Firmware & Configuration | Usage & Troubleshooting | Developer Guide | Contact & Support","title":"FAQ"},{"location":"wiki/FAQ/#q-build-fails-due-to-missing-secrets-or-configuration-files","text":"A: Ensure you have copied and edited the secrets and configuration templates as described in the README.","title":"Q: Build fails due to missing secrets or configuration files."},{"location":"wiki/FAQ/#q-upload-or-flash-fails","text":"A: Check device connection, correct serial port, and user permissions.","title":"Q: Upload or flash fails."},{"location":"wiki/FAQ/#q-logging-does-not-work-or-logs-are-empty","text":"A: Make sure the device is running and you are using the correct log target. Try make logs-fresh for a clean session.","title":"Q: Logging does not work or logs are empty."},{"location":"wiki/FAQ/#q-wrong-variant-or-hardware-configuration","text":"A: Edit your configuration files to select the correct variant and hardware options. For more troubleshooting, see the Usage & Troubleshooting section or open an issue on GitHub.","title":"Q: Wrong variant or hardware configuration."},{"location":"wiki/Firmware-and-Configuration/","text":"Firmware & Configuration \u00b6 See also: README.md | Wiki Home | Overview | Getting Started | Hardware Overview | Usage & Troubleshooting | Developer Guide | FAQ | Contact & Support This section covers YAML configuration, secrets management, and the build/upload process. Modular YAML Configuration \u00b6 Device and variant-specific YAML files Includes for common hardware and features Secrets Management \u00b6 Use common/secrets.template.yaml as a base Never commit real secrets to the repo Build & Upload \u00b6 Use Makefile targets: make build , make upload , make run See Getting Started for setup For advanced configuration, see CONTRIBUTING.md .","title":"Firmware &amp; Configuration"},{"location":"wiki/Firmware-and-Configuration/#firmware-configuration","text":"See also: README.md | Wiki Home | Overview | Getting Started | Hardware Overview | Usage & Troubleshooting | Developer Guide | FAQ | Contact & Support This section covers YAML configuration, secrets management, and the build/upload process.","title":"Firmware &amp; Configuration"},{"location":"wiki/Firmware-and-Configuration/#modular-yaml-configuration","text":"Device and variant-specific YAML files Includes for common hardware and features","title":"Modular YAML Configuration"},{"location":"wiki/Firmware-and-Configuration/#secrets-management","text":"Use common/secrets.template.yaml as a base Never commit real secrets to the repo","title":"Secrets Management"},{"location":"wiki/Firmware-and-Configuration/#build-upload","text":"Use Makefile targets: make build , make upload , make run See Getting Started for setup For advanced configuration, see CONTRIBUTING.md .","title":"Build &amp; Upload"},{"location":"wiki/Getting-Started/","text":"Getting Started \u00b6 See also: README.md | Wiki Home | Overview | Hardware Overview | Firmware & Configuration | Usage & Troubleshooting | Developer Guide | FAQ | Contact & Support Welcome to PumpHouseBoss! This guide will help you set up your development environment, configure your first device, and build and upload firmware. 1. Clone the Repository \u00b6 git clone https://github.com/hucklesberries/PumpHouseBoss.git cd PumpHouseBoss 2. Review Documentation \u00b6 Read the README.md for project overview and setup. Review CONTRIBUTING.md for standards and workflow. 3. Configure Your Build \u00b6 Copy and edit the secrets and configuration templates as described in the README. 4. Build, Flash, and Test \u00b6 Use the Makefile targets: make build , make upload , make run , etc. 5. Troubleshooting \u00b6 See the Usage & Troubleshooting section for common issues. For more details, see the full documentation site .","title":"Getting Started"},{"location":"wiki/Getting-Started/#getting-started","text":"See also: README.md | Wiki Home | Overview | Hardware Overview | Firmware & Configuration | Usage & Troubleshooting | Developer Guide | FAQ | Contact & Support Welcome to PumpHouseBoss! This guide will help you set up your development environment, configure your first device, and build and upload firmware.","title":"Getting Started"},{"location":"wiki/Getting-Started/#1-clone-the-repository","text":"git clone https://github.com/hucklesberries/PumpHouseBoss.git cd PumpHouseBoss","title":"1. Clone the Repository"},{"location":"wiki/Getting-Started/#2-review-documentation","text":"Read the README.md for project overview and setup. Review CONTRIBUTING.md for standards and workflow.","title":"2. Review Documentation"},{"location":"wiki/Getting-Started/#3-configure-your-build","text":"Copy and edit the secrets and configuration templates as described in the README.","title":"3. Configure Your Build"},{"location":"wiki/Getting-Started/#4-build-flash-and-test","text":"Use the Makefile targets: make build , make upload , make run , etc.","title":"4. Build, Flash, and Test"},{"location":"wiki/Getting-Started/#5-troubleshooting","text":"See the Usage & Troubleshooting section for common issues. For more details, see the full documentation site .","title":"5. Troubleshooting"},{"location":"wiki/Hardware-Overview/","text":"Hardware Overview \u00b6 See also: README.md | Wiki Home | Overview | Getting Started | Firmware & Configuration | Usage & Troubleshooting | Developer Guide | FAQ | Contact & Support PumpHouseBoss supports multiple hardware variants and configurations. This section documents supported boards, sensors, displays, and wiring. Supported Variants \u00b6 Standard (ESP32) Professional (ESP32-S3) Pinout Maps \u00b6 See the common/ and variants/ directories for YAML pinout files. Sensors & Peripherals \u00b6 Flow sensors, solenoids, LCD displays, status LEDs, buttons, and more. Display Options \u00b6 4-line LCD (I2C) Optional TFT display (future) For detailed hardware guides, see the Hardware Guides variants/ in the repo.","title":"Hardware Overview"},{"location":"wiki/Hardware-Overview/#hardware-overview","text":"See also: README.md | Wiki Home | Overview | Getting Started | Firmware & Configuration | Usage & Troubleshooting | Developer Guide | FAQ | Contact & Support PumpHouseBoss supports multiple hardware variants and configurations. This section documents supported boards, sensors, displays, and wiring.","title":"Hardware Overview"},{"location":"wiki/Hardware-Overview/#supported-variants","text":"Standard (ESP32) Professional (ESP32-S3)","title":"Supported Variants"},{"location":"wiki/Hardware-Overview/#pinout-maps","text":"See the common/ and variants/ directories for YAML pinout files.","title":"Pinout Maps"},{"location":"wiki/Hardware-Overview/#sensors-peripherals","text":"Flow sensors, solenoids, LCD displays, status LEDs, buttons, and more.","title":"Sensors &amp; Peripherals"},{"location":"wiki/Hardware-Overview/#display-options","text":"4-line LCD (I2C) Optional TFT display (future) For detailed hardware guides, see the Hardware Guides variants/ in the repo.","title":"Display Options"},{"location":"wiki/Home/","text":"PumpHouseBoss Wiki Home \u00b6 See also: README | Overview | Getting Started | Hardware Overview | Firmware & Configuration | Usage & Troubleshooting | Developer Guide | FAQ | Contact & Support Welcome to the PumpHouseBoss project wiki! PumpHouseBoss is an ESPHome-based system for monitoring and managing commercial or residential pumphouse and water distribution/filtration systems. This wiki provides in-depth guides, hardware and firmware documentation, troubleshooting, and collaboration resources for users and contributors. Quick Links \u00b6 Getting Started Hardware Overview Firmware & Configuration Usage & Troubleshooting Developer Guide FAQ Contact & Support Table of Contents \u00b6 Welcome & Project Summary Getting Started Hardware Overview Firmware & Configuration Usage & Troubleshooting Developer Guide FAQ Contact & Support Getting Started \u00b6 How to clone, configure, and build your first PumpHouseBoss device See the main README for quick setup instructions Hardware Overview \u00b6 Supported variants (Standard, Professional) Pinout maps, sensors, and display options Firmware and Configuration \u00b6 Modular YAML configuration Secrets management Build and upload process Usage and Troubleshooting \u00b6 Logging and monitoring Common issues and solutions Regression testing Developer Guide \u00b6 Contribution standards Automation and Makefile targets Coding conventions FAQ \u00b6 Answers to common questions about setup, usage, and development Contact and Support \u00b6 Open an issue or pull request on GitHub See the project wiki for more documentation and help (coming soon) For more details, see the full documentation site .","title":"PumpHouseBoss Wiki Home"},{"location":"wiki/Home/#pumphouseboss-wiki-home","text":"See also: README | Overview | Getting Started | Hardware Overview | Firmware & Configuration | Usage & Troubleshooting | Developer Guide | FAQ | Contact & Support Welcome to the PumpHouseBoss project wiki! PumpHouseBoss is an ESPHome-based system for monitoring and managing commercial or residential pumphouse and water distribution/filtration systems. This wiki provides in-depth guides, hardware and firmware documentation, troubleshooting, and collaboration resources for users and contributors.","title":"PumpHouseBoss Wiki Home"},{"location":"wiki/Home/#quick-links","text":"Getting Started Hardware Overview Firmware & Configuration Usage & Troubleshooting Developer Guide FAQ Contact & Support","title":"Quick Links"},{"location":"wiki/Home/#table-of-contents","text":"Welcome & Project Summary Getting Started Hardware Overview Firmware & Configuration Usage & Troubleshooting Developer Guide FAQ Contact & Support","title":"Table of Contents"},{"location":"wiki/Home/#getting-started","text":"How to clone, configure, and build your first PumpHouseBoss device See the main README for quick setup instructions","title":"Getting Started"},{"location":"wiki/Home/#hardware-overview","text":"Supported variants (Standard, Professional) Pinout maps, sensors, and display options","title":"Hardware Overview"},{"location":"wiki/Home/#firmware-and-configuration","text":"Modular YAML configuration Secrets management Build and upload process","title":"Firmware and Configuration"},{"location":"wiki/Home/#usage-and-troubleshooting","text":"Logging and monitoring Common issues and solutions Regression testing","title":"Usage and Troubleshooting"},{"location":"wiki/Home/#developer-guide","text":"Contribution standards Automation and Makefile targets Coding conventions","title":"Developer Guide"},{"location":"wiki/Home/#faq","text":"Answers to common questions about setup, usage, and development","title":"FAQ"},{"location":"wiki/Home/#contact-and-support","text":"Open an issue or pull request on GitHub See the project wiki for more documentation and help (coming soon) For more details, see the full documentation site .","title":"Contact and Support"},{"location":"wiki/Overview/","text":"Overview \u00b6 See also: README.md | Wiki Home | Getting Started | Hardware Overview | Firmware & Configuration | Usage & Troubleshooting | Developer Guide | FAQ | Contact & Support PumpHouseBoss is an ESPHome-based system for monitoring and managing pumphouse and water distribution/filtration systems. It is designed for both commercial and residential use, with modular hardware and firmware, robust automation, and comprehensive documentation. Features \u00b6 Over/under flow-rate detection, alerts, and alarms Automated solenoid control Manual emergency override Historical flow-rate/usage graphing Home Assistant integration LED status indications LCD display support Support for multiple MMUs (Monitor/Management Units) For a full feature list and technical details, see the README.md .","title":"Overview"},{"location":"wiki/Overview/#overview","text":"See also: README.md | Wiki Home | Getting Started | Hardware Overview | Firmware & Configuration | Usage & Troubleshooting | Developer Guide | FAQ | Contact & Support PumpHouseBoss is an ESPHome-based system for monitoring and managing pumphouse and water distribution/filtration systems. It is designed for both commercial and residential use, with modular hardware and firmware, robust automation, and comprehensive documentation.","title":"Overview"},{"location":"wiki/Overview/#features","text":"Over/under flow-rate detection, alerts, and alarms Automated solenoid control Manual emergency override Historical flow-rate/usage graphing Home Assistant integration LED status indications LCD display support Support for multiple MMUs (Monitor/Management Units) For a full feature list and technical details, see the README.md .","title":"Features"},{"location":"wiki/Usage-and-Troubleshooting/","text":"Usage & Troubleshooting \u00b6 See also: README.md | Wiki Home | Overview | Getting Started | Hardware Overview | Firmware & Configuration | Developer Guide | FAQ | Contact & Support This section provides guidance on using PumpHouseBoss and resolving common issues. Logging & Monitoring \u00b6 Use make logs , make logs-follow , and related targets Log files are stored in the logs/ directory Common Issues \u00b6 Build failures: Check for missing secrets/config files Upload failures: Check device connection and COMM_PATH Logging issues: Ensure device is running and correct log target is used Regression Testing \u00b6 Run make regression-test to validate builds For more help, see the FAQ or open an issue on GitHub.","title":"Usage &amp; Troubleshooting"},{"location":"wiki/Usage-and-Troubleshooting/#usage-troubleshooting","text":"See also: README.md | Wiki Home | Overview | Getting Started | Hardware Overview | Firmware & Configuration | Developer Guide | FAQ | Contact & Support This section provides guidance on using PumpHouseBoss and resolving common issues.","title":"Usage &amp; Troubleshooting"},{"location":"wiki/Usage-and-Troubleshooting/#logging-monitoring","text":"Use make logs , make logs-follow , and related targets Log files are stored in the logs/ directory","title":"Logging &amp; Monitoring"},{"location":"wiki/Usage-and-Troubleshooting/#common-issues","text":"Build failures: Check for missing secrets/config files Upload failures: Check device connection and COMM_PATH Logging issues: Ensure device is running and correct log target is used","title":"Common Issues"},{"location":"wiki/Usage-and-Troubleshooting/#regression-testing","text":"Run make regression-test to validate builds For more help, see the FAQ or open an issue on GitHub.","title":"Regression Testing"}]}