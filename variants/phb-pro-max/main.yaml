# ------------------------------------------------------------------------------
#  File:         main.yaml
#  File Type:    ESPHome Variant Configuration
#  Purpose:      Pumphouse System Monitor built on the ESP32S3 platform.
#  Version:      0.7.0
#  Date:         2025-07-24
#  Author:       Roland Tembo Hendel <rhendel@nexuslogic.com>
#
#  Description:  Functions include:
#                - Ingress and egress flow monitoring
#                - Alarms and alerts
#                - Modular YAML includes for board, display, network, OTA, logging, watchdog
#                - Home Assistant integration via ESPHome
#
#  License:      GNU General Public License v3.0
#                SPDX-License-Identifier: GPL-3.0-or-later
#  Copyright:    (c) 2025 Roland Tembo Hendel
#                This program is free software: you can redistribute it and/or
#                modify it under the terms of the GNU General Public License.
#
#  Note:         Co-developed with GitHub Copilot by OpenAI.
# ------------------------------------------------------------------------------

# ------------------------------------------------------------------------------
#  YAML linter configuration
#   - Disables quoted-strings rule for improved readability
# ------------------------------------------------------------------------------
# yamllint disable rule:quoted-strings


# ------------------------------------------------------------------------------
#  Node identity, version, and hardware pin assignments
#   - Provides substitutions for node name, friendly name, version, and key pins
#   - Used throughout the configuration for maintainability
#   - Parameters:
#       node_name: Node ID used in ESPHome and logs
#       friendly_name: Human-readable name for dashboards
#       version: Firmware version tag injected into logs and sensors
#       flow_sensor_pin: Primary flow sensor pulse counter input
#       test_output_pin: GPIO test and verification pin
#       watchdog_timeout: Hardware watchdog timeout period
#       watchdog_trigger_pin: External watchdog trigger output
#       watchdog_early_trigger: Early trigger before timeout
# ------------------------------------------------------------------------------
substitutions:
  chip_set: __PLATFORM__
  node_name: __NODE_NAME__
  friendly_name: __FRIENDLY_NAME__
  version: __VERSION__
  watchdog_timeout: "30s"
  watchdog_trigger_pin: "GPIO07"
  watchdog_early_trigger: "25s"

# ------------------------------------------------------------------------------
#  Common package includes for modular configuration
#   - Modularizes board, display, network, OTA, logging, and watchdog config
#   - Parameters:
#       esp32: ESP32 board and framework config
#       display: Display configuration (e.g., ST7789V panel)
#       wifi: Wi-Fi credentials, static IP, and fallback
#       ota: OTA settings (port, auth)
#       web: Web interface (http://<device>.local)
#       logging: USB/UART logging config (level, baud)
#       watchdog: System reliability watchdog component
# ------------------------------------------------------------------------------
packages:
  esp32s3:  !include __PROJECT_ROOT__/common/__PLATFORM__.yaml
  display:  !include __PROJECT_ROOT__/common/display_st7789.yaml
  wifi:     !include __PROJECT_ROOT__/common/wifi.yaml
  ota:      !include __PROJECT_ROOT__/common/ota.yaml
  web:      !include __PROJECT_ROOT__/common/web_server.yaml
  logging:  !include __PROJECT_ROOT__/common/logging.yaml
  watchdog: !include __PROJECT_ROOT__/common/watchdog.yaml

# ------------------------------------------------------------------------------
#  ESPHome-specific metadata and on_boot logic
#   - Sets node name and friendly name
#   - Publishes firmware version to Home Assistant on boot
#   - Parameters:
#       name: Node name
#       friendly_name: Human-readable name
#       on_boot: Actions to perform on boot
# ------------------------------------------------------------------------------
esphome:
  name: __NODE_NAME__
  friendly_name: __FRIENDLY_NAME__
  on_boot:
    priority: -100
    then:
      - text_sensor.template.publish:
          id: firmware_version
          state: version         # Publishes version string to Home Assistant on boot

# ------------------------------------------------------------------------------
#  Template sensor exposing firmware version as Home Assistant text_sensor
#   - Publishes the firmware version string to Home Assistant
#   - Parameters:
#       name: Sensor name
#       id: Sensor ID
#       icon: Home Assistant icon
#       update_interval: Update frequency
#       lambda: Lambda function for value
# ------------------------------------------------------------------------------
text_sensor:
  - platform: template
    name: "Firmware Version"      # User-visible sensor name in HA
    id: firmware_version
    icon: "mdi:tag"
    update_interval: never        # Static value set only on boot
    lambda: |-
      return {"__VERSION__"};

# ------------------------------------------------------------------------------
#  Uptime and flow rate sensors (hall-effect pulse counter)
#   - Uptime sensor: seconds since boot
#   - Flow rate sensor: hall-effect pulse counter, configurable input pin
#   - Calibration factor converts pulses to L/min
#   - Parameters:
#       platform: Sensor platform (uptime, pulse_counter)
#       pin: Input pin for pulse counter
#       name: Sensor name
#       id: Sensor ID
#       update_interval: Update frequency
#       count_mode: Pulse counting mode
#       internal_filter: Filter for pulse input
#       unit_of_measurement: Measurement units
#       accuracy_decimals: Number of decimals
#       filters: Calibration factor
# ------------------------------------------------------------------------------
sensor:
  - platform: uptime
    name: "Uptime"                # Uptime in seconds since boot
    id: uptime_sensor
